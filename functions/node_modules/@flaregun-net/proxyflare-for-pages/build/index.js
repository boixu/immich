var __create = Object.create;
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __getProtoOf = Object.getPrototypeOf;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __esm = (fn, res) => function __init() {
  return fn && (res = (0, fn[__getOwnPropNames(fn)[0]])(fn = 0)), res;
};
var __commonJS = (cb, mod) => function __require() {
  return mod || (0, cb[__getOwnPropNames(cb)[0]])((mod = { exports: {} }).exports, mod), mod.exports;
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(
  isNodeMode || !mod || !mod.__esModule ? __defProp(target, "default", { value: mod, enumerable: true }) : target,
  mod
));

// ../node_modules/@flaregun-net/app-utils/build/constants.js
var require_constants = __commonJS({
  "../node_modules/@flaregun-net/app-utils/build/constants.js"(exports) {
    "use strict";
    init_functionsRoutes_0_6627680816661201();
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.getFlaregunApiOrigin = exports.getDevHeaders = exports.devConfig = exports.versionHash = exports.isDev = void 0;
    try {
      exports.isDev = DEVELOPMENT;
    } catch (error) {
      exports.isDev = false;
    }
    try {
      exports.versionHash = VERSION_HASH.version;
    } catch (error) {
      exports.versionHash = "Parsing error";
    }
    try {
      exports.devConfig = DEV_CONFIG;
    } catch (error) {
      exports.devConfig = null;
    }
    var getDevHeaders = (appName) => ({
      hash: `${appName}-hash`,
      error: `${appName}-error`
    });
    exports.getDevHeaders = getDevHeaders;
    var getFlaregunApiOrigin = (isDev) => isDev ? `https://staging-api.flaregun.net` : `https://api.flaregun.net`;
    exports.getFlaregunApiOrigin = getFlaregunApiOrigin;
  }
});

// ../node_modules/@flaregun-net/app-utils/build/utils/renderDevelopmentMode.js
var require_renderDevelopmentMode = __commonJS({
  "../node_modules/@flaregun-net/app-utils/build/utils/renderDevelopmentMode.js"(exports) {
    "use strict";
    init_functionsRoutes_0_6627680816661201();
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.renderDevelopmentMode = void 0;
    var constants_1 = require_constants();
    var renderDevelopmentMode = (container, body, options) => {
      const devHeaders = (0, constants_1.getDevHeaders)(container.appName);
      return new Response(`[Development Mode] ${body}`, Object.assign({ status: 500, headers: Object.assign({ "Content-Type": "text/html", [devHeaders.hash]: String(constants_1.versionHash ? constants_1.versionHash : "") }, options === null || options === void 0 ? void 0 : options.headers) }, options));
    };
    exports.renderDevelopmentMode = renderDevelopmentMode;
  }
});

// ../node_modules/@flaregun-net/app-utils/build/components/errorHandler.js
var require_errorHandler = __commonJS({
  "../node_modules/@flaregun-net/app-utils/build/components/errorHandler.js"(exports) {
    "use strict";
    init_functionsRoutes_0_6627680816661201();
    var __awaiter = exports && exports.__awaiter || function(thisArg, _arguments, P, generator) {
      function adopt(value) {
        return value instanceof P ? value : new P(function(resolve) {
          resolve(value);
        });
      }
      return new (P || (P = Promise))(function(resolve, reject) {
        function fulfilled(value) {
          try {
            step(generator.next(value));
          } catch (e) {
            reject(e);
          }
        }
        function rejected(value) {
          try {
            step(generator["throw"](value));
          } catch (e) {
            reject(e);
          }
        }
        function step(result) {
          result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
      });
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.errorHandler = void 0;
    var constants_1 = require_constants();
    var renderDevelopmentMode_1 = require_renderDevelopmentMode();
    function errorHandler(container, err) {
      var _a2;
      return __awaiter(this, void 0, void 0, function* () {
        const { logger, appName } = container;
        logger.alwaysLogWait(container, `[${appName}] [${constants_1.versionHash ? constants_1.versionHash : ""}] Worker Error`, err.message, JSON.stringify(err.stack));
        if (!constants_1.isDev) {
          throw err;
        }
        return (0, renderDevelopmentMode_1.renderDevelopmentMode)(container, ((_a2 = err.stack) !== null && _a2 !== void 0 ? _a2 : "").split(" at ").map((line, i) => `<div>  ${i === 0 ? `<span style="font-size:24px">${line} :(</span>` : `<span style="padding-left:12px">at ${line}</span>`}</div>`).join(""), { status: 500 });
      });
    }
    exports.errorHandler = errorHandler;
  }
});

// ../node_modules/@flaregun-net/app-utils/build/types.js
var require_types = __commonJS({
  "../node_modules/@flaregun-net/app-utils/build/types.js"(exports) {
    "use strict";
    init_functionsRoutes_0_6627680816661201();
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// ../node_modules/@flaregun-net/app-utils/build/utils/logger.js
var require_logger = __commonJS({
  "../node_modules/@flaregun-net/app-utils/build/utils/logger.js"(exports) {
    "use strict";
    init_functionsRoutes_0_6627680816661201();
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.Logger = void 0;
    var Logger = (appName, loggerEndpoint, whitelistedHosts, requestUrl) => {
      const isDevSiteRequest = whitelistedHosts === null || whitelistedHosts === void 0 ? void 0 : whitelistedHosts.some((hostname) => requestUrl.hostname.includes(hostname));
      const _log = (body, headers) => loggerEndpoint && fetch(loggerEndpoint, {
        method: "POST",
        headers,
        body
      });
      const logText = (...args) => {
        const message = JSON.stringify([...args].join(" "));
        console.log(message);
        return _log(`[${appName}] ${JSON.stringify({ message })}`, {
          "Content-Type": "text/plain"
        });
      };
      const logJSON = (payload) => {
        const message = JSON.stringify(payload, null, 2);
        console.log(message);
        return _log(message, { "Content-Type": "application/json" });
      };
      return {
        alwaysLogText: logText,
        logText: (...args) => {
          if (isDevSiteRequest) {
            return logText(...args);
          }
        },
        alwaysLogJSON: logJSON,
        logJSON: (payload) => {
          if (isDevSiteRequest) {
            return logJSON(payload);
          }
        },
        alwaysLogWait: (container, ...args) => container.waitUntil(logText(...args))
      };
    };
    exports.Logger = Logger;
  }
});

// ../node_modules/parse-domain/lib/trie/characters.js
var require_characters = __commonJS({
  "../node_modules/parse-domain/lib/trie/characters.js"(exports, module) {
    "use strict";
    init_functionsRoutes_0_6627680816661201();
    module.exports = {
      UP: "<",
      SAME: ",",
      DOWN: ">",
      RESET: "|",
      WILDCARD: "*",
      EXCEPTION: "!"
    };
  }
});

// ../node_modules/parse-domain/lib/trie/nodes.js
var require_nodes = __commonJS({
  "../node_modules/parse-domain/lib/trie/nodes.js"(exports, module) {
    "use strict";
    init_functionsRoutes_0_6627680816661201();
    function createNode() {
      var domain = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : null;
      return {
        domain,
        children: /* @__PURE__ */ new Map(),
        parent: null
      };
    }
    function createOrGetChild(parent, domain) {
      var child = parent.children.get(domain);
      if (child === void 0) {
        child = createNode(domain);
        adoptChild(parent, child);
      }
      return child;
    }
    function adoptChild(parent, child) {
      if (typeof child.domain !== "string") {
        throw new Error("Cannot adopt child: child.domain must be a string");
      }
      if (parent.children.has(child.domain)) {
        throw new Error("Cannot adopt child: parent has already a child with the domain '".concat(child.domain, "'"));
      }
      parent.children.set(child.domain, child);
      child.parent = parent;
    }
    module.exports = {
      createNode,
      createOrGetChild,
      adoptChild
    };
  }
});

// ../node_modules/parse-domain/lib/trie/parse.js
var require_parse = __commonJS({
  "../node_modules/parse-domain/lib/trie/parse.js"(exports, module) {
    "use strict";
    init_functionsRoutes_0_6627680816661201();
    var characters = require_characters();
    var _require = require_nodes();
    var createNode = _require.createNode;
    var createOrGetChild = _require.createOrGetChild;
    function parse2(serialized) {
      var rootNode = createNode();
      var domain = "";
      var parentNode = rootNode;
      var node;
      function addDomain() {
        node = createOrGetChild(parentNode, domain);
        domain = "";
      }
      for (var i = 0; i < serialized.length; i++) {
        var _char = serialized.charAt(i);
        switch (_char) {
          case characters.SAME: {
            addDomain();
            continue;
          }
          case characters.DOWN: {
            addDomain();
            parentNode = node;
            continue;
          }
          case characters.RESET: {
            addDomain();
            parentNode = rootNode;
            continue;
          }
          case characters.UP: {
            addDomain();
            parentNode = parentNode.parent;
            continue;
          }
        }
        domain += _char;
      }
      if (domain !== "") {
        addDomain();
      }
      return rootNode;
    }
    module.exports = parse2;
  }
});

// ../node_modules/parse-domain/build/tries/icann.complete.json
var require_icann_complete = __commonJS({
  "../node_modules/parse-domain/build/tries/icann.complete.json"(exports, module) {
    module.exports = { trie: "aaa|aarp|abarth|abb|abbott|abbvie|abc|able|abogado|abudhabi|ac>com,edu,gov,mil,net,org|academy|accenture|accountant|accountants|aco|actor|ad>nom|adac|ads|adult|ae>ac,co,gov,mil,net,org,sch|aeg|aero>accident-investigation,accident-prevention,aerobatic,aeroclub,aerodrome,agents,air-surveillance,air-traffic-control,aircraft,airline,airport,airtraffic,ambulance,amusement,association,author,ballooning,broker,caa,cargo,catering,certification,championship,charter,civilaviation,club,conference,consultant,consulting,control,council,crew,design,dgca,educator,emergency,engine,engineer,entertainment,equipment,exchange,express,federation,flight,freight,fuel,gliding,government,groundhandling,group,hanggliding,homebuilt,insurance,journal,journalist,leasing,logistics,magazine,maintenance,media,microlight,modelling,navigation,parachuting,paragliding,passenger-association,pilot,press,production,recreation,repbody,res,research,rotorcraft,safety,scientist,services,show,skydiving,software,student,trader,trading,trainer,union,workinggroup,works|aetna|af>com,edu,gov,net,org|afamilycompany|afl|africa|ag>co,com,net,nom,org|agakhan|agency|ai>com,net,off,org|aig|aigo|airbus|airforce|airtel|akdn|al>com,edu,gov,mil,net,org|alfaromeo|alibaba|alipay|allfinanz|allstate|ally|alsace|alstom|am>co,com,commune,net,org|americanexpress|americanfamily|amex|amfam|amica|amsterdam|analytics|android|anquan|anz|ao>co,ed,gv,it,og,pb|aol|apartments|app|apple|aq|aquarelle|ar>com,edu,gob,gov,int,mil,musica,net,org,tur|arab|aramco|archi|army|arpa>e164,in-addr,ip6,iris,uri,urn|art|arte|as>gov|asda|asia|associates|at>ac,co,gv,or|athleta|attorney|au>act,asn,com,conf,edu>act,catholic,eq,nsw>schools<nt,qld,sa,tas>education<vic,wa<gov>qld,sa,tas,vic,wa<id,info,net,nsw,nt,org,oz,qld,sa,tas,vic,wa|auction|audi|audible|audio|auspost|author|auto|autos|avianca|aw>com|aws|ax|axa|az>biz,com,edu,gov,info,int,mil,name,net,org,pp,pro|azure|ba>com,edu,gov,mil,net,org|baby|baidu|banamex|bananarepublic|band|bank|bar|barcelona|barclaycard|barclays|barefoot|bargains|baseball|basketball|bauhaus|bayern|bb>biz,co,com,edu,gov,info,net,org,store,tv|bbc|bbt|bbva|bcg|bcn|bd>*|be>ac|beats|beauty|beer|bentley|berlin|best|bestbuy|bet|bf>gov|bg>0,1,2,3,4,5,6,7,8,9,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z|bh>com,edu,gov,net,org|bharti|bi>co,com,edu,or,org|bible|bid|bike|bing|bingo|bio|biz|bj>asso,barreau,gouv|black|blackfriday|blockbuster|blog|bloomberg|blue|bm>com,edu,gov,net,org|bms|bmw|bn>com,edu,gov,net,org|bnpparibas|bo>academia,agro,arte,blog,bolivia,ciencia,com,cooperativa,democracia,deporte,ecologia,economia,edu,empresa,gob,indigena,industria,info,int,medicina,mil,movimiento,musica,natural,net,nombre,noticias,org,patria,plurinacional,politica,profesional,pueblo,revista,salud,tecnologia,tksat,transporte,tv,web,wiki|boats|boehringer|bofa|bom|bond|boo|book|booking|bosch|bostik|boston|bot|boutique|box|br>9guacu,abc,adm,adv,agr,aju,am,anani,aparecida,arq,art,ato,b,barueri,belem,bhz,bio,blog,bmd,boavista,bsb,campinagrande,campinas,caxias,cim,cng,cnt,com,contagem,coop,cri,cuiaba,curitiba,def,ecn,eco,edu,emp,eng,esp,etc,eti,far,feira,flog,floripa,fm,fnd,fortal,fot,foz,fst,g12,ggf,goiania,gov>ac,al,am,ap,ba,ce,df,es,go,ma,mg,ms,mt,pa,pb,pe,pi,pr,rj,rn,ro,rr,rs,sc,se,sp,to<gru,imb,ind,inf,jab,jampa,jdf,joinville,jor,jus,leg,lel,londrina,macapa,maceio,manaus,maringa,mat,med,mil,morena,mp,mus,natal,net,niteroi,nom>*<not,ntr,odo,ong,org,osasco,palmas,poa,ppg,pro,psc,psi,pvh,qsl,radio,rec,recife,ribeirao,rio,riobranco,riopreto,salvador,sampa,santamaria,santoandre,saobernardo,saogonca,sjc,slg,slz,sorocaba,srv,taxi,tc,teo,the,tmp,trd,tur,tv,udi,vet,vix,vlog,wiki,zlg|bradesco|bridgestone|broadway|broker|brother|brussels|bs>com,edu,gov,net,org|bt>com,edu,gov,net,org|budapest|bugatti|build|builders|business|buy|buzz|bv|bw>co,org|by>com,gov,mil,of|bz>com,edu,gov,net,org|bzh|ca>ab,bc,gc,mb,nb,nf,nl,ns,nt,nu,on,pe,qc,sk,yk|cab|cafe|cal|call|calvinklein|cam|camera|camp|cancerresearch|canon|capetown|capital|capitalone|car|caravan|cards|care|career|careers|cars|cartier|casa|case|caseih|cash|casino|cat|catering|catholic|cba|cbn|cbre|cbs|cc|cd>gov|ceb|center|ceo|cern|cf|cfa|cfd|cg|ch|chanel|channel|charity|chase|chat|cheap|chintai|christmas|chrome|chrysler|church|ci>ac,a\xE9roport,asso,co,com,ed,edu,go,gouv,int,md,net,or,org,presse|cipriani|circle|cisco|citadel|citi|citic|city|cityeats|ck>!www,*|cl>co,gob,gov,mil|claims|cleaning|click|clinic|clinique|clothing|cloud|club|clubmed|cm>co,com,gov,net|cn>ac,ah,bj,com,cq,edu,fj,gd,gov,gs,gx,gz,ha,hb,he,hi,hk,hl,hn,jl,js,jx,ln,mil,mo,net,nm,nx,org,qh,sc,sd,sh,sn,sx,tj,tw,xj,xz,yn,zj,\u516C\u53F8,\u7DB2\u7D61,\u7F51\u7EDC|co>arts,com,edu,firm,gov,info,int,mil,net,nom,org,rec,web|coach|codes|coffee|college|cologne|com|comcast|commbank|community|company|compare|computer|comsec|condos|construction|consulting|contact|contractors|cooking|cookingchannel|cool|coop|corsica|country|coupon|coupons|courses|cpa|cr>ac,co,ed,fi,go,or,sa|credit|creditcard|creditunion|cricket|crown|crs|cruise|cruises|csc|cu>com,edu,gov,inf,net,org|cuisinella|cv|cw>com,edu,net,org|cx>gov|cy>ac,biz,com,ekloges,gov,ltd,name,net,org,parliament,press,pro,tm|cymru|cyou|cz|dabur|dad|dance|data|date|dating|datsun|day|dclk|dds|de|deal|dealer|deals|degree|delivery|dell|deloitte|delta|democrat|dental|dentist|desi|design|dev|dhl|diamonds|diet|digital|direct|directory|discount|discover|dish|diy|dj|dk|dm>com,edu,gov,net,org|dnp|do>art,com,edu,gob,gov,mil,net,org,sld,web|docs|doctor|dodge|dog|domains|dot|download|drive|dtv|dubai|duck|dunlop|dupont|durban|dvag|dvr|dz>art,asso,com,edu,gov,net,org,pol|earth|eat|ec>com,edu,fin,gob,gov,info,k12,med,mil,net,org,pro|eco|edeka|edu|education|ee>aip,com,edu,fie,gov,lib,med,org,pri,riik|eg>com,edu,eun,gov,mil,name,net,org,sci|email|emerck|energy|engineer|engineering|enterprises|epson|equipment|er>*|ericsson|erni|es>com,edu,gob,nom,org|esq|estate|esurance|et>biz,com,edu,gov,info,name,net,org|etisalat|eu|eurovision|eus|events|everbank|exchange|expert|exposed|express|extraspace|fage|fail|fairwinds|faith|family|fan|fans|farm|farmers|fashion|fast|fedex|feedback|ferrari|ferrero|fi>aland|fiat|fidelity|fido|film|final|finance|financial|fire|firestone|firmdale|fish|fishing|fit|fitness|fj>*|fk>*|flickr|flights|flir|florist|flowers|fly|fm|fo|foo|food|foodnetwork|football|ford|forex|forsale|forum|foundation|fox|fr>aeroport,asso,avocat,avoues,cci,chambagri,chirurgiens-dentistes,com,experts-comptables,geometre-expert,gouv,greta,huissier-justice,medecin,nom,notaires,pharmacien,port,prd,tm,veterinaire|free|fresenius|frl|frogans|frontdoor|frontier|ftr|fujitsu|fujixerox|fun|fund|furniture|futbol|fyi|ga|gal|gallery|gallo|gallup|game|games|gap|garden|gay|gb|gbiz|gd|gdn|ge>com,edu,gov,mil,net,org,pvt|gea|gent|genting|george|gf|gg>co,net,org|ggee|gh>com,edu,gov,mil,org|gi>com,edu,gov,ltd,mod,org|gift|gifts|gives|giving|gl>co,com,edu,net,org|glade|glass|gle|global|globo|gm|gmail|gmbh|gmo|gmx|gn>ac,com,edu,gov,net,org|godaddy|gold|goldpoint|golf|goo|goodyear|goog|google|gop|got|gov|gp>asso,com,edu,mobi,net,org|gq|gr>com,edu,gov,net,org|grainger|graphics|gratis|green|gripe|grocery|group|gs|gt>com,edu,gob,ind,mil,net,org|gu>com,edu,gov,guam,info,net,org,web|guardian|gucci|guge|guide|guitars|guru|gw|gy>co,com,edu,gov,net,org|hair|hamburg|hangout|haus|hbo|hdfc|hdfcbank|health|healthcare|help|helsinki|here|hermes|hgtv|hiphop|hisamitsu|hitachi|hiv|hk>com,edu,gov,idv,net,org,\u4E2A\u4EBA,\u500B\u4EBA,\u516C\u53F8,\u653F\u5E9C,\u654E\u80B2,\u6559\u80B2,\u7B87\u4EBA,\u7D44\u7E54,\u7D44\u7EC7,\u7DB2\u7D61,\u7DB2\u7EDC,\u7EC4\u7E54,\u7EC4\u7EC7,\u7F51\u7D61,\u7F51\u7EDC|hkt|hm|hn>com,edu,gob,mil,net,org|hockey|holdings|holiday|homedepot|homegoods|homes|homesense|honda|horse|hospital|host|hosting|hot|hoteles|hotels|hotmail|house|how|hr>com,from,iz,name|hsbc|ht>adult,art,asso,com,coop,edu,firm,gouv,info,med,net,org,perso,pol,pro,rel,shop|hu>2000,agrar,bolt,casino,city,co,erotica,erotika,film,forum,games,hotel,info,ingatlan,jogasz,konyvelo,lakas,media,news,org,priv,reklam,sex,shop,sport,suli,szex,tm,tozsde,utazas,video|hughes|hyatt|hyundai|ibm|icbc|ice|icu|id>ac,biz,co,desa,go,mil,my,net,or,ponpes,sch,web|ie>gov|ieee|ifm|ikano|il>ac,co,gov,idf,k12,muni,net,org|im>ac,co>ltd,plc<com,net,org,tt,tv|imamat|imdb|immo|immobilien|in>ac,co,edu,firm,gen,gov,ind,mil,net,nic,org,res|inc|industries|infiniti|info|ing|ink|institute|insurance|insure|int>eu|intel|international|intuit|investments|io>com|ipiranga|iq>com,edu,gov,mil,net,org|ir>ac,co,gov,id,net,org,sch,\u0627\u064A\u0631\u0627\u0646,\u0627\u06CC\u0631\u0627\u0646|irish|is>com,edu,gov,int,net,org|ismaili|ist|istanbul|it>abr,abruzzo,ag,agrigento,al,alessandria,alto-adige,altoadige,an,ancona,andria-barletta-trani,andria-trani-barletta,andriabarlettatrani,andriatranibarletta,ao,aosta,aosta-valley,aostavalley,aoste,ap,aq,aquila,ar,arezzo,ascoli-piceno,ascolipiceno,asti,at,av,avellino,ba,balsan,balsan-sudtirol,balsan-s\xFCdtirol,balsan-suedtirol,bari,barletta-trani-andria,barlettatraniandria,bas,basilicata,belluno,benevento,bergamo,bg,bi,biella,bl,bn,bo,bologna,bolzano,bolzano-altoadige,bozen,bozen-sudtirol,bozen-s\xFCdtirol,bozen-suedtirol,br,brescia,brindisi,bs,bt,bulsan,bulsan-sudtirol,bulsan-s\xFCdtirol,bulsan-suedtirol,bz,ca,cagliari,cal,calabria,caltanissetta,cam,campania,campidano-medio,campidanomedio,campobasso,carbonia-iglesias,carboniaiglesias,carrara-massa,carraramassa,caserta,catania,catanzaro,cb,ce,cesena-forli,cesena-forl\xEC,cesenaforli,cesenaforl\xEC,ch,chieti,ci,cl,cn,co,como,cosenza,cr,cremona,crotone,cs,ct,cuneo,cz,dell-ogliastra,dellogliastra,edu,emilia-romagna,emiliaromagna,emr,en,enna,fc,fe,fermo,ferrara,fg,fi,firenze,florence,fm,foggia,forli-cesena,forl\xEC-cesena,forlicesena,forl\xECcesena,fr,friuli-v-giulia,friuli-ve-giulia,friuli-vegiulia,friuli-venezia-giulia,friuli-veneziagiulia,friuli-vgiulia,friuliv-giulia,friulive-giulia,friulivegiulia,friulivenezia-giulia,friuliveneziagiulia,friulivgiulia,frosinone,fvg,ge,genoa,genova,go,gorizia,gov,gr,grosseto,iglesias-carbonia,iglesiascarbonia,im,imperia,is,isernia,kr,la-spezia,laquila,laspezia,latina,laz,lazio,lc,le,lecce,lecco,li,lig,liguria,livorno,lo,lodi,lom,lombardia,lombardy,lt,lu,lucania,lucca,macerata,mantova,mar,marche,massa-carrara,massacarrara,matera,mb,mc,me,medio-campidano,mediocampidano,messina,mi,milan,milano,mn,mo,modena,mol,molise,monza,monza-brianza,monza-e-della-brianza,monzabrianza,monzaebrianza,monzaedellabrianza,ms,mt,na,naples,napoli,no,novara,nu,nuoro,og,ogliastra,olbia-tempio,olbiatempio,or,oristano,ot,pa,padova,padua,palermo,parma,pavia,pc,pd,pe,perugia,pesaro-urbino,pesarourbino,pescara,pg,pi,piacenza,piedmont,piemonte,pisa,pistoia,pmn,pn,po,pordenone,potenza,pr,prato,pt,pu,pug,puglia,pv,pz,ra,ragusa,ravenna,rc,re,reggio-calabria,reggio-emilia,reggiocalabria,reggioemilia,rg,ri,rieti,rimini,rm,rn,ro,roma,rome,rovigo,sa,salerno,sar,sardegna,sardinia,sassari,savona,si,sic,sicilia,sicily,siena,siracusa,so,sondrio,sp,sr,ss,s\xFCdtirol,suedtirol,sv,ta,taa,taranto,te,tempio-olbia,tempioolbia,teramo,terni,tn,to,torino,tos,toscana,tp,tr,trani-andria-barletta,trani-barletta-andria,traniandriabarletta,tranibarlettaandria,trapani,trentin-sud-tirol,trentin-s\xFCd-tirol,trentin-sudtirol,trentin-s\xFCdtirol,trentin-sued-tirol,trentin-suedtirol,trentino,trentino-a-adige,trentino-aadige,trentino-alto-adige,trentino-altoadige,trentino-s-tirol,trentino-stirol,trentino-sud-tirol,trentino-s\xFCd-tirol,trentino-sudtirol,trentino-s\xFCdtirol,trentino-sued-tirol,trentino-suedtirol,trentinoa-adige,trentinoaadige,trentinoalto-adige,trentinoaltoadige,trentinos-tirol,trentinostirol,trentinosud-tirol,trentinos\xFCd-tirol,trentinosudtirol,trentinos\xFCdtirol,trentinosued-tirol,trentinosuedtirol,trentinsud-tirol,trentins\xFCd-tirol,trentinsudtirol,trentins\xFCdtirol,trentinsued-tirol,trentinsuedtirol,trento,treviso,trieste,ts,turin,tuscany,tv,ud,udine,umb,umbria,urbino-pesaro,urbinopesaro,va,val-d-aosta,val-daosta,vald-aosta,valdaosta,valle-aosta,valle-d-aosta,valle-daosta,valleaosta,valled-aosta,valledaosta,vallee-aoste,vall\xE9e-aoste,vallee-d-aoste,vall\xE9e-d-aoste,valleeaoste,vall\xE9eaoste,valleedaoste,vall\xE9edaoste,vao,varese,vb,vc,vda,ve,ven,veneto,venezia,venice,verbania,vercelli,verona,vi,vibo-valentia,vibovalentia,vicenza,viterbo,vr,vs,vt,vv|itau|itv|iveco|jaguar|java|jcb|jcp|je>co,net,org|jeep|jetzt|jewelry|jio|jll|jm>*|jmp|jnj|jo>com,edu,gov,mil,name,net,org,sch|jobs|joburg|jot|joy|jp>ac,ad,aichi>aisai,ama,anjo,asuke,chiryu,chita,fuso,gamagori,handa,hazu,hekinan,higashiura,ichinomiya,inazawa,inuyama,isshiki,iwakura,kanie,kariya,kasugai,kira,kiyosu,komaki,konan,kota,mihama,miyoshi,nishio,nisshin,obu,oguchi,oharu,okazaki,owariasahi,seto,shikatsu,shinshiro,shitara,tahara,takahama,tobishima,toei,togo,tokai,tokoname,toyoake,toyohashi,toyokawa,toyone,toyota,tsushima,yatomi<akita>akita,daisen,fujisato,gojome,hachirogata,happou,higashinaruse,honjo,honjyo,ikawa,kamikoani,kamioka,katagami,kazuno,kitaakita,kosaka,kyowa,misato,mitane,moriyoshi,nikaho,noshiro,odate,oga,ogata,semboku,yokote,yurihonjo<aomori>aomori,gonohe,hachinohe,hashikami,hiranai,hirosaki,itayanagi,kuroishi,misawa,mutsu,nakadomari,noheji,oirase,owani,rokunohe,sannohe,shichinohe,shingo,takko,towada,tsugaru,tsuruta<chiba>abiko,asahi,chonan,chosei,choshi,chuo,funabashi,futtsu,hanamigawa,ichihara,ichikawa,ichinomiya,inzai,isumi,kamagaya,kamogawa,kashiwa,katori,katsuura,kimitsu,kisarazu,kozaki,kujukuri,kyonan,matsudo,midori,mihama,minamiboso,mobara,mutsuzawa,nagara,nagareyama,narashino,narita,noda,oamishirasato,omigawa,onjuku,otaki,sakae,sakura,shimofusa,shirako,shiroi,shisui,sodegaura,sosa,tako,tateyama,togane,tohnosho,tomisato,urayasu,yachimata,yachiyo,yokaichiba,yokoshibahikari,yotsukaido<co,ed,ehime>ainan,honai,ikata,imabari,iyo,kamijima,kihoku,kumakogen,masaki,matsuno,matsuyama,namikata,niihama,ozu,saijo,seiyo,shikokuchuo,tobe,toon,uchiko,uwajima,yawatahama<fukui>echizen,eiheiji,fukui,ikeda,katsuyama,mihama,minamiechizen,obama,ohi,ono,sabae,sakai,takahama,tsuruga,wakasa<fukuoka>ashiya,buzen,chikugo,chikuho,chikujo,chikushino,chikuzen,chuo,dazaifu,fukuchi,hakata,higashi,hirokawa,hisayama,iizuka,inatsuki,kaho,kasuga,kasuya,kawara,keisen,koga,kurate,kurogi,kurume,minami,miyako,miyama,miyawaka,mizumaki,munakata,nakagawa,nakama,nishi,nogata,ogori,okagaki,okawa,oki,omuta,onga,onojo,oto,saigawa,sasaguri,shingu,shinyoshitomi,shonai,soeda,sue,tachiarai,tagawa,takata,toho,toyotsu,tsuiki,ukiha,umi,usui,yamada,yame,yanagawa,yukuhashi<fukushima>aizubange,aizumisato,aizuwakamatsu,asakawa,bandai,date,fukushima,furudono,futaba,hanawa,higashi,hirata,hirono,iitate,inawashiro,ishikawa,iwaki,izumizaki,kagamiishi,kaneyama,kawamata,kitakata,kitashiobara,koori,koriyama,kunimi,miharu,mishima,namie,nango,nishiaizu,nishigo,okuma,omotego,ono,otama,samegawa,shimogo,shirakawa,showa,soma,sukagawa,taishin,tamakawa,tanagura,tenei,yabuki,yamato,yamatsuri,yanaizu,yugawa<gifu>anpachi,ena,gifu,ginan,godo,gujo,hashima,hichiso,hida,higashishirakawa,ibigawa,ikeda,kakamigahara,kani,kasahara,kasamatsu,kawaue,kitagata,mino,minokamo,mitake,mizunami,motosu,nakatsugawa,ogaki,sakahogi,seki,sekigahara,shirakawa,tajimi,takayama,tarui,toki,tomika,wanouchi,yamagata,yaotsu,yoro<go,gr,gunma>annaka,chiyoda,fujioka,higashiagatsuma,isesaki,itakura,kanna,kanra,katashina,kawaba,kiryu,kusatsu,maebashi,meiwa,midori,minakami,naganohara,nakanojo,nanmoku,numata,oizumi,ora,ota,shibukawa,shimonita,shinto,showa,takasaki,takayama,tamamura,tatebayashi,tomioka,tsukiyono,tsumagoi,ueno,yoshioka<hiroshima>asaminami,daiwa,etajima,fuchu,fukuyama,hatsukaichi,higashihiroshima,hongo,jinsekikogen,kaita,kui,kumano,kure,mihara,miyoshi,naka,onomichi,osakikamijima,otake,saka,sera,seranishi,shinichi,shobara,takehara<hokkaido>abashiri,abira,aibetsu,akabira,akkeshi,asahikawa,ashibetsu,ashoro,assabu,atsuma,bibai,biei,bifuka,bihoro,biratori,chippubetsu,chitose,date,ebetsu,embetsu,eniwa,erimo,esan,esashi,fukagawa,fukushima,furano,furubira,haboro,hakodate,hamatonbetsu,hidaka,higashikagura,higashikawa,hiroo,hokuryu,hokuto,honbetsu,horokanai,horonobe,ikeda,imakane,ishikari,iwamizawa,iwanai,kamifurano,kamikawa,kamishihoro,kamisunagawa,kamoenai,kayabe,kembuchi,kikonai,kimobetsu,kitahiroshima,kitami,kiyosato,koshimizu,kunneppu,kuriyama,kuromatsunai,kushiro,kutchan,kyowa,mashike,matsumae,mikasa,minamifurano,mombetsu,moseushi,mukawa,muroran,naie,nakagawa,nakasatsunai,nakatombetsu,nanae,nanporo,nayoro,nemuro,niikappu,niki,nishiokoppe,noboribetsu,numata,obihiro,obira,oketo,okoppe,otaru,otobe,otofuke,otoineppu,oumu,ozora,pippu,rankoshi,rebun,rikubetsu,rishiri,rishirifuji,saroma,sarufutsu,shakotan,shari,shibecha,shibetsu,shikabe,shikaoi,shimamaki,shimizu,shimokawa,shinshinotsu,shintoku,shiranuka,shiraoi,shiriuchi,sobetsu,sunagawa,taiki,takasu,takikawa,takinoue,teshikaga,tobetsu,tohma,tomakomai,tomari,toya,toyako,toyotomi,toyoura,tsubetsu,tsukigata,urakawa,urausu,uryu,utashinai,wakkanai,wassamu,yakumo,yoichi<hyogo>aioi,akashi,ako,amagasaki,aogaki,asago,ashiya,awaji,fukusaki,goshiki,harima,himeji,ichikawa,inagawa,itami,kakogawa,kamigori,kamikawa,kasai,kasuga,kawanishi,miki,minamiawaji,nishinomiya,nishiwaki,ono,sanda,sannan,sasayama,sayo,shingu,shinonsen,shiso,sumoto,taishi,taka,takarazuka,takasago,takino,tamba,tatsuno,toyooka,yabu,yashiro,yoka,yokawa<ibaraki>ami,asahi,bando,chikusei,daigo,fujishiro,hitachi,hitachinaka,hitachiomiya,hitachiota,ibaraki,ina,inashiki,itako,iwama,joso,kamisu,kasama,kashima,kasumigaura,koga,miho,mito,moriya,naka,namegata,oarai,ogawa,omitama,ryugasaki,sakai,sakuragawa,shimodate,shimotsuma,shirosato,sowa,suifu,takahagi,tamatsukuri,tokai,tomobe,tone,toride,tsuchiura,tsukuba,uchihara,ushiku,yachiyo,yamagata,yawara,yuki<ishikawa>anamizu,hakui,hakusan,kaga,kahoku,kanazawa,kawakita,komatsu,nakanoto,nanao,nomi,nonoichi,noto,shika,suzu,tsubata,tsurugi,uchinada,wajima<iwate>fudai,fujisawa,hanamaki,hiraizumi,hirono,ichinohe,ichinoseki,iwaizumi,iwate,joboji,kamaishi,kanegasaki,karumai,kawai,kitakami,kuji,kunohe,kuzumaki,miyako,mizusawa,morioka,ninohe,noda,ofunato,oshu,otsuchi,rikuzentakata,shiwa,shizukuishi,sumita,tanohata,tono,yahaba,yamada<kagawa>ayagawa,higashikagawa,kanonji,kotohira,manno,marugame,mitoyo,naoshima,sanuki,tadotsu,takamatsu,tonosho,uchinomi,utazu,zentsuji<kagoshima>akune,amami,hioki,isa,isen,izumi,kagoshima,kanoya,kawanabe,kinko,kouyama,makurazaki,matsumoto,minamitane,nakatane,nishinoomote,satsumasendai,soo,tarumizu,yusui<kanagawa>aikawa,atsugi,ayase,chigasaki,ebina,fujisawa,hadano,hakone,hiratsuka,isehara,kaisei,kamakura,kiyokawa,matsuda,minamiashigara,miura,nakai,ninomiya,odawara,oi,oiso,sagamihara,samukawa,tsukui,yamakita,yamato,yokosuka,yugawara,zama,zushi<kawasaki>!city,*<kitakyushu>!city,*<kobe>!city,*<kochi>aki,geisei,hidaka,higashitsuno,ino,kagami,kami,kitagawa,kochi,mihara,motoyama,muroto,nahari,nakamura,nankoku,nishitosa,niyodogawa,ochi,okawa,otoyo,otsuki,sakawa,sukumo,susaki,tosa,tosashimizu,toyo,tsuno,umaji,yasuda,yusuhara<kumamoto>amakusa,arao,aso,choyo,gyokuto,kamiamakusa,kikuchi,kumamoto,mashiki,mifune,minamata,minamioguni,nagasu,nishihara,oguni,ozu,sumoto,takamori,uki,uto,yamaga,yamato,yatsushiro<kyoto>ayabe,fukuchiyama,higashiyama,ide,ine,joyo,kameoka,kamo,kita,kizu,kumiyama,kyotamba,kyotanabe,kyotango,maizuru,minami,minamiyamashiro,miyazu,muko,nagaokakyo,nakagyo,nantan,oyamazaki,sakyo,seika,tanabe,uji,ujitawara,wazuka,yamashina,yawata<lg,mie>asahi,inabe,ise,kameyama,kawagoe,kiho,kisosaki,kiwa,komono,kumano,kuwana,matsusaka,meiwa,mihama,minamiise,misugi,miyama,nabari,shima,suzuka,tado,taiki,taki,tamaki,toba,tsu,udono,ureshino,watarai,yokkaichi<miyagi>furukawa,higashimatsushima,ishinomaki,iwanuma,kakuda,kami,kawasaki,marumori,matsushima,minamisanriku,misato,murata,natori,ogawara,ohira,onagawa,osaki,rifu,semine,shibata,shichikashuku,shikama,shiogama,shiroishi,tagajo,taiwa,tome,tomiya,wakuya,watari,yamamoto,zao<miyazaki>aya,ebino,gokase,hyuga,kadogawa,kawaminami,kijo,kitagawa,kitakata,kitaura,kobayashi,kunitomi,kushima,mimata,miyakonojo,miyazaki,morotsuka,nichinan,nishimera,nobeoka,saito,shiiba,shintomi,takaharu,takanabe,takazaki,tsuno<nagano>achi,agematsu,anan,aoki,asahi,azumino,chikuhoku,chikuma,chino,fujimi,hakuba,hara,hiraya,iida,iijima,iiyama,iizuna,ikeda,ikusaka,ina,karuizawa,kawakami,kiso,kisofukushima,kitaaiki,komagane,komoro,matsukawa,matsumoto,miasa,minamiaiki,minamimaki,minamiminowa,minowa,miyada,miyota,mochizuki,nagano,nagawa,nagiso,nakagawa,nakano,nozawaonsen,obuse,ogawa,okaya,omachi,omi,ookuwa,ooshika,otaki,otari,sakae,sakaki,saku,sakuho,shimosuwa,shinanomachi,shiojiri,suwa,suzaka,takagi,takamori,takayama,tateshina,tatsuno,togakushi,togura,tomi,ueda,wada,yamagata,yamanouchi,yasaka,yasuoka<nagasaki>chijiwa,futsu,goto,hasami,hirado,iki,isahaya,kawatana,kuchinotsu,matsuura,nagasaki,obama,omura,oseto,saikai,sasebo,seihi,shimabara,shinkamigoto,togitsu,tsushima,unzen<nagoya>!city,*<nara>ando,gose,heguri,higashiyoshino,ikaruga,ikoma,kamikitayama,kanmaki,kashiba,kashihara,katsuragi,kawai,kawakami,kawanishi,koryo,kurotaki,mitsue,miyake,nara,nosegawa,oji,ouda,oyodo,sakurai,sango,shimoichi,shimokitayama,shinjo,soni,takatori,tawaramoto,tenkawa,tenri,uda,yamatokoriyama,yamatotakada,yamazoe,yoshino<ne,niigata>aga,agano,gosen,itoigawa,izumozaki,joetsu,kamo,kariwa,kashiwazaki,minamiuonuma,mitsuke,muika,murakami,myoko,nagaoka,niigata,ojiya,omi,sado,sanjo,seiro,seirou,sekikawa,shibata,tagami,tainai,tochio,tokamachi,tsubame,tsunan,uonuma,yahiko,yoita,yuzawa<oita>beppu,bungoono,bungotakada,hasama,hiji,himeshima,hita,kamitsue,kokonoe,kuju,kunisaki,kusu,oita,saiki,taketa,tsukumi,usa,usuki,yufu<okayama>akaiwa,asakuchi,bizen,hayashima,ibara,kagamino,kasaoka,kibichuo,kumenan,kurashiki,maniwa,misaki,nagi,niimi,nishiawakura,okayama,satosho,setouchi,shinjo,shoo,soja,takahashi,tamano,tsuyama,wake,yakage<okinawa>aguni,ginowan,ginoza,gushikami,haebaru,higashi,hirara,iheya,ishigaki,ishikawa,itoman,izena,kadena,kin,kitadaito,kitanakagusuku,kumejima,kunigami,minamidaito,motobu,nago,naha,nakagusuku,nakijin,nanjo,nishihara,ogimi,okinawa,onna,shimoji,taketomi,tarama,tokashiki,tomigusuku,tonaki,urasoe,uruma,yaese,yomitan,yonabaru,yonaguni,zamami<or,osaka>abeno,chihayaakasaka,chuo,daito,fujiidera,habikino,hannan,higashiosaka,higashisumiyoshi,higashiyodogawa,hirakata,ibaraki,ikeda,izumi,izumiotsu,izumisano,kadoma,kaizuka,kanan,kashiwara,katano,kawachinagano,kishiwada,kita,kumatori,matsubara,minato,minoh,misaki,moriguchi,neyagawa,nishi,nose,osakasayama,sakai,sayama,sennan,settsu,shijonawate,shimamoto,suita,tadaoka,taishi,tajiri,takaishi,takatsuki,tondabayashi,toyonaka,toyono,yao<saga>ariake,arita,fukudomi,genkai,hamatama,hizen,imari,kamimine,kanzaki,karatsu,kashima,kitagata,kitahata,kiyama,kouhoku,kyuragi,nishiarita,ogi,omachi,ouchi,saga,shiroishi,taku,tara,tosu,yoshinogari<saitama>arakawa,asaka,chichibu,fujimi,fujimino,fukaya,hanno,hanyu,hasuda,hatogaya,hatoyama,hidaka,higashichichibu,higashimatsuyama,honjo,ina,iruma,iwatsuki,kamiizumi,kamikawa,kamisato,kasukabe,kawagoe,kawaguchi,kawajima,kazo,kitamoto,koshigaya,kounosu,kuki,kumagaya,matsubushi,minano,misato,miyashiro,miyoshi,moroyama,nagatoro,namegawa,niiza,ogano,ogawa,ogose,okegawa,omiya,otaki,ranzan,ryokami,saitama,sakado,satte,sayama,shiki,shiraoka,soka,sugito,toda,tokigawa,tokorozawa,tsurugashima,urawa,warabi,yashio,yokoze,yono,yorii,yoshida,yoshikawa,yoshimi<sapporo>!city,*<sendai>!city,*<shiga>aisho,gamo,higashiomi,hikone,koka,konan,kosei,koto,kusatsu,maibara,moriyama,nagahama,nishiazai,notogawa,omihachiman,otsu,ritto,ryuoh,takashima,takatsuki,torahime,toyosato,yasu<shimane>akagi,ama,gotsu,hamada,higashiizumo,hikawa,hikimi,izumo,kakinoki,masuda,matsue,misato,nishinoshima,ohda,okinoshima,okuizumo,shimane,tamayu,tsuwano,unnan,yakumo,yasugi,yatsuka<shizuoka>arai,atami,fuji,fujieda,fujikawa,fujinomiya,fukuroi,gotemba,haibara,hamamatsu,higashiizu,ito,iwata,izu,izunokuni,kakegawa,kannami,kawanehon,kawazu,kikugawa,kosai,makinohara,matsuzaki,minamiizu,mishima,morimachi,nishiizu,numazu,omaezaki,shimada,shimizu,shimoda,shizuoka,susono,yaizu,yoshida<tochigi>ashikaga,bato,haga,ichikai,iwafune,kaminokawa,kanuma,karasuyama,kuroiso,mashiko,mibu,moka,motegi,nasu,nasushiobara,nikko,nishikata,nogi,ohira,ohtawara,oyama,sakura,sano,shimotsuke,shioya,takanezawa,tochigi,tsuga,ujiie,utsunomiya,yaita<tokushima>aizumi,anan,ichiba,itano,kainan,komatsushima,matsushige,mima,minami,miyoshi,mugi,nakagawa,naruto,sanagochi,shishikui,tokushima,wajiki<tokyo>adachi,akiruno,akishima,aogashima,arakawa,bunkyo,chiyoda,chofu,chuo,edogawa,fuchu,fussa,hachijo,hachioji,hamura,higashikurume,higashimurayama,higashiyamato,hino,hinode,hinohara,inagi,itabashi,katsushika,kita,kiyose,kodaira,koganei,kokubunji,komae,koto,kouzushima,kunitachi,machida,meguro,minato,mitaka,mizuho,musashimurayama,musashino,nakano,nerima,ogasawara,okutama,ome,oshima,ota,setagaya,shibuya,shinagawa,shinjuku,suginami,sumida,tachikawa,taito,tama,toshima<tottori>chizu,hino,kawahara,koge,kotoura,misasa,nanbu,nichinan,sakaiminato,tottori,wakasa,yazu,yonago<toyama>asahi,fuchu,fukumitsu,funahashi,himi,imizu,inami,johana,kamiichi,kurobe,nakaniikawa,namerikawa,nanto,nyuzen,oyabe,taira,takaoka,tateyama,toga,tonami,toyama,unazuki,uozu,yamada<wakayama>arida,aridagawa,gobo,hashimoto,hidaka,hirogawa,inami,iwade,kainan,kamitonda,katsuragi,kimino,kinokawa,kitayama,koya,koza,kozagawa,kudoyama,kushimoto,mihama,misato,nachikatsuura,shingu,shirahama,taiji,tanabe,wakayama,yuasa,yura<yamagata>asahi,funagata,higashine,iide,kahoku,kaminoyama,kaneyama,kawanishi,mamurogawa,mikawa,murayama,nagai,nakayama,nanyo,nishikawa,obanazawa,oe,oguni,ohkura,oishida,sagae,sakata,sakegawa,shinjo,shirataka,shonai,takahata,tendo,tozawa,tsuruoka,yamagata,yamanobe,yonezawa,yuza<yamaguchi>abu,hagi,hikari,hofu,iwakuni,kudamatsu,mitou,nagato,oshima,shimonoseki,shunan,tabuse,tokuyama,toyota,ube,yuu<yamanashi>chuo,doshi,fuefuki,fujikawa,fujikawaguchiko,fujiyoshida,hayakawa,hokuto,ichikawamisato,kai,kofu,koshu,kosuge,minami-alps,minobu,nakamichi,nanbu,narusawa,nirasaki,nishikatsura,oshino,otsuki,showa,tabayama,tsuru,uenohara,yamanakako,yamanashi<yokohama>!city,*<\u4E09\u91CD,\u4EAC\u90FD,\u4F50\u8CC0,\u5175\u5EAB,\u5317\u6D77\u9053,\u5343\u8449,\u548C\u6B4C\u5C71,\u57FC\u7389,\u5927\u5206,\u5927\u962A,\u5948\u826F,\u5BAE\u57CE,\u5BAE\u5D0E,\u5BCC\u5C71,\u5C71\u53E3,\u5C71\u5F62,\u5C71\u68A8,\u5C90\u961C,\u5CA1\u5C71,\u5CA9\u624B,\u5CF6\u6839,\u5E83\u5CF6,\u5FB3\u5CF6,\u611B\u5A9B,\u611B\u77E5,\u65B0\u6F5F,\u6771\u4EAC,\u6803\u6728,\u6C96\u7E04,\u6ECB\u8CC0,\u718A\u672C,\u77F3\u5DDD,\u795E\u5948\u5DDD,\u798F\u4E95,\u798F\u5CA1,\u798F\u5CF6,\u79CB\u7530,\u7FA4\u99AC,\u8328\u57CE,\u9577\u5D0E,\u9577\u91CE,\u9752\u68EE,\u9759\u5CA1,\u9999\u5DDD,\u9AD8\u77E5,\u9CE5\u53D6,\u9E7F\u5150\u5CF6|jpmorgan|jprs|juegos|juniper|kaufen|kddi|ke>ac,co,go,info,me,mobi,ne,or,sc|kerryhotels|kerrylogistics|kerryproperties|kfh|kg>com,edu,gov,mil,net,org|kh>*|ki>biz,com,edu,gov,info,net,org|kia|kim|kinder|kindle|kitchen|kiwi|km>ass,asso,com,coop,edu,gouv,gov,medecin,mil,nom,notaires,org,pharmaciens,prd,presse,tm,veterinaire|kn>edu,gov,net,org|koeln|komatsu|kosher|kp>com,edu,gov,org,rep,tra|kpmg|kpn|kr>ac,busan,chungbuk,chungnam,co,daegu,daejeon,es,gangwon,go,gwangju,gyeongbuk,gyeonggi,gyeongnam,hs,incheon,jeju,jeonbuk,jeonnam,kg,mil,ms,ne,or,pe,re,sc,seoul,ulsan|krd|kred|kuokgroup|kw>com,edu,emb,gov,ind,net,org|ky>com,edu,gov,net,org|kyoto|kz>com,edu,gov,mil,net,org|la>com,edu,gov,info,int,net,org,per|lacaixa|ladbrokes|lamborghini|lamer|lancaster|lancia|lancome|land|landrover|lanxess|lasalle|lat|latino|latrobe|law|lawyer|lb>com,edu,gov,net,org|lc>co,com,edu,gov,net,org|lds|lease|leclerc|lefrak|legal|lego|lexus|lgbt|li|liaison|lidl|life|lifeinsurance|lifestyle|lighting|like|lilly|limited|limo|lincoln|linde|link|lipsy|live|living|lixil|lk>ac,assn,com,edu,gov,grp,hotel,int,ltd,net,ngo,org,sch,soc,web|llc|llp|loan|loans|locker|locus|loft|lol|london|lotte|lotto|love|lpl|lplfinancial|lr>com,edu,gov,net,org|ls>ac,biz,co,edu,gov,info,net,org,sc|lt>gov|ltd|ltda|lu|lundbeck|lupin|luxe|luxury|lv>asn,com,conf,edu,gov,id,mil,net,org|ly>com,edu,gov,id,med,net,org,plc,sch|ma>ac,co,gov,net,org,press|macys|madrid|maif|maison|makeup|man|management|mango|map|market|marketing|markets|marriott|marshalls|maserati|mattel|mba|mc>asso,tm|mckinsey|md|me>ac,co,edu,gov,its,net,org,priv|med|media|meet|melbourne|meme|memorial|men|menu|merckmsd|metlife|mg>co,com,edu,gov,mil,nom,org,prd,tm|mh|miami|microsoft|mil|mini|mint|mit|mitsubishi|mk>com,edu,gov,inf,name,net,org|ml>com,edu,gouv,gov,net,org,presse|mlb|mls|mm>*|mma|mn>edu,gov,org|mo>com,edu,gov,net,org|mobi|mobile|moda|moe|moi|mom|monash|money|monster|mopar|mormon|mortgage|moscow|moto|motorcycles|mov|movie|movistar|mp|mq|mr>gov|ms>com,edu,gov,net,org|msd|mt>com,edu,net,org|mtn|mtr|mu>ac,co,com,gov,net,or,org|museum>academy,agriculture,air,airguard,alabama,alaska,amber,ambulance,american,americana,americanantiques,americanart,amsterdam,and,annefrank,anthro,anthropology,antiques,aquarium,arboretum,archaeological,archaeology,architecture,art,artanddesign,artcenter,artdeco,arteducation,artgallery,arts,artsandcrafts,asmatart,assassination,assisi,association,astronomy,atlanta,austin,australia,automotive,aviation,axis,badajoz,baghdad,bahn,bale,baltimore,barcelona,baseball,basel,baths,bauern,beauxarts,beeldengeluid,bellevue,bergbau,berkeley,berlin,bern,bible,bilbao,bill,birdart,birthplace,bonn,boston,botanical,botanicalgarden,botanicgarden,botany,brandywinevalley,brasil,bristol,british,britishcolumbia,broadcast,brunel,brussel,brussels,bruxelles,building,burghof,bus,bushey,cadaques,california,cambridge,can,canada,capebreton,carrier,cartoonart,casadelamoneda,castle,castres,celtic,center,chattanooga,cheltenham,chesapeakebay,chicago,children,childrens,childrensgarden,chiropractic,chocolate,christiansburg,cincinnati,cinema,circus,civilisation,civilization,civilwar,clinton,clock,coal,coastaldefence,cody,coldwar,collection,colonialwilliamsburg,coloradoplateau,columbia,columbus,communication,communications,community,computer,computerhistory,comunica\xE7\xF5es,contemporary,contemporaryart,convent,copenhagen,corporation,correios-e-telecomunica\xE7\xF5es,corvette,costume,countryestate,county,crafts,cranbrook,creation,cultural,culturalcenter,culture,cyber,cymru,dali,dallas,database,ddr,decorativearts,delaware,delmenhorst,denmark,depot,design,detroit,dinosaur,discovery,dolls,donostia,durham,eastafrica,eastcoast,education,educational,egyptian,eisenbahn,elburg,elvendrell,embroidery,encyclopedic,england,entomology,environment,environmentalconservation,epilepsy,essex,estate,ethnology,exeter,exhibition,family,farm,farmequipment,farmers,farmstead,field,figueres,filatelia,film,fineart,finearts,finland,flanders,florida,force,fortmissoula,fortworth,foundation,francaise,frankfurt,franziskaner,freemasonry,freiburg,fribourg,frog,fundacio,furniture,gallery,garden,gateway,geelvinck,gemological,geology,georgia,giessen,glas,glass,gorge,grandrapids,graz,guernsey,halloffame,hamburg,handson,harvestcelebration,hawaii,health,heimatunduhren,hellas,helsinki,hembygdsforbund,heritage,histoire,historical,historicalsociety,historichouses,historisch,historisches,history,historyofscience,horology,house,humanities,illustration,imageandsound,indian,indiana,indianapolis,indianmarket,intelligence,interactive,iraq,iron,isleofman,jamison,jefferson,jerusalem,jewelry,jewish,jewishart,jfk,journalism,judaica,judygarland,juedisches,juif,karate,karikatur,kids,koebenhavn,koeln,kunst,kunstsammlung,kunstunddesign,labor,labour,lajolla,lancashire,landes,lans,l\xE4ns,larsson,lewismiller,lincoln,linz,living,livinghistory,localhistory,london,losangeles,louvre,loyalist,lucerne,luxembourg,luzern,mad,madrid,mallorca,manchester,mansion,mansions,manx,marburg,maritime,maritimo,maryland,marylhurst,media,medical,medizinhistorisches,meeres,memorial,mesaverde,michigan,midatlantic,military,mill,miners,mining,minnesota,missile,missoula,modern,moma,money,monmouth,monticello,montreal,moscow,motorcycle,muenchen,muenster,mulhouse,muncie,museet,museumcenter,museumvereniging,music,national,nationalfirearms,nationalheritage,nativeamerican,naturalhistory,naturalhistorymuseum,naturalsciences,nature,naturhistorisches,natuurwetenschappen,naumburg,naval,nebraska,neues,newhampshire,newjersey,newmexico,newport,newspaper,newyork,niepce,norfolk,north,nrw,nyc,nyny,oceanographic,oceanographique,omaha,online,ontario,openair,oregon,oregontrail,otago,oxford,pacific,paderborn,palace,paleo,palmsprings,panama,paris,pasadena,pharmacy,philadelphia,philadelphiaarea,philately,phoenix,photography,pilots,pittsburgh,planetarium,plantation,plants,plaza,portal,portland,portlligat,posts-and-telecommunications,preservation,presidio,press,project,public,pubol,quebec,railroad,railway,research,resistance,riodejaneiro,rochester,rockart,roma,russia,saintlouis,salem,salvadordali,salzburg,sandiego,sanfrancisco,santabarbara,santacruz,santafe,saskatchewan,satx,savannahga,schlesisches,schoenbrunn,schokoladen,school,schweiz,science,science-fiction,scienceandhistory,scienceandindustry,sciencecenter,sciencecenters,sciencehistory,sciences,sciencesnaturelles,scotland,seaport,settlement,settlers,shell,sherbrooke,sibenik,silk,ski,skole,society,sologne,soundandvision,southcarolina,southwest,space,spy,square,stadt,stalbans,starnberg,state,stateofdelaware,station,steam,steiermark,stjohn,stockholm,stpetersburg,stuttgart,suisse,surgeonshall,surrey,svizzera,sweden,sydney,tank,tcm,technology,telekommunikation,television,texas,textile,theater,time,timekeeping,topology,torino,touch,town,transport,tree,trolley,trust,trustee,uhren,ulm,undersea,university,usa,usantiques,usarts,uscountryestate,usculture,usdecorativearts,usgarden,ushistory,ushuaia,uslivinghistory,utah,uvic,valley,vantaa,versailles,viking,village,virginia,virtual,virtuel,vlaanderen,volkenkunde,wales,wallonie,war,washingtondc,watch-and-clock,watchandclock,western,westfalen,whaling,wildlife,williamsburg,windmill,workshop,york,yorkshire,yosemite,youth,zoological,zoology,\u0438\u043A\u043E\u043C,\u05D9\u05E8\u05D5\u05E9\u05DC\u05D9\u05DD|mutual|mv>aero,biz,com,coop,edu,gov,info,int,mil,museum,name,net,org,pro|mw>ac,biz,co,com,coop,edu,gov,int,museum,net,org|mx>com,edu,gob,net,org|my>com,edu,gov,mil,name,net,org|mz>ac,adv,co,edu,gov,mil,net,org|na>ca,cc,co,com,dr,in,info,mobi,mx,name,or,org,pro,school,tv,us,ws|nab|nadex|nagoya|name|nationwide|natura|navy|nba|nc>asso,nom|ne|nec|net|netbank|netflix|network|neustar|new|newholland|news|next|nextdirect|nexus|nf>arts,com,firm,info,net,other,per,rec,store,web|nfl|ng>com,edu,gov,i,mil,mobi,name,net,org,sch|ngo|nhk|ni>ac,biz,co,com,edu,gob,in,info,int,mil,net,nom,org,web|nico|nike|nikon|ninja|nissan|nissay|nl|no>aa>gs<aarborte,aejrie,afjord,\xE5fjord,agdenes,ah>gs<akershus>nes<aknoluokta,\xE1k\u014Boluokta,akrehamn,\xE5krehamn,al,\xE5l,alaheadju,\xE1laheadju,alesund,\xE5lesund,algard,\xE5lg\xE5rd,alstahaug,alta,\xE1lt\xE1,alvdal,amli,\xE5mli,amot,\xE5mot,andasuolo,andebu,andoy,and\xF8y,ardal,\xE5rdal,aremark,arendal,arna,\xE5s,aseral,\xE5seral,asker,askim,askoy,ask\xF8y,askvoll,asnes,\xE5snes,audnedaln,aukra,aure,aurland,aurskog-holand,aurskog-h\xF8land,austevoll,austrheim,averoy,aver\xF8y,badaddja,b\xE5d\xE5ddj\xE5,b\xE6rum,bahcavuotna,b\xE1hcavuotna,bahccavuotna,b\xE1hccavuotna,baidar,b\xE1id\xE1r,bajddar,b\xE1jddar,balat,b\xE1l\xE1t,balestrand,ballangen,balsfjord,bamble,bardu,barum,batsfjord,b\xE5tsfjord,bearalvahki,bearalv\xE1hki,beardu,beiarn,berg,bergen,berlevag,berlev\xE5g,bievat,biev\xE1t,bindal,birkenes,bjarkoy,bjark\xF8y,bjerkreim,bjugn,bodo,bod\xF8,bokn,bomlo,b\xF8mlo,bremanger,bronnoy,br\xF8nn\xF8y,bronnoysund,br\xF8nn\xF8ysund,brumunddal,bryne,bu>gs<budejju,buskerud>nes<bygland,bykle,cahcesuolo,\u010D\xE1hcesuolo,davvenjarga,davvenj\xE1rga,davvesiida,deatnu,dep,dielddanuorri,divtasvuodna,divttasvuotna,donna,d\xF8nna,dovre,drammen,drangedal,drobak,dr\xF8bak,dyroy,dyr\xF8y,egersund,eid,eidfjord,eidsberg,eidskog,eidsvoll,eigersund,elverum,enebakk,engerdal,etne,etnedal,evenassi,even\xE1\u0161\u0161i,evenes,evje-og-hornnes,farsund,fauske,fedje,fet,fetsund,fhs,finnoy,finn\xF8y,fitjar,fjaler,fjell,fla,fl\xE5,flakstad,flatanger,flekkefjord,flesberg,flora,floro,flor\xF8,fm>gs<folkebibl,folldal,forde,f\xF8rde,forsand,fosnes,fr\xE6na,frana,fredrikstad,frei,frogn,froland,frosta,froya,fr\xF8ya,fuoisku,fuossko,fusa,fylkesbibl,fyresdal,gaivuotna,g\xE1ivuotna,galsa,g\xE1ls\xE1,gamvik,gangaviika,g\xE1\u014Bgaviika,gaular,gausdal,giehtavuoatna,gildeskal,gildesk\xE5l,giske,gjemnes,gjerdrum,gjerstad,gjesdal,gjovik,gj\xF8vik,gloppen,gol,gran,grane,granvin,gratangen,grimstad,grong,grue,gulen,guovdageaidnu,ha,h\xE5,habmer,h\xE1bmer,hadsel,h\xE6gebostad,hagebostad,halden,halsa,hamar,hamaroy,hammarfeasta,h\xE1mm\xE1rfeasta,hammerfest,hapmir,h\xE1pmir,haram,hareid,harstad,hasvik,hattfjelldal,haugesund,hedmark>os,valer,v\xE5ler<hemne,hemnes,hemsedal,herad,hitra,hjartdal,hjelmeland,hl>gs<hm>gs<hobol,hob\xF8l,hof,hokksund,hol,hole,holmestrand,holtalen,holt\xE5len,honefoss,h\xF8nefoss,hordaland>os<hornindal,horten,hoyanger,h\xF8yanger,hoylandet,h\xF8ylandet,hurdal,hurum,hvaler,hyllestad,ibestad,idrett,inderoy,inder\xF8y,iveland,ivgu,jan-mayen>gs<jessheim,jevnaker,jolster,j\xF8lster,jondal,jorpeland,j\xF8rpeland,kafjord,k\xE5fjord,karasjohka,k\xE1r\xE1\u0161johka,karasjok,karlsoy,karmoy,karm\xF8y,kautokeino,kirkenes,klabu,kl\xE6bu,klepp,kommune,kongsberg,kongsvinger,kopervik,kraanghke,kr\xE5anghke,kragero,krager\xF8,kristiansand,kristiansund,krodsherad,kr\xF8dsherad,krokstadelva,kv\xE6fjord,kv\xE6nangen,kvafjord,kvalsund,kvam,kvanangen,kvinesdal,kvinnherad,kviteseid,kvitsoy,kvits\xF8y,laakesvuemie,l\xE6rdal,lahppi,l\xE1hppi,langevag,langev\xE5g,lardal,larvik,lavagis,lavangen,leangaviika,lea\u014Bgaviika,lebesby,leikanger,leirfjord,leirvik,leka,leksvik,lenvik,lerdal,lesja,levanger,lier,lierne,lillehammer,lillesand,lindas,lind\xE5s,lindesnes,loabat,loab\xE1t,lodingen,l\xF8dingen,lom,loppa,lorenskog,l\xF8renskog,loten,l\xF8ten,lund,lunner,luroy,lur\xF8y,luster,lyngdal,lyngen,malatvuopmi,m\xE1latvuopmi,malselv,m\xE5lselv,malvik,mandal,marker,marnardal,masfjorden,masoy,m\xE5s\xF8y,matta-varjjat,m\xE1tta-v\xE1rjjat,meland,meldal,melhus,meloy,mel\xF8y,meraker,mer\xE5ker,midsund,midtre-gauldal,mil,mjondalen,mj\xF8ndalen,mo-i-rana,moareke,mo\xE5reke,modalen,modum,molde,more-og-romsdal>heroy,sande<m\xF8re-og-romsdal>her\xF8y,sande<mosjoen,mosj\xF8en,moskenes,moss,mosvik,mr>gs<muosat,muos\xE1t,museum,naamesjevuemie,n\xE5\xE5mesjevuemie,n\xE6r\xF8y,namdalseid,namsos,namsskogan,nannestad,naroy,narviika,narvik,naustdal,navuotna,n\xE1vuotna,nedre-eiker,nesna,nesodden,nesoddtangen,nesseby,nesset,nissedal,nittedal,nl>gs<nord-aurdal,nord-fron,nord-odal,norddal,nordkapp,nordland>bo,b\xF8,heroy,her\xF8y<nordre-land,nordreisa,nore-og-uvdal,notodden,notteroy,n\xF8tter\xF8y,nt>gs<odda,of>gs<oksnes,\xF8ksnes,ol>gs<omasvuotna,oppdal,oppegard,oppeg\xE5rd,orkanger,orkdal,orland,\xF8rland,orskog,\xF8rskog,orsta,\xF8rsta,osen,oslo>gs<osoyro,os\xF8yro,osteroy,oster\xF8y,ostfold>valer<\xF8stfold>v\xE5ler<ostre-toten,\xF8stre-toten,overhalla,ovre-eiker,\xF8vre-eiker,oyer,\xF8yer,oygarden,\xF8ygarden,oystre-slidre,\xF8ystre-slidre,porsanger,porsangu,pors\xE1\u014Bgu,porsgrunn,priv,rade,r\xE5de,radoy,rad\xF8y,r\xE6lingen,rahkkeravju,r\xE1hkker\xE1vju,raholt,r\xE5holt,raisa,r\xE1isa,rakkestad,ralingen,rana,randaberg,rauma,rendalen,rennebu,rennesoy,rennes\xF8y,rindal,ringebu,ringerike,ringsaker,risor,ris\xF8r,rissa,rl>gs<roan,rodoy,r\xF8d\xF8y,rollag,romsa,romskog,r\xF8mskog,roros,r\xF8ros,rost,r\xF8st,royken,r\xF8yken,royrvik,r\xF8yrvik,ruovat,rygge,salangen,salat,s\xE1lat,s\xE1l\xE1t,saltdal,samnanger,sandefjord,sandnes,sandnessjoen,sandnessj\xF8en,sandoy,sand\xF8y,sarpsborg,sauda,sauherad,sel,selbu,selje,seljord,sf>gs<siellak,sigdal,siljan,sirdal,skanit,sk\xE1nit,skanland,sk\xE5nland,skaun,skedsmo,skedsmokorset,ski,skien,skierva,skierv\xE1,skiptvet,skjak,skj\xE5k,skjervoy,skjerv\xF8y,skodje,slattum,smola,sm\xF8la,snaase,sn\xE5ase,snasa,sn\xE5sa,snillfjord,snoasa,sogndal,sogne,s\xF8gne,sokndal,sola,solund,somna,s\xF8mna,sondre-land,s\xF8ndre-land,songdalen,sor-aurdal,s\xF8r-aurdal,sor-fron,s\xF8r-fron,sor-odal,s\xF8r-odal,sor-varanger,s\xF8r-varanger,sorfold,s\xF8rfold,sorreisa,s\xF8rreisa,sortland,sorum,s\xF8rum,spjelkavik,spydeberg,st>gs<stange,stat,stathelle,stavanger,stavern,steigen,steinkjer,stjordal,stj\xF8rdal,stjordalshalsen,stj\xF8rdalshalsen,stokke,stor-elvdal,stord,stordal,storfjord,strand,stranda,stryn,sula,suldal,sund,sunndal,surnadal,svalbard>gs<sveio,svelvik,sykkylven,tana,tananger,telemark>bo,b\xF8<time,tingvoll,tinn,tjeldsund,tjome,tj\xF8me,tm>gs<tokke,tolga,tonsberg,t\xF8nsberg,torsken,tr>gs<tr\xE6na,trana,tranby,tranoy,tran\xF8y,troandin,trogstad,tr\xF8gstad,tromsa,tromso,troms\xF8,trondheim,trysil,tvedestrand,tydal,tynset,tysfjord,tysnes,tysv\xE6r,tysvar,ullensaker,ullensvang,ulvik,unjarga,unj\xE1rga,utsira,va>gs<vaapste,vadso,vads\xF8,v\xE6r\xF8y,vaga,v\xE5g\xE5,vagan,v\xE5gan,vagsoy,v\xE5gs\xF8y,vaksdal,valle,vang,vanylven,vardo,vard\xF8,varggat,v\xE1rgg\xE1t,varoy,vefsn,vega,vegarshei,veg\xE5rshei,vennesla,verdal,verran,vestby,vestfold>sande<vestnes,vestre-slidre,vestre-toten,vestvagoy,vestv\xE5g\xF8y,vevelstad,vf>gs<vgs,vik,vikna,vindafjord,voagat,volda,voss,vossevangen|nokia|northwesternmutual|norton|now|nowruz|nowtv|np>*|nr>biz,com,edu,gov,info,net,org|nra|nrw|ntt|nu|nyc|nz>ac,co,cri,geek,gen,govt,health,iwi,kiwi,maori,m\u0101ori,mil,net,org,parliament,school|obi|observer|off|office|okinawa|olayan|olayangroup|oldnavy|ollo|om>co,com,edu,gov,med,museum,net,org,pro|omega|one|ong|onion|onl|online|onyourside|ooo|open|oracle|orange|org|organic|origins|osaka|otsuka|ott|ovh|pa>abo,ac,com,edu,gob,ing,med,net,nom,org,sld|page|panasonic|paris|pars|partners|parts|party|passagens|pay|pccw|pe>com,edu,gob,mil,net,nom,org|pet|pf>com,edu,org|pfizer|pg>*|ph>com,edu,gov,i,mil,net,ngo,org|pharmacy|phd|philips|phone|photo|photography|photos|physio|piaget|pics|pictet|pictures|pid|pin|ping|pink|pioneer|pizza|pk>biz,com,edu,fam,gob,gok,gon,gop,gos,gov,info,net,org,web|pl>agro,aid,atm,augustow,auto,babia-gora,bedzin,beskidy,bialowieza,bialystok,bielawa,bieszczady,biz,boleslawiec,bydgoszcz,bytom,cieszyn,com,czeladz,czest,dlugoleka,edu,elblag,elk,glogow,gmina,gniezno,gorlice,gov>ap,griw,ic,is,kmpsp,konsulat,kppsp,kwp,kwpsp,mup,mw,oirm,oum,pa,pinb,piw,po,psp,psse,pup,rzgw,sa,sdn,sko,so,sr,starostwo,ug,ugim,um,umig,upow,uppo,us,uw,uzs,wif,wiih,winb,wios,witd,wiw,wsa,wskr,wuoz,wzmiuw,zp<grajewo,gsm,ilawa,info,jaworzno,jelenia-gora,jgora,kalisz,karpacz,kartuzy,kaszuby,katowice,kazimierz-dolny,kepno,ketrzyn,klodzko,kobierzyce,kolobrzeg,konin,konskowola,kutno,lapy,lebork,legnica,lezajsk,limanowa,lomza,lowicz,lubin,lukow,mail,malbork,malopolska,mazowsze,mazury,media,miasta,mielec,mielno,mil,mragowo,naklo,net,nieruchomosci,nom,nowaruda,nysa,olawa,olecko,olkusz,olsztyn,opoczno,opole,org,ostroda,ostroleka,ostrowiec,ostrowwlkp,pc,pila,pisz,podhale,podlasie,polkowice,pomorskie,pomorze,powiat,priv,prochowice,pruszkow,przeworsk,pulawy,radom,rawa-maz,realestate,rel,rybnik,rzeszow,sanok,sejny,sex,shop,sklep,skoczow,slask,slupsk,sos,sosnowiec,stalowa-wola,starachowice,stargard,suwalki,swidnica,swiebodzin,swinoujscie,szczecin,szczytno,szkola,targi,tarnobrzeg,tgory,tm,tourism,travel,turek,turystyka,tychy,ustka,walbrzych,warmia,warszawa,waw,wegrow,wielun,wlocl,wloclawek,wodzislaw,wolomin,wroclaw,zachpomor,zagan,zarow,zgora,zgorzelec|place|play|playstation|plumbing|plus|pm|pn>co,edu,gov,net,org|pnc|pohl|poker|politie|porn|post|pr>ac,biz,com,edu,est,gov,info,isla,name,net,org,pro,prof|pramerica|praxi|press|prime|pro>aaa,aca,acct,avocat,bar,cpa,eng,jur,law,med,recht|prod|productions|prof|progressive|promo|properties|property|protection|pru|prudential|ps>com,edu,gov,net,org,plo,sec|pt>com,edu,gov,int,net,nome,org,publ|pub|pw>belau,co,ed,go,ne,or|pwc|py>com,coop,edu,gov,mil,net,org|qa>com,edu,gov,mil,name,net,org,sch|qpon|quebec|quest|qvc|racing|radio|raid|re>asso,com,nom|read|realestate|realtor|realty|recipes|red|redstone|redumbrella|rehab|reise|reisen|reit|reliance|ren|rent|rentals|repair|report|republican|rest|restaurant|review|reviews|rexroth|rich|richardli|ricoh|rightathome|ril|rio|rip|rmit|ro>arts,com,firm,info,nom,nt,org,rec,store,tm,www|rocher|rocks|rodeo|rogers|room|rs>ac,co,edu,gov,in,org|rsvp|ru>ac,edu,gov,int,mil,test|rugby|ruhr|run|rw>ac,co,coop,gov,mil,net,org|rwe|ryukyu|sa>com,edu,gov,med,net,org,pub,sch|saarland|safe|safety|sakura|sale|salon|samsclub|samsung|sandvik|sandvikcoromant|sanofi|sap|sarl|sas|save|saxo|sb>com,edu,gov,net,org|sbi|sbs|sc>com,edu,gov,net,org|sca|scb|schaeffler|schmidt|scholarships|school|schule|schwarz|science|scjohnson|scor|scot|sd>com,edu,gov,info,med,net,org,tv|se>a,ac,b,bd,brand,c,d,e,f,fh,fhsk,fhv,g,h,i,k,komforb,kommunalforbund,komvux,l,lanbib,m,n,naturbruksgymn,o,org,p,parti,pp,press,r,s,t,tm,u,w,x,y,z|search|seat|secure|security|seek|select|sener|services|ses|seven|sew|sex|sexy|sfr|sg>com,edu,gov,net,org,per|sh>com,gov,mil,net,org|shangrila|sharp|shaw|shell|shia|shiksha|shoes|shop|shopping|shouji|show|showtime|shriram|si|silk|sina|singles|site|sj|sk|ski|skin|sky|skype|sl>com,edu,gov,net,org|sling|sm|smart|smile|sn>art,com,edu,gouv,org,perso,univ|sncf|so>com,edu,gov,me,net,org|soccer|social|softbank|software|sohu|solar|solutions|song|sony|soy|spa|space|sport|spot|spreadbetting|sr|srl|srt|ss>biz,com,edu,gov,net,org|st>co,com,consulado,edu,embaixada,gov,mil,net,org,principe,saotome,store|stada|staples|star|statebank|statefarm|stc|stcgroup|stockholm|storage|store|stream|studio|study|style|su|sucks|supplies|supply|support|surf|surgery|suzuki|sv>com,edu,gob,org,red|swatch|swiftcover|swiss|sx>gov|sy>com,edu,gov,mil,net,org|sydney|symantec|systems|sz>ac,co,org|tab|taipei|talk|taobao|target|tatamotors|tatar|tattoo|tax|taxi|tc|tci|td|tdk|team|tech|technology|tel|telefonica|temasek|tennis|teva|tf|tg|th>ac,co,go,in,mi,net,or|thd|theater|theatre|tiaa|tickets|tienda|tiffany|tips|tires|tirol|tj>ac,biz,co,com,edu,go,gov,int,mil,name,net,nic,org,test,web|tjmaxx|tjx|tk|tkmaxx|tl>gov|tm>co,com,edu,gov,mil,net,nom,org|tmall|tn>agrinet,com,defense,edunet,ens,fin,gov,ind,info,intl,mincom,nat,net,org,perso,rnrt,rns,rnu,tourism,turen|to>com,edu,gov,mil,net,org|today|tokyo|tools|top|toray|toshiba|total|tours|town|toyota|toys|tr>av,bbs,bel,biz,com,dr,edu,gen,gov,info,k12,kep,mil,name,nc>gov<net,org,pol,tel,tsk,tv,web|trade|trading|training|travel|travelchannel|travelers|travelersinsurance|trust|trv|tt>aero,biz,co,com,coop,edu,gov,info,int,jobs,mobi,museum,name,net,org,pro,travel|tube|tui|tunes|tushu|tv|tvs|tw>club,com,ebiz,edu,game,gov,idv,mil,net,org,\u5546\u696D,\u7D44\u7E54,\u7DB2\u8DEF|tz>ac,co,go,hotel,info,me,mil,mobi,ne,or,sc,tv|ua>cherkassy,cherkasy,chernigov,chernihiv,chernivtsi,chernovtsy,ck,cn,com,cr,crimea,cv,dn,dnepropetrovsk,dnipropetrovsk,dominic,donetsk,dp,edu,gov,if,in,ivano-frankivsk,kh,kharkiv,kharkov,kherson,khmelnitskiy,khmelnytskyi,kiev,kirovograd,km,kr,krym,ks,kv,kyiv,lg,lt,lugansk,lutsk,lv,lviv,mk,mykolaiv,net,nikolaev,od,odesa,odessa,org,pl,poltava,rivne,rovno,rv,sb,sebastopol,sevastopol,sm,sumy,te,ternopil,uz,uzhgorod,vinnica,vinnytsia,vn,volyn,yalta,zaporizhzhe,zaporizhzhia,zhitomir,zhytomyr,zp,zt|ubank|ubs|uconnect|ug>ac,co,com,go,ne,or,org,sc|uk>ac,co,gov,ltd,me,net,nhs,org,plc,police,sch>*|unicom|university|uno|uol|ups|us>ak>cc,k12,lib<al>cc,k12,lib<ar>cc,k12,lib<as>cc,k12,lib<az>cc,k12,lib<ca>cc,k12,lib<co>cc,k12,lib<ct>cc,k12,lib<dc>cc,k12,lib<de>cc,k12<dni,fed,fl>cc,k12,lib<ga>cc,k12,lib<gu>cc,k12,lib<hi>cc,lib<ia>cc,k12,lib<id>cc,k12,lib<il>cc,k12,lib<in>cc,k12,lib<isa,kids,ks>cc,k12,lib<ky>cc,k12,lib<la>cc,k12,lib<ma>cc,k12>chtr,paroch,pvt<lib<md>cc,k12,lib<me>cc,k12,lib<mi>ann-arbor,cc,cog,dst,eaton,gen,k12,lib,mus,tec,washtenaw<mn>cc,k12,lib<mo>cc,k12,lib<ms>cc,k12,lib<mt>cc,k12,lib<nc>cc,k12,lib<nd>cc,lib<ne>cc,k12,lib<nh>cc,k12,lib<nj>cc,k12,lib<nm>cc,k12,lib<nsn,nv>cc,k12,lib<ny>cc,k12,lib<oh>cc,k12,lib<ok>cc,k12,lib<or>cc,k12,lib<pa>cc,k12,lib<pr>cc,k12,lib<ri>cc,k12,lib<sc>cc,k12,lib<sd>cc,lib<tn>cc,k12,lib<tx>cc,k12,lib<ut>cc,k12,lib<va>cc,k12,lib<vi>cc,k12,lib<vt>cc,k12,lib<wa>cc,k12,lib<wi>cc,k12,lib<wv>cc<wy>cc,k12,lib|uy>com,edu,gub,mil,net,org|uz>co,com,net,org|va|vacations|vana|vanguard|vc>com,edu,gov,mil,net,org|ve>arts,co,com,e12,edu,firm,gob,gov,info,int,mil,net,org,rec,store,tec,web|vegas|ventures|verisign|verm\xF6gensberater|verm\xF6gensberatung|versicherung|vet|vg|vi>co,com,k12,net,org|viajes|video|vig|viking|villas|vin|vip|virgin|visa|vision|vistaprint|viva|vivo|vlaanderen|vn>ac,biz,com,edu,gov,health,info,int,name,net,org,pro|vodka|volkswagen|volvo|vote|voting|voto|voyage|vu>com,edu,net,org|vuelos|wales|walmart|walter|wang|wanggou|warman|watch|watches|weather|weatherchannel|webcam|weber|website|wed|wedding|weibo|weir|wf|whoswho|wien|wiki|williamhill|win|windows|wine|winners|wme|wolterskluwer|woodside|work|works|world|wow|ws>com,edu,gov,net,org|wtc|wtf|xbox|xerox|xfinity|xihuan|xin|xxx|xyz|yachts|yahoo|yamaxun|yandex|ye>*|yodobashi|yoga|yokohama|you|youtube|yt|yun|za>ac,agric,alt,co,edu,gov,grondar,law,mil,net,ngo,nic,nis,nom,org,school,tm,web|zappos|zara|zero|zip|zm>ac,biz,co,com,edu,gov,info,mil,net,org,sch|zone|zuerich|zw>ac,co,gov,mil,org|\u03B5\u03BB|\u0431\u0433|\u0431\u0435\u043B|\u0434\u0435\u0442\u0438|\u0435\u044E|\u043A\u0430\u0442\u043E\u043B\u0438\u043A|\u043A\u043E\u043C|\u049B\u0430\u0437|\u043C\u043A\u0434|\u043C\u043E\u043D|\u043C\u043E\u0441\u043A\u0432\u0430|\u043E\u043D\u043B\u0430\u0439\u043D|\u043E\u0440\u0433|\u0440\u0443\u0441|\u0440\u0444|\u0441\u0430\u0439\u0442|\u0441\u0440\u0431>\u0430\u043A,\u043E\u0431\u0440,\u043E\u0434,\u043E\u0440\u0433,\u043F\u0440,\u0443\u043F\u0440|\u0443\u043A\u0440|\u10D2\u10D4|\u0570\u0561\u0575|\u05E7\u05D5\u05DD|\u0627\u0628\u0648\u0638\u0628\u064A|\u0627\u062A\u0635\u0627\u0644\u0627\u062A|\u0627\u0631\u0627\u0645\u0643\u0648|\u0627\u0644\u0627\u0631\u062F\u0646|\u0627\u0644\u062C\u0632\u0627\u0626\u0631|\u0627\u0644\u0633\u0639\u0648\u062F\u064A\u0629|\u0627\u0644\u0633\u0639\u0648\u062F\u064A\u0647|\u0627\u0644\u0633\u0639\u0648\u062F\u06CC\u0629|\u0627\u0644\u0633\u0639\u0648\u062F\u06CC\u06C3|\u0627\u0644\u0639\u0644\u064A\u0627\u0646|\u0627\u0644\u0645\u063A\u0631\u0628|\u0627\u0644\u064A\u0645\u0646|\u0627\u0645\u0627\u0631\u0627\u062A|\u0627\u064A\u0631\u0627\u0646|\u0627\u06CC\u0631\u0627\u0646|\u0628\u0627\u0631\u062A|\u0628\u0627\u0632\u0627\u0631|\u0628\u06BE\u0627\u0631\u062A|\u0628\u064A\u062A\u0643|\u067E\u0627\u0643\u0633\u062A\u0627\u0646|\u067E\u0627\u06A9\u0633\u062A\u0627\u0646|\u0680\u0627\u0631\u062A|\u062A\u0648\u0646\u0633|\u0633\u0648\u062F\u0627\u0646|\u0633\u0648\u0631\u064A\u0627|\u0633\u0648\u0631\u064A\u0629|\u0634\u0628\u0643\u0629|\u0639\u0631\u0627\u0642|\u0639\u0631\u0628|\u0639\u0645\u0627\u0646|\u0641\u0644\u0633\u0637\u064A\u0646|\u0642\u0637\u0631|\u0643\u0627\u062B\u0648\u0644\u064A\u0643|\u0643\u0648\u0645|\u0645\u0635\u0631|\u0645\u0644\u064A\u0633\u064A\u0627|\u0645\u0648\u0631\u064A\u062A\u0627\u0646\u064A\u0627|\u0645\u0648\u0642\u0639|\u0647\u0645\u0631\u0627\u0647|\u0915\u0949\u092E|\u0928\u0947\u091F|\u092D\u093E\u0930\u0924|\u092D\u093E\u0930\u0924\u092E\u094D|\u092D\u093E\u0930\u094B\u0924|\u0938\u0902\u0917\u0920\u0928|\u09AC\u09BE\u0982\u09B2\u09BE|\u09AD\u09BE\u09B0\u09A4|\u09AD\u09BE\u09F0\u09A4|\u0A2D\u0A3E\u0A30\u0A24|\u0AAD\u0ABE\u0AB0\u0AA4|\u0B2D\u0B3E\u0B30\u0B24|\u0B87\u0BA8\u0BCD\u0BA4\u0BBF\u0BAF\u0BBE|\u0B87\u0BB2\u0B99\u0BCD\u0B95\u0BC8|\u0B9A\u0BBF\u0B99\u0BCD\u0B95\u0BAA\u0BCD\u0BAA\u0BC2\u0BB0\u0BCD|\u0C2D\u0C3E\u0C30\u0C24\u0C4D|\u0CAD\u0CBE\u0CB0\u0CA4|\u0D2D\u0D3E\u0D30\u0D24\u0D02|\u0DBD\u0D82\u0D9A\u0DCF|\u0E04\u0E2D\u0E21|\u0E44\u0E17\u0E22>\u0E17\u0E2B\u0E32\u0E23,\u0E18\u0E38\u0E23\u0E01\u0E34\u0E08,\u0E40\u0E19\u0E47\u0E15,\u0E23\u0E31\u0E10\u0E1A\u0E32\u0E25,\u0E28\u0E36\u0E01\u0E29\u0E32,\u0E2D\u0E07\u0E04\u0E4C\u0E01\u0E23|\uB2F7\uB137|\uB2F7\uCEF4|\uC0BC\uC131|\uD55C\uAD6D|\u30B0\u30FC\u30B0\u30EB|\u30AF\u30E9\u30A6\u30C9|\u30B3\u30E0|\u30B9\u30C8\u30A2|\u30BB\u30FC\u30EB|\u30D5\u30A1\u30C3\u30B7\u30E7\u30F3|\u30DD\u30A4\u30F3\u30C8|\u307F\u3093\u306A|\u4E16\u754C|\u4E2D\u4FE1|\u4E2D\u56FD|\u4E2D\u570B|\u4E2D\u6587\u7F51|\u4F01\u4E1A|\u4F5B\u5C71|\u4FE1\u606F|\u5065\u5EB7|\u516B\u5366|\u516C\u53F8|\u516C\u76CA|\u53F0\u6E7E|\u53F0\u7063|\u5546\u57CE|\u5546\u5E97|\u5546\u6807|\u5609\u91CC|\u5609\u91CC\u5927\u9152\u5E97|\u5728\u7EBF|\u5927\u4F17\u6C7D\u8F66|\u5927\u62FF|\u5929\u4E3B\u6559|\u5A31\u4E50|\u5BB6\u96FB|\u5DE5\u884C|\u5E7F\u4E1C|\u5FAE\u535A|\u6148\u5584|\u6211\u7231\u4F60|\u624B\u673A|\u624B\u8868|\u62DB\u8058|\u653F\u52A1|\u653F\u5E9C|\u65B0\u52A0\u5761|\u65B0\u95FB|\u65F6\u5C1A|\u66F8\u7C4D|\u673A\u6784|\u6DE1\u9A6C\u9521|\u6E38\u620F|\u6FB3\u9580|\u6FB3\u95E8|\u70B9\u770B|\u73E0\u5B9D|\u79FB\u52A8|\u7EC4\u7EC7\u673A\u6784|\u7F51\u5740|\u7F51\u5E97|\u7F51\u7AD9|\u7F51\u7EDC|\u8054\u901A|\u81FA\u7063|\u8BFA\u57FA\u4E9A|\u8C37\u6B4C|\u8D2D\u7269|\u901A\u8CA9|\u96C6\u56E2|\u96FB\u8A0A\u76C8\u79D1|\u98DE\u5229\u6D66|\u98DF\u54C1|\u9910\u5385|\u9999\u683C\u91CC\u62C9|\u9999\u6E2F>\u500B\u4EBA,\u516C\u53F8,\u653F\u5E9C,\u6559\u80B2,\u7D44\u7E54,\u7DB2\u7D61" };
  }
});

// ../node_modules/parse-domain/lists/icann.complete.js
var require_icann_complete2 = __commonJS({
  "../node_modules/parse-domain/lists/icann.complete.js"(exports, module) {
    "use strict";
    init_functionsRoutes_0_6627680816661201();
    var parse2 = require_parse();
    module.exports = parse2(require_icann_complete().trie);
  }
});

// ../node_modules/parse-domain/build/tries/private.complete.json
var require_private_complete = __commonJS({
  "../node_modules/parse-domain/build/tries/private.complete.json"(exports, module) {
    module.exports = { trie: "academy>official|ae>blogspot,nom|af>nom|ai>nom,uwu|al>blogspot,nom|am>blogspot|app>hasura,loginline,run>a<telebit,web,wnext|ar>com>blogspot|asia>cloudns|at>12hp,2ix,4lima,biz,co>blogspot<futurecms>*,ex>*<in>*<<futurehosting,futuremailing,info,lima-city,ortsinfo>ex>*<kunden>*<<priv|au>com>blogspot|ba>blogspot|be>blogspot,transurl>*<webhosting|bg>barsy,blogspot|biz>bpl,cloudns,dscloud,dyndns,for-better,for-more,for-some,for-the,mmafan,myftp,no-ip,orx,selfip,webhop|bj>blogspot|bn>co|br>com>blogspot<leg>ac,al,am,ap,ba,ce,df,es,go,ma,mg,ms,mt,pa,pb,pe,pi,pr,rj,rn,ro,rr,rs,sc,se,sp,to|bs>we|business>co|by>com>blogspot<nym|bz>nym,za|ca>awdev>*<barsy,blogspot,co,no-ip|casa>nabu>ui|cc>cloudns,fantasyleague,ftpaccess,game-server,myphotos,scrapping,twmail|cf>blogspot|ch>12hp,2ix,4lima,blogspot,dnsking,gotdns,lima-city,linkyard-cloud,square7|ci>fin|city>ng|cl>blogspot,nom|cloud>linkyard,magentosite>*<on-rancher>*<sensiosite>*<statics>*<trafficplex,vapor,voorloper|club>barsy,cloudns,pony|cn>com>amazonaws>cn-north-1>s3<compute>*<eb>cn-north-1,cn-northwest-1<elb>*<<<instantcloud|co>carrd,com>blogspot<crd,go-vip,leadpages,lpages,mypi,n4t,nodum,otap>*<repl|com>001www,0emm>*<1kapp,3utilities,4u,africa,alpha-myqnapcloud,amazonaws>ap-northeast-1>dualstack>s3<<ap-northeast-2>dualstack>s3<s3,s3-website<ap-south-1>dualstack>s3<s3,s3-website<ap-southeast-1>dualstack>s3<<ap-southeast-2>dualstack>s3<<ca-central-1>dualstack>s3<s3,s3-website<compute>*<compute-1>*<elb>*<eu-central-1>dualstack>s3<s3,s3-website<eu-west-1>dualstack>s3<<eu-west-2>dualstack>s3<s3,s3-website<eu-west-3>dualstack>s3<s3,s3-website<s3,s3-ap-northeast-1,s3-ap-northeast-2,s3-ap-south-1,s3-ap-southeast-1,s3-ap-southeast-2,s3-ca-central-1,s3-eu-central-1,s3-eu-west-1,s3-eu-west-2,s3-eu-west-3,s3-external-1,s3-fips-us-gov-west-1,s3-sa-east-1,s3-us-east-2,s3-us-gov-west-1,s3-us-west-1,s3-us-west-2,s3-website-ap-northeast-1,s3-website-ap-southeast-1,s3-website-ap-southeast-2,s3-website-eu-west-1,s3-website-sa-east-1,s3-website-us-east-1,s3-website-us-west-1,s3-website-us-west-2,sa-east-1>dualstack>s3<<us-east-1>dualstack>s3<<us-east-2>dualstack>s3<s3,s3-website<<appchizi,applinzi,appspot,ar,balena-devices,barsycenter,barsyonline,betainabox,bitballoon,blogdns,blogspot,blogsyte,bloxcms,bounty-full>alpha,beta<bplaced,br,cechire,ciscofreak,cloudcontrolapp,cloudcontrolled,cn,co,codespot,damnserver,dattolocal,dattorelay,dattoweb,ddnsfree,ddnsgeek,ddnsking,ddnslive,de,dev-myqnapcloud,ditchyourip,dnsalias,dnsdojo,dnsiskinky,doesntexist,dontexist,doomdns,drayddns,dreamhosters,dsmynas,dyn-o-saur,dynalias,dyndns-at-home,dyndns-at-work,dyndns-blog,dyndns-free,dyndns-home,dyndns-ip,dyndns-mail,dyndns-office,dyndns-pics,dyndns-remote,dyndns-server,dyndns-web,dyndns-wiki,dyndns-work,dynns,elasticbeanstalk>ap-northeast-1,ap-northeast-2,ap-northeast-3,ap-south-1,ap-southeast-1,ap-southeast-2,ca-central-1,eu-central-1,eu-west-1,eu-west-2,eu-west-3,sa-east-1,us-east-1,us-east-2,us-gov-west-1,us-west-1,us-west-2<est-a-la-maison,est-a-la-masion,est-le-patron,est-mon-blogueur,eu,evennode>eu-1,eu-2,eu-3,eu-4,us-1,us-2,us-3,us-4<familyds,fastly-terrarium,fastvps-server,fbsbx>apps<firebaseapp,firewall-gateway,flynnhub,freebox-os,freeboxos,from-ak,from-al,from-ar,from-ca,from-ct,from-dc,from-de,from-fl,from-ga,from-hi,from-ia,from-id,from-il,from-in,from-ks,from-ky,from-ma,from-md,from-mi,from-mn,from-mo,from-ms,from-mt,from-nc,from-nd,from-ne,from-nh,from-nj,from-nm,from-nv,from-oh,from-ok,from-or,from-pa,from-pr,from-ri,from-sc,from-sd,from-tn,from-tx,from-ut,from-va,from-vt,from-wa,from-wi,from-wv,from-wy,gb,geekgalaxy,getmyip,giize,githubusercontent,gleeze,googleapis,googlecode,gotdns,gotpantheon,gr,health-carereform,herokuapp,herokussl,hk,hobby-site,homelinux,homesecuritymac,homesecuritypc,homeunix,hu,iamallama,is-a-anarchist,is-a-blogger,is-a-bookkeeper,is-a-bulls-fan,is-a-caterer,is-a-chef,is-a-conservative,is-a-cpa,is-a-cubicle-slave,is-a-democrat,is-a-designer,is-a-doctor,is-a-financialadvisor,is-a-geek,is-a-green,is-a-guru,is-a-hard-worker,is-a-hunter,is-a-landscaper,is-a-lawyer,is-a-liberal,is-a-libertarian,is-a-llama,is-a-musician,is-a-nascarfan,is-a-nurse,is-a-painter,is-a-personaltrainer,is-a-photographer,is-a-player,is-a-republican,is-a-rockstar,is-a-socialist,is-a-student,is-a-teacher,is-a-techie,is-a-therapist,is-an-accountant,is-an-actor,is-an-actress,is-an-anarchist,is-an-artist,is-an-engineer,is-an-entertainer,is-certified,is-gone,is-into-anime,is-into-cars,is-into-cartoons,is-into-games,is-leet,is-not-certified,is-slick,is-uberleet,is-with-theband,isa-geek,isa-hockeynut,issmarterthanyou,jdevcloud,joyent>cns>*<<jpn,kozow,kr,likes-pie,likescandy,linode>members,nodebalancer<lmpm>app<logoip,loseyourip,lpusercontent,meteorapp>eu<mex,miniserver,myactivedirectory,myasustor,mydatto,mydobiss,mydrobo,myiphost,myqnapcloud,myravendb,mysecuritycamera,myshopblocks,mytuleap,myvnc,neat-url,net-freaks,netlify,nfshost,no,on-aptible,onrender,onthewifi,ooguy,operaunite,outsystemscloud,ownprovider,pagefrontapp,pagespeedmobilizer,pgfog,pixolino,point2this,prgmr>xen<publishproxy,qa2,qc,qualifioapp,quicksytes,quipelements>*<rackmaze,remotewd,render>app<rhcloud,ru,sa,saves-the-whales,scrysec,securitytactics,selfip,sells-for-less,sells-for-u,servebbs,servebeer,servecounterstrike,serveexchange,serveftp,servegame,servehalflife,servehttp,servehumour,serveirc,servemp3,servep2p,servepics,servequake,servesarcasm,shopitsite,simple-url,sinaapp,space-to-rent,stackhero-network,stdlib>api<stufftoread,teaches-yoga,temp-dns,theworkpc,thingdustdata,townnews-staging,trycloudflare,uk,unusualperson,us,uy,vipsinaapp,wafflecell,withgoogle,withyoutube,workisboring,wpcomstaging,wpdevcloud,writesthisblog,xenapponazure,xnbay>u2,u2-local<yolasite,za|community>ravendb|cool>de|cv>blogspot|cx>ath,info|cy>com>blogspot|cz>blogspot,co,e4,metacentrum>cloud,custom<muni>cloud>flt,usr<<realm|de>12hp,2ix,4lima,barsy,blogspot,bplaced,com,cosidns>dyn<dd-dns,ddnss>dyn,dyndns<dnshome,dnsupdater,dray-dns,draydns,dyn-berlin,dyn-ip24,dyn-vpn,dynamisches-dns,dyndns1,dynvpn,firewall-gateway,fuettertdasnetz,git-repos,goip,home-webserver>dyn<in-berlin,in-brb,in-butter,in-dsl,in-vpn,internet-dns,isteingeek,istmein,keymachine,l-o-g-i-n,lcube-server,lebtimnetz,leitungsen,lima-city,logoip,mein-iserv,mein-vigor,my-gateway,my-router,my-vigor,my-wan,myhome-server,spdns,speedpartner>customer<square7,svn-repos,syno-ds,synology-diskstation,synology-ds,taifun-dns,test-iserv,traeumtgerade,uberspace>*<virtual-user,virtualuser|design>bss|dev>iserv,lcl>*<loginline,stg>*<webhare>*<workers|digital>cloudapps>london|direct>fastpanel|dk>biz,blogspot,co,firm,reg,store|earth>dapps>*,bzz>*|ec>nym|edu>rit>git-pages|education>co|ee>com>blogspot|eg>com>blogspot|es>com>blogspot|estate>compute>*|eu>barsy,cloudns,diskstation,mycd,spdns,transurl>*<wellbeingzone|eus>party>user|events>co|faith>ybo|farm>storj|fashion>of,on|fi>blogspot,dy,h\xE4kkinen,iki|financial>co|fit>ptplus|football>of|fr>blogspot,chirurgiens-dentistes-en-france,fbx-os,fbxos,freebox-os,freeboxos,on-web|gd>nom|gdn>cnpy|ge>nom|gg>cya,kaas|gl>biz,nom|goog>cloud|gr>blogspot,nym|group>discourse|gt>nom|gy>nym|hk>blogspot,inc,ltd,nym|hn>nom|host>cloudaccess,freesite,half,pcloud|hosting>opencraft|hr>blogspot,free|hu>blogspot|id>co>blogspot|ie>blogspot,nym|il>co>blogspot|im>nom,ro|in>barsy,blogspot,cloudns|info>barrel-of-knowledge,barrell-of-knowledge,barsy,cloudns,dvrcam,dynamic-dns,dyndns,for-our,forumz,groks-the,groks-this,here-for-more,ilovecollege,knowsitall,mayfirst,no-ip,nsupdate,selfip,v-info,webhop|ink>ng|io>2038,apigee,applicationcloud,azurecontainer,b-data,backplaneapp,banzaicloud>app<barsy,basicserver,bigv>uk0<boxfuse,browsersafetymark,cleverapps,dedyn,definima,drud,dyn53,enonic>customer<github,gitlab,hasura-app,hzc,lair>apps<loginline,lolipop,mo-siemens,moonscale>*<ngrok,nid,nodeart>stage<nodum,on-rio>*<pantheonsite,protonet,readthedocs,resindevice,resinstaging>devices<s5y>*<sandcats,scapp,shiftedit,spacekit,stolos>*<telebit,thingdust>dev>cust<disrec>cust<prod>cust<testing>cust<<utwente,vaporcloud,virtualserver,wedeploy|is>blogspot,cupcake|it>16-b,32-b,64-b,blogspot,syncloud|jp>blogspot,ne>aseinet>user<gehirn<usercontent|ke>co>blogspot<nom|kr>blogspot|krd>co,edu|kz>nym|la>bnr,c,nym|land>static>dev,sites|lc>nym,oy|li>blogspot,caa,nom,nym|link>cyon,dweb>*<mypep|london>in,of|lt>blogspot,nym|lu>blogspot,nym|management>router|md>blogspot|me>barsy,brasilia,c66,daplie>localhost<ddns,diskstation,dnsfor,dscloud,filegear,filegear-au,filegear-de,filegear-gb,filegear-ie,filegear-jp,filegear-sg,glitch,hopto,i234,loginto,myds,nctu,nohost,noip,nym,ravendb,soundcast,synology,tcp4,webhop,wedeploy,yombo|men>for|menu>barsy|mk>blogspot,nom|mn>nyc,nym|mobi>barsy,dscloud|mom>and,for|mr>blogspot|ms>lab|mt>com>blogspot|mx>blogspot,nym|my>blogspot|name>her>forgot<his>forgot|net>alwaysdata,at-band-camp,azure-mobile,azurewebsites,barsy,blackbaudcdn,blogdns,boomla,bounceme,bplaced,broke-it,buyshouses,casacam,cdn77>r<cdn77-ssl,channelsdvr,cloudaccess,cloudapp,cloudeity,cloudfront,cloudfunctions,cloudycluster,cryptonomic>*<dattolocal,ddns,debian,definima,dnsalias,dnsdojo,dnsup,does-it,dontexist,dsmynas,dynalias,dynathome,dynu,dynv6,eating-organic,endofinternet,familyds,fastly>freetls,map,prod>a,global<ssl>a,b,global<<fastlylb>map<feste-ip,firewall-gateway,flynnhosting,from-az,from-co,from-la,from-ny,gb,gets-it,go-vip,ham-radio-op,hicam,homeftp,homeip,homelinux,homeunix,hu,in,in-dsl,in-the-band,in-vpn,iobb,ipifony,is-a-chef,is-a-geek,isa-geek,jp,kicks-ass,kinghost,knx-server,memset,moonscale,mydatto,mydissent,myeffect,myfritz,mymediapc,mypsx,mysecuritycamera,nhlfan,no-ip,now-dns,office-on-the,ownip,pgafan,podzone,privatizehealthinsurance,rackmaze,redirectme,ru,schokokeks,scrapper-site,se,selfip,sells-it,servebbs,serveblog,serveftp,serveminecraft,siteleaf,square7,srcf>soc,user<static-access,sytes,t3l3p0rt,thruhere,twmail,uk,uni5,vpndns,webhop,yandexcloud>storage,website<za|network>alces>*<arvo,azimuth,co|ng>col,com>blogspot<firm,gen,ltd|nl>blogspot,cistron,co,demon,hosting-cluster,khplay,transurl>*<virtueeldomein|no>blogspot,co|nu>builder>site<enterprisecloud,merseine,mine,nom,shacknet|nz>co>blogspot<nym|one>for,homelink,onred>staging|online>barsy|org>accesscam,ae,altervista,amune>tele<barsy,blogdns,blogsite,bmoattachments,boldlygoingnowhere,cable-modem,camdvr,cdn77>c,rsc<cdn77-secure>origin>ssl<<certmgr,cloudns,collegefan,couchpotatofries,ddnss,diskstation,dnsalias,dnsdojo,doesntexist,dontexist,doomdns,dsmynas,duckdns,dvrdns,dynalias,dyndns>go,home<dynserv,edugit,endofinternet,endoftheinternet,eu>al,asso,at,au,be,bg,ca,cd,ch,cn,cy,cz,de,dk,edu,ee,es,fi,fr,gr,hr,hu,ie,il,in,int,is,it,jp,kr,lt,lu,lv,mc,me,mk,mt,my,net,ng,nl,no,nz,paris,pl,pt,q-a,ro,ru,se,si,sk,tr,uk,us<familyds,fedorainfracloud,fedorapeople,fedoraproject>cloud,os>app<stg>os>app<<<freeddns,freedesktop,from-me,game-host,gotdns,hepforge,hk,hobby-site,homedns,homeftp,homelinux,homeunix,hopto,in-dsl,in-vpn,is-a-bruinsfan,is-a-candidate,is-a-celticsfan,is-a-chef,is-a-geek,is-a-knight,is-a-linux-user,is-a-patsfan,is-a-soxfan,is-found,is-lost,is-saved,is-very-bad,is-very-evil,is-very-good,is-very-nice,is-very-sweet,isa-geek,js,kicks-ass,mayfirst,misconfused,mlbfan,mozilla-iot,my-firewall,myfirewall,myftp,mysecuritycamera,mywire,nflfan,no-ip,now-dns,pimienta,podzone,poivron,potager,pubtls,read-books,readmyblog,selfip,sellsyourhome,servebbs,serveftp,servegame,spdns,stuff-4-sale,sweetpepper,tunk,tuxfamily,twmail,ufcfan,uklugs,us,webhop,webredirect,wmflabs,za,zapto|ovh>nerdpol|page>prvcy|party>ybo|pe>blogspot,nym|pictures>1337|pl>art,beep,co,gda,gdansk,gdynia,gliwice,krakow,krasnik,leczna,lubartow,lublin,med,poniatowa,poznan,sopot,swidnik,wroc,zakopane|place>co|pm>own|pro>barsy,cloudns,dnstrace>bci|pt>blogspot,nym|pub>barsy|pw>cloudns,nom,x443|qa>blogspot,nom|re>blogspot|review>ybo|rip>clan|ro>blogspot,nym,shop|rocks>lima-city,myddns,webspace|rs>blogspot,nom,ox,ua|ru>adygeya,bashkiria,bir,blogspot,cbg,cldmail>hb<com,dagestan,grozny,kalmykia,kustanai,marine,mordovia,msk,myjino>hosting>*<landing>*<spectrum>*<vps>*<<mytis,nalchik,net,nov,org,pp,pyatigorsk,ras,spb,vladikavkaz,vladimir|run>development,hs,ravendb,repl|sale>for|school>ng|science>ybo|se>blogspot,com,conf|services>loginline|sg>blogspot|sh>hashbang,now,platform>*<wedeploy|shop>barsy|si>blogspot,nom|site>barsy,byen,cloudera,cyon,lelux,loginline,platformsh>*|sk>blogspot,nym|sn>blogspot|so>sch|space>linkitools,uber,xs4all|st>noho,nom|su>abkhazia,adygeya,aktyubinsk,arkhangelsk,armenia,ashgabad,azerbaijan,balashov,bashkiria,bryansk,bukhara,chimkent,dagestan,east-kazakhstan,exnet,georgia,grozny,ivanovo,jambyl,kalmykia,kaluga,karacol,karaganda,karelia,khakassia,krasnodar,kurgan,kustanai,lenug,mangyshlak,mordovia,msk,murmansk,nalchik,navoi,north-kazakhstan,nov,nym,obninsk,penza,pokrovsk,sochi,spb,tashkent,termez,togliatti,troitsk,tselinograd,tula,tuva,vladikavkaz,vladimir,vologda|support>barsy|sx>nym|systems>knightpoint|td>blogspot|technology>co|th>online,shop|tj>nom|to>quickconnect>direct<vpnplus|top>now-dns,ntdll|tr>com>blogspot|trade>ybo|tv>better-than,dyndns,on-the-web,worse-than|tw>blogspot,com>mymailer<nym,url|ua>biz,cc,co,inf,ltd,pp|ug>blogspot,nom|uk>barsy,co>barsy,barsyonline,blogspot,bytemark>dh,vm<gwiddle,nh-serv,no-ip,wellbeingzone<gov>homeoffice,service<org>glug,lug,lugs|us>cloudns,de>lib<drud,freeddns,golffan,is-by,land-4-sale,noip,pointto,stuff-4-sale|uy>com>blogspot<nom|vc>gv>d<nom|vg>nom|vn>blogspot|work>of,to|ws>advisor>*<cloud66,dyndns,mypets|xyz>blogsite,crafting,fhapp,telebit>*<zapto|za>co>blogspot|zone>cloud66,hs,lima,triton>*" };
  }
});

// ../node_modules/parse-domain/lists/private.complete.js
var require_private_complete2 = __commonJS({
  "../node_modules/parse-domain/lists/private.complete.js"(exports, module) {
    "use strict";
    init_functionsRoutes_0_6627680816661201();
    var parse2 = require_parse();
    module.exports = parse2(require_private_complete().trie);
  }
});

// ../node_modules/parse-domain/lib/normalize.js
var require_normalize = __commonJS({
  "../node_modules/parse-domain/lib/normalize.js"(exports) {
    "use strict";
    init_functionsRoutes_0_6627680816661201();
    function _typeof(obj) {
      if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
        _typeof = function _typeof2(obj2) {
          return typeof obj2;
        };
      } else {
        _typeof = function _typeof2(obj2) {
          return obj2 && typeof Symbol === "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
        };
      }
      return _typeof(obj);
    }
    function normalizeUrl(url) {
      if (!url || typeof url !== "string") {
        return null;
      }
      return url.trim().toLowerCase();
    }
    function normalizeOptions(options) {
      var normalized = !options || _typeof(options) !== "object" ? /* @__PURE__ */ Object.create(null) : options;
      if ("privateTlds" in normalized === false) {
        normalized.privateTlds = false;
      }
      if ("customTlds" in normalized && normalized.customTlds instanceof RegExp === false) {
        normalized.customTlds = new RegExp("\\.(" + normalized.customTlds.join("|") + ")$");
      }
      return normalized;
    }
    exports.url = normalizeUrl;
    exports.options = normalizeOptions;
  }
});

// ../node_modules/parse-domain/lib/trie/lookUp.js
var require_lookUp = __commonJS({
  "../node_modules/parse-domain/lib/trie/lookUp.js"(exports, module) {
    "use strict";
    init_functionsRoutes_0_6627680816661201();
    var characters = require_characters();
    function lookUp(trie, domains) {
      var domainsToCheck = domains.slice();
      var topLevel = [];
      var node = trie;
      while (domainsToCheck.length) {
        var domain = domainsToCheck.pop();
        if (node.children.has(characters.WILDCARD)) {
          if (node.children.has(characters.EXCEPTION + domain)) {
            break;
          }
          node = node.children.get(characters.WILDCARD);
        } else {
          if (node.children.has(domain) === false) {
            break;
          }
          node = node.children.get(domain);
        }
        topLevel.unshift(domain);
      }
      return topLevel;
    }
    module.exports = lookUp;
  }
});

// ../node_modules/parse-domain/lib/parseDomain.js
var require_parseDomain = __commonJS({
  "../node_modules/parse-domain/lib/parseDomain.js"(exports, module) {
    "use strict";
    init_functionsRoutes_0_6627680816661201();
    var icannTrie = require_icann_complete2();
    var privateTrie = require_private_complete2();
    var normalize = require_normalize();
    var lookUp = require_lookUp();
    var urlParts = /^(:?\/\/|https?:\/\/)?([^/]*@)?(.+?)(:\d{2,5})?([/?].*)?$/;
    var dot = /\./g;
    var emptyArr = [];
    function matchTld(hostname, options) {
      if (options.customTlds) {
        var tld = hostname.match(options.customTlds);
        if (tld !== null) {
          return tld[0];
        }
      }
      var domains = hostname.split(".");
      var icannTlds = lookUp(icannTrie, domains);
      var privateTlds = options.privateTlds ? lookUp(privateTrie, domains) : emptyArr;
      if (privateTlds.length > icannTlds.length) {
        return "." + privateTlds.join(".");
      }
      if (icannTlds.length > 0) {
        return "." + icannTlds.join(".");
      }
      return null;
    }
    function parseDomain(url, options) {
      var normalizedUrl = normalize.url(url);
      var tld = null;
      var urlSplit;
      var hostname;
      if (!normalizedUrl) {
        return null;
      }
      var normalizedOptions = normalize.options(options);
      urlSplit = normalizedUrl.match(urlParts);
      if (urlSplit === null) {
        return null;
      }
      hostname = urlSplit[3];
      tld = matchTld(hostname, normalizedOptions);
      if (tld === null) {
        return null;
      }
      urlSplit = hostname.slice(0, -tld.length).split(dot);
      if (tld.charAt(0) === ".") {
        tld = tld.slice(1);
      }
      hostname = urlSplit.pop();
      var subdomain = urlSplit.join(".");
      return {
        tld,
        domain: hostname,
        subdomain
      };
    }
    module.exports = parseDomain;
  }
});

// ../node_modules/@flaregun-net/app-utils/build/utils/parseDomainFromRequest.js
var require_parseDomainFromRequest = __commonJS({
  "../node_modules/@flaregun-net/app-utils/build/utils/parseDomainFromRequest.js"(exports) {
    "use strict";
    init_functionsRoutes_0_6627680816661201();
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.parseDomainFromRequest = void 0;
    var parseDomain = require_parseDomain();
    var parseDomainFromRequest = (url) => {
      let siteName = "";
      const parsed = parseDomain(url.hostname);
      if (parsed) {
        siteName = `${parsed.domain}.${parsed.tld}`;
      }
      return Object.assign(Object.assign({}, parsed), { siteName });
    };
    exports.parseDomainFromRequest = parseDomainFromRequest;
  }
});

// ../node_modules/@flaregun-net/app-utils/build/utils/makeBaseContainer.js
var require_makeBaseContainer = __commonJS({
  "../node_modules/@flaregun-net/app-utils/build/utils/makeBaseContainer.js"(exports) {
    "use strict";
    init_functionsRoutes_0_6627680816661201();
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.makeBaseContainer = void 0;
    var logger_1 = require_logger();
    var parseDomainFromRequest_1 = require_parseDomainFromRequest();
    var makeBaseContainer2 = (context, opts) => {
      const { appName } = opts;
      const requestUrl = new URL(context.request.url);
      const { siteName } = (0, parseDomainFromRequest_1.parseDomainFromRequest)(requestUrl);
      return {
        request: context.request,
        next: (p) => context.next(p),
        waitUntil: (p) => context.waitUntil(p),
        passThroughOnException: () => context.passThroughOnException(),
        logger: (0, logger_1.Logger)(appName, opts.loggerEndpoint, opts.loggerWhitelist, requestUrl),
        siteName,
        appName,
        requestUrl,
        cache: caches.default
      };
    };
    exports.makeBaseContainer = makeBaseContainer2;
  }
});

// ../node_modules/@flaregun-net/app-utils/build/utils/urlHasSubdomain.js
var require_urlHasSubdomain = __commonJS({
  "../node_modules/@flaregun-net/app-utils/build/utils/urlHasSubdomain.js"(exports) {
    "use strict";
    init_functionsRoutes_0_6627680816661201();
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.urlHasSubdomain = void 0;
    var parseDomain = require_parseDomain();
    var urlHasSubdomain = (url = "") => {
      const parsed = parseDomain(url);
      return Boolean(parsed === null || parsed === void 0 ? void 0 : parsed.subdomain);
    };
    exports.urlHasSubdomain = urlHasSubdomain;
  }
});

// ../node_modules/@flaregun-net/app-utils/build/utils/url.js
var require_url = __commonJS({
  "../node_modules/@flaregun-net/app-utils/build/utils/url.js"(exports) {
    "use strict";
    init_functionsRoutes_0_6627680816661201();
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.ensureSubdomain = exports.makeUrl = exports.defaultToHttps = exports.defaultToProtocol = exports.stripProtocol = void 0;
    var urlHasSubdomain_1 = require_urlHasSubdomain();
    var HTTPProtocolRegExp = new RegExp(/https?:\/\//i);
    var stripProtocol = (url) => url.hostname.concat(url.pathname);
    exports.stripProtocol = stripProtocol;
    var forceProtocol = (url, protocol) => `${protocol}://${url.replace(HTTPProtocolRegExp, "")}`;
    var defaultToProtocol = (url, protocol) => {
      if (HTTPProtocolRegExp.test(url)) {
        return url;
      }
      return forceProtocol(url, protocol);
    };
    exports.defaultToProtocol = defaultToProtocol;
    var defaultToHttps = (url) => (0, exports.defaultToProtocol)(url, "https");
    exports.defaultToHttps = defaultToHttps;
    var makeUrl = (url) => new URL((0, exports.defaultToHttps)(url));
    exports.makeUrl = makeUrl;
    var ensureSubdomain = (url) => {
      const target = (0, exports.makeUrl)(url);
      if (!(0, urlHasSubdomain_1.urlHasSubdomain)(url)) {
        target.hostname = `www.${target.hostname}`;
      }
      return target;
    };
    exports.ensureSubdomain = ensureSubdomain;
  }
});

// ../node_modules/@flaregun-net/app-utils/build/index.js
var require_build = __commonJS({
  "../node_modules/@flaregun-net/app-utils/build/index.js"(exports) {
    "use strict";
    init_functionsRoutes_0_6627680816661201();
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.urlHasSubdomain = exports.makeUrl = exports.renderDevelopmentMode = exports.makeBaseContainer = exports.Logger = exports.Types = exports.versionHash = exports.isDev = exports.getDevHeaders = exports.devConfig = exports.errorHandler = void 0;
    var errorHandler_1 = require_errorHandler();
    Object.defineProperty(exports, "errorHandler", { enumerable: true, get: function() {
      return errorHandler_1.errorHandler;
    } });
    var constants_1 = require_constants();
    Object.defineProperty(exports, "devConfig", { enumerable: true, get: function() {
      return constants_1.devConfig;
    } });
    Object.defineProperty(exports, "getDevHeaders", { enumerable: true, get: function() {
      return constants_1.getDevHeaders;
    } });
    Object.defineProperty(exports, "isDev", { enumerable: true, get: function() {
      return constants_1.isDev;
    } });
    Object.defineProperty(exports, "versionHash", { enumerable: true, get: function() {
      return constants_1.versionHash;
    } });
    exports.Types = require_types();
    var logger_1 = require_logger();
    Object.defineProperty(exports, "Logger", { enumerable: true, get: function() {
      return logger_1.Logger;
    } });
    var makeBaseContainer_1 = require_makeBaseContainer();
    Object.defineProperty(exports, "makeBaseContainer", { enumerable: true, get: function() {
      return makeBaseContainer_1.makeBaseContainer;
    } });
    var renderDevelopmentMode_1 = require_renderDevelopmentMode();
    Object.defineProperty(exports, "renderDevelopmentMode", { enumerable: true, get: function() {
      return renderDevelopmentMode_1.renderDevelopmentMode;
    } });
    var url_1 = require_url();
    Object.defineProperty(exports, "makeUrl", { enumerable: true, get: function() {
      return url_1.makeUrl;
    } });
    var urlHasSubdomain_1 = require_urlHasSubdomain();
    Object.defineProperty(exports, "urlHasSubdomain", { enumerable: true, get: function() {
      return urlHasSubdomain_1.urlHasSubdomain;
    } });
  }
});

// ../build/core.js
async function Ae(t, e) {
  let a = await crypto.subtle.importKey("raw", typeof t == "string" ? Ea.encode(t) : t, { name: "HMAC", hash: { name: "SHA-256" } }, false, ["sign"]);
  return crypto.subtle.sign("HMAC", a, Ea.encode(e));
}
async function Ot(t) {
  return crypto.subtle.digest("SHA-256", typeof t == "string" ? Ea.encode(t) : t);
}
function Sa(t) {
  return Array.prototype.map.call(new Uint8Array(t), (e) => ("0" + e.toString(16)).slice(-2)).join("");
}
function At(t) {
  return t.replace(/[!'()*]/g, (e) => "%" + e.charCodeAt(0).toString(16).toUpperCase());
}
function Po(t, e) {
  let { hostname: a, pathname: s } = t;
  if (a.endsWith(".r2.cloudflarestorage.com"))
    return ["s3", "auto"];
  if (a.endsWith(".backblazeb2.com")) {
    let n = a.match(/^(?:[^.]+\.)?s3\.([^.]+)\.backblazeb2\.com$/);
    return n != null ? ["s3", n[1]] : ["", ""];
  }
  let o = a.replace("dualstack.", "").match(/([^.]+)\.(?:([^.]*)\.)?amazonaws\.com(?:\.cn)?$/), [r, i] = (o || ["", ""]).slice(1, 3);
  if (i === "us-gov")
    i = "us-gov-west-1";
  else if (i === "s3" || i === "s3-accelerate")
    i = "us-east-1", r = "s3";
  else if (r === "iot")
    a.startsWith("iot.") ? r = "execute-api" : a.startsWith("data.jobs.iot.") ? r = "iot-jobs-data" : r = s === "/mqtt" ? "iotdevicegateway" : "iotdata";
  else if (r === "autoscaling") {
    let n = (e.get("X-Amz-Target") || "").split(".")[0];
    n === "AnyScaleFrontendService" ? r = "application-autoscaling" : n === "AnyScaleScalingPlannerFrontendService" && (r = "autoscaling-plans");
  } else
    i == null && r.startsWith("s3-") ? (i = r.slice(3).replace(/^fips-|^external-1/, ""), r = "s3") : r.endsWith("-fips") ? r = r.slice(0, -5) : i && /-\d$/.test(r) && !/-\d$/.test(i) && ([r, i] = [i, r]);
  return [Eo[r] || r, i];
}
function Io(t) {
  Wt = t;
}
function ea() {
  return Wt;
}
function f(t, e) {
  let a = aa({ issueData: e, data: t.data, path: t.path, errorMaps: [t.common.contextualErrorMap, t.schemaErrorMap, ea(), qe].filter((s) => !!s) });
  t.common.issues.push(a);
}
function w(t) {
  if (!t)
    return {};
  let { errorMap: e, invalid_type_error: a, required_error: s, description: o } = t;
  if (e && (a || s))
    throw new Error(`Can't use "invalid_type_error" or "required_error" in conjunction with custom error map.`);
  return e ? { errorMap: e, description: o } : { errorMap: (i, n) => i.code !== "invalid_type" ? { message: n.defaultError } : typeof n.data > "u" ? { message: s ?? n.defaultError } : { message: a ?? n.defaultError }, description: o };
}
function Bo(t, e) {
  let a = (t.toString().split(".")[1] || "").length, s = (e.toString().split(".")[1] || "").length, o = a > s ? a : s, r = parseInt(t.toFixed(o).replace(".", "")), i = parseInt(e.toFixed(o).replace(".", ""));
  return r % i / Math.pow(10, o);
}
function ye(t) {
  if (t instanceof j) {
    let e = {};
    for (let a in t.shape) {
      let s = t.shape[a];
      e[a] = I.create(ye(s));
    }
    return new j({ ...t._def, shape: () => e });
  } else
    return t instanceof L ? L.create(ye(t.element)) : t instanceof I ? I.create(ye(t.unwrap())) : t instanceof J ? J.create(ye(t.unwrap())) : t instanceof D ? D.create(t.items.map((e) => ye(e))) : t;
}
function La(t, e) {
  let a = ee(t), s = ee(e);
  if (t === e)
    return { valid: true, data: t };
  if (a === h.object && s === h.object) {
    let o = _.objectKeys(e), r = _.objectKeys(t).filter((n) => o.indexOf(n) !== -1), i = { ...t, ...e };
    for (let n of r) {
      let c = La(t[n], e[n]);
      if (!c.valid)
        return { valid: false };
      i[n] = c.data;
    }
    return { valid: true, data: i };
  } else if (a === h.array && s === h.array) {
    if (t.length !== e.length)
      return { valid: false };
    let o = [];
    for (let r = 0; r < t.length; r++) {
      let i = t[r], n = e[r], c = La(i, n);
      if (!c.valid)
        return { valid: false };
      o.push(c.data);
    }
    return { valid: true, data: o };
  } else
    return a === h.date && s === h.date && +t == +e ? { valid: true, data: t } : { valid: false };
}
function Bt(t, e) {
  return new Te({ values: t, typeName: y.ZodEnum, ...w(e) });
}
var ws, la, xs, _s, js, zs, Rs, C, Ts, Cs, me, Ss, g, l, De, da, Qa, at, pa, ha, it, ga, lt, dt, mt, ht, gt, yt, ka, wt, xt, ba, jt, ne, na, G, Rt, H, Ct, Tt, M, va, wa, St, Et, jo, zo, xa, Oe, Je, Ge, _a, Ro, ja, A, za, Ra, To, Ta, Ht, Co, Pt, So, Ca, Ea, Eo, Ho, Ye, Ha, he, ge, Oo, qt, Ao, qo, Y, Mo, fe, Pa, ce, Q, Oa, Aa, qa, Ma, Mt, Nt, It, Ut, Qe, V, _, h, ee, m, No, N, qe, Wt, aa, Uo, E, k, Lo, q, Na, Ia, ta, Ua, x, U, Lt, b, Do, $o, Wo, Z, K, ke, be, te, ve, we, se, F, W, xe, L, sa, Dt, j, le, _e, ue, D, de, je, X, ae, ze, Re, Te, Ce, oe, $, I, J, Me, Se, Zo, oa, Zt, Vo, y, Fo, Vt, Ft, Ko, Xo, Kt, Jo, Go, Yo, Qo, er, ar, tr, sr, or, rr, ir, nr, cr, lr, ur, dr, mr, pr, hr, gr, fr, yr, kr, $t, br, vr, wr, xr, _r, jr, zr, d, es, Xt, Jt, Gt, Yt, Da, Rr, Tr, Cr, Qt, $a, Sr, Er, Wa, Ie, rs, Hr, Ne, Ee, as, ts, ss, os, is, Pr, ns, cs, Ba, ms, Or, ls, Ar, He, ra, us, ds, Ue, re, ps, hs, gs, fs, qr, Mr, ys, Za, ks, Va, ia, bs, Fa;
var init_core = __esm({
  "../build/core.js"() {
    init_functionsRoutes_0_6627680816661201();
    ws = Object.create;
    la = Object.defineProperty;
    xs = Object.getOwnPropertyDescriptor;
    _s = Object.getOwnPropertyNames;
    js = Object.getPrototypeOf;
    zs = Object.prototype.hasOwnProperty;
    Rs = (t, e) => () => (t && (e = t(t = 0)), e);
    C = (t, e) => () => (e || t((e = { exports: {} }).exports, e), e.exports);
    Ts = (t, e) => {
      for (var a in e)
        la(t, a, { get: e[a], enumerable: true });
    };
    Cs = (t, e, a, s) => {
      if (e && typeof e == "object" || typeof e == "function")
        for (let o of _s(e))
          !zs.call(t, o) && o !== a && la(t, o, { get: () => e[o], enumerable: !(s = xs(e, o)) || s.enumerable });
      return t;
    };
    me = (t, e, a) => (a = t != null ? ws(js(t)) : {}, Cs(e || !t || !t.__esModule ? la(a, "default", { value: t, enumerable: true }) : a, t));
    l = Rs(() => {
      Ss = "v4.0.0-17sJhsxD", g = { version: Ss };
    });
    De = C((P) => {
      "use strict";
      l();
      Object.defineProperty(P, "__esModule", { value: true });
      P.getFlaregunApiOrigin = P.getDevHeaders = P.devConfig = P.versionHash = P.isDev = void 0;
      try {
        P.isDev = DEVELOPMENT;
      } catch {
        P.isDev = false;
      }
      try {
        P.versionHash = g.version;
      } catch {
        P.versionHash = "Parsing error";
      }
      try {
        P.devConfig = DEV_CONFIG;
      } catch {
        P.devConfig = null;
      }
      var Es = (t) => ({ hash: `${t}-hash`, error: `${t}-error` });
      P.getDevHeaders = Es;
      var Hs = (t) => t ? "https://staging-api.flaregun.net" : "https://api.flaregun.net";
      P.getFlaregunApiOrigin = Hs;
    });
    da = C(($e) => {
      "use strict";
      l();
      Object.defineProperty($e, "__esModule", { value: true });
      $e.renderDevelopmentMode = void 0;
      var ua = De(), Ps = (t, e, a) => {
        let s = (0, ua.getDevHeaders)(t.appName);
        return new Response(`[Development Mode] ${e}`, Object.assign({ status: 500, headers: Object.assign({ "Content-Type": "text/html", [s.hash]: String(ua.versionHash ? ua.versionHash : "") }, a?.headers) }, a));
      };
      $e.renderDevelopmentMode = Ps;
    });
    Qa = C((pe) => {
      "use strict";
      l();
      var Os = pe && pe.__awaiter || function(t, e, a, s) {
        function o(r) {
          return r instanceof a ? r : new a(function(i) {
            i(r);
          });
        }
        return new (a || (a = Promise))(function(r, i) {
          function n(p) {
            try {
              u(s.next(p));
            } catch (v) {
              i(v);
            }
          }
          function c(p) {
            try {
              u(s.throw(p));
            } catch (v) {
              i(v);
            }
          }
          function u(p) {
            p.done ? r(p.value) : o(p.value).then(n, c);
          }
          u((s = s.apply(t, e || [])).next());
        });
      };
      Object.defineProperty(pe, "__esModule", { value: true });
      pe.errorHandler = void 0;
      var ma = De(), As = da();
      function qs(t, e) {
        var a;
        return Os(this, void 0, void 0, function* () {
          let { logger: s, appName: o } = t;
          if (s.alwaysLogWait(t, `[${o}] [${ma.versionHash ? ma.versionHash : ""}] Worker Error`, e.message, JSON.stringify(e.stack)), !ma.isDev)
            throw e;
          return (0, As.renderDevelopmentMode)(t, ((a = e.stack) !== null && a !== void 0 ? a : "").split(" at ").map((r, i) => `<div>  ${i === 0 ? `<span style="font-size:24px">${r} :(</span>` : `<span style="padding-left:12px">at ${r}</span>`}</div>`).join(""), { status: 500 });
        });
      }
      pe.errorHandler = qs;
    });
    at = C((et) => {
      "use strict";
      l();
      Object.defineProperty(et, "__esModule", { value: true });
    });
    pa = C((We) => {
      "use strict";
      l();
      Object.defineProperty(We, "__esModule", { value: true });
      We.Logger = void 0;
      var Ms = (t, e, a, s) => {
        let o = a?.some((c) => s.hostname.includes(c)), r = (c, u) => e && fetch(e, { method: "POST", headers: u, body: c }), i = (...c) => {
          let u = JSON.stringify([...c].join(" "));
          return console.log(u), r(`[${t}] ${JSON.stringify({ message: u })}`, { "Content-Type": "text/plain" });
        }, n = (c) => {
          let u = JSON.stringify(c, null, 2);
          return console.log(u), r(u, { "Content-Type": "application/json" });
        };
        return { alwaysLogText: i, logText: (...c) => {
          if (o)
            return i(...c);
        }, alwaysLogJSON: n, logJSON: (c) => {
          if (o)
            return n(c);
        }, alwaysLogWait: (c, ...u) => c.waitUntil(i(...u)) };
      };
      We.Logger = Ms;
    });
    ha = C((Zr, tt) => {
      "use strict";
      l();
      tt.exports = { UP: "<", SAME: ",", DOWN: ">", RESET: "|", WILDCARD: "*", EXCEPTION: "!" };
    });
    it = C((Vr, rt) => {
      "use strict";
      l();
      function st() {
        var t = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : null;
        return { domain: t, children: /* @__PURE__ */ new Map(), parent: null };
      }
      function Ns(t, e) {
        var a = t.children.get(e);
        return a === void 0 && (a = st(e), ot(t, a)), a;
      }
      function ot(t, e) {
        if (typeof e.domain != "string")
          throw new Error("Cannot adopt child: child.domain must be a string");
        if (t.children.has(e.domain))
          throw new Error("Cannot adopt child: parent has already a child with the domain '".concat(e.domain, "'"));
        t.children.set(e.domain, e), e.parent = t;
      }
      rt.exports = { createNode: st, createOrGetChild: Ns, adoptChild: ot };
    });
    ga = C((Fr, ct) => {
      "use strict";
      l();
      var Be = ha(), nt = it(), Is = nt.createNode, Us = nt.createOrGetChild;
      function Ls(t) {
        var e = Is(), a = "", s = e, o;
        function r() {
          o = Us(s, a), a = "";
        }
        for (var i = 0; i < t.length; i++) {
          var n = t.charAt(i);
          switch (n) {
            case Be.SAME: {
              r();
              continue;
            }
            case Be.DOWN: {
              r(), s = o;
              continue;
            }
            case Be.RESET: {
              r(), s = e;
              continue;
            }
            case Be.UP: {
              r(), s = s.parent;
              continue;
            }
          }
          a += n;
        }
        return a !== "" && r(), e;
      }
      ct.exports = Ls;
    });
    lt = C((Kr, Ds) => {
      Ds.exports = { trie: "aaa|aarp|abarth|abb|abbott|abbvie|abc|able|abogado|abudhabi|ac>com,edu,gov,mil,net,org|academy|accenture|accountant|accountants|aco|actor|ad>nom|ads|adult|ae>ac,co,gov,mil,net,org,sch|aeg|aero>accident-investigation,accident-prevention,aerobatic,aeroclub,aerodrome,agents,air-surveillance,air-traffic-control,aircraft,airline,airport,airtraffic,ambulance,amusement,association,author,ballooning,broker,caa,cargo,catering,certification,championship,charter,civilaviation,club,conference,consultant,consulting,control,council,crew,design,dgca,educator,emergency,engine,engineer,entertainment,equipment,exchange,express,federation,flight,fuel,gliding,government,groundhandling,group,hanggliding,homebuilt,insurance,journal,journalist,leasing,logistics,magazine,maintenance,media,microlight,modelling,navigation,parachuting,paragliding,passenger-association,pilot,press,production,recreation,repbody,res,research,rotorcraft,safety,scientist,services,show,skydiving,software,student,trader,trading,trainer,union,workinggroup,works|aetna|af>com,edu,gov,net,org|afl|africa|ag>co,com,net,nom,org|agakhan|agency|ai>com,net,off,org|aig|airbus|airforce|airtel|akdn|al>com,edu,gov,mil,net,org|alfaromeo|alibaba|alipay|allfinanz|allstate|ally|alsace|alstom|am>co,com,commune,net,org|amazon|americanexpress|americanfamily|amex|amfam|amica|amsterdam|analytics|android|anquan|anz|ao>co,ed,gv,it,og,pb|aol|apartments|app|apple|aq|aquarelle|ar>bet,com,coop,edu,gob,gov,int,mil,musica,mutual,net,org,senasa,tur|arab|aramco|archi|army|arpa>e164,in-addr,ip6,iris,uri,urn|art|arte|as>gov|asda|asia|associates|at>ac>sth<co,gv,or|athleta|attorney|au>act,asn,com,conf,edu>act,catholic,nsw>schools<nt,qld,sa,tas,vic,wa<gov>qld,sa,tas,vic,wa<id,info,net,nsw,nt,org,oz,qld,sa,tas,vic,wa|auction|audi|audible|audio|auspost|author|auto|autos|avianca|aw>com|aws|ax|axa|az>biz,com,edu,gov,info,int,mil,name,net,org,pp,pro|azure|ba>com,edu,gov,mil,net,org|baby|baidu|banamex|bananarepublic|band|bank|bar|barcelona|barclaycard|barclays|barefoot|bargains|baseball|basketball|bauhaus|bayern|bb>biz,co,com,edu,gov,info,net,org,store,tv|bbc|bbt|bbva|bcg|bcn|bd>*|be>ac|beats|beauty|beer|bentley|berlin|best|bestbuy|bet|bf>gov|bg>0,1,2,3,4,5,6,7,8,9,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z|bh>com,edu,gov,net,org|bharti|bi>co,com,edu,or,org|bible|bid|bike|bing|bingo|bio|biz|bj>asso,barreau,gouv|black|blackfriday|blockbuster|blog|bloomberg|blue|bm>com,edu,gov,net,org|bms|bmw|bn>com,edu,gov,net,org|bnpparibas|bo>academia,agro,arte,blog,bolivia,ciencia,com,cooperativa,democracia,deporte,ecologia,economia,edu,empresa,gob,indigena,industria,info,int,medicina,mil,movimiento,musica,natural,net,nombre,noticias,org,patria,plurinacional,politica,profesional,pueblo,revista,salud,tecnologia,tksat,transporte,tv,web,wiki|boats|boehringer|bofa|bom|bond|boo|book|booking|bosch|bostik|boston|bot|boutique|box|br>9guacu,abc,adm,adv,agr,aju,am,anani,aparecida,app,arq,art,ato,b,barueri,belem,bhz,bib,bio,blog,bmd,boavista,bsb,campinagrande,campinas,caxias,cim,cng,cnt,com,contagem,coop,coz,cri,cuiaba,curitiba,def,des,det,dev,ecn,eco,edu,emp,enf,eng,esp,etc,eti,far,feira,flog,floripa,fm,fnd,fortal,fot,foz,fst,g12,geo,ggf,goiania,gov>ac,al,am,ap,ba,ce,df,es,go,ma,mg,ms,mt,pa,pb,pe,pi,pr,rj,rn,ro,rr,rs,sc,se,sp,to<gru,imb,ind,inf,jab,jampa,jdf,joinville,jor,jus,leg,lel,log,londrina,macapa,maceio,manaus,maringa,mat,med,mil,morena,mp,mus,natal,net,niteroi,nom>*<not,ntr,odo,ong,org,osasco,palmas,poa,ppg,pro,psc,psi,pvh,qsl,radio,rec,recife,rep,ribeirao,rio,riobranco,riopreto,salvador,sampa,santamaria,santoandre,saobernardo,saogonca,seg,sjc,slg,slz,sorocaba,srv,taxi,tc,tec,teo,the,tmp,trd,tur,tv,udi,vet,vix,vlog,wiki,zlg|bradesco|bridgestone|broadway|broker|brother|brussels|bs>com,edu,gov,net,org|bt>com,edu,gov,net,org|build|builders|business|buy|buzz|bv|bw>co,org|by>com,gov,mil,of|bz>com,edu,gov,net,org|bzh|ca>ab,bc,gc,mb,nb,nf,nl,ns,nt,nu,on,pe,qc,sk,yk|cab|cafe|cal|call|calvinklein|cam|camera|camp|canon|capetown|capital|capitalone|car|caravan|cards|care|career|careers|cars|casa|case|cash|casino|cat|catering|catholic|cba|cbn|cbre|cbs|cc|cd>gov|center|ceo|cern|cf|cfa|cfd|cg|ch|chanel|channel|charity|chase|chat|cheap|chintai|christmas|chrome|church|ci>ac,a\xE9roport,asso,co,com,ed,edu,go,gouv,int,md,net,or,org,presse|cipriani|circle|cisco|citadel|citi|citic|city|cityeats|ck>!www,*|cl>co,gob,gov,mil|claims|cleaning|click|clinic|clinique|clothing|cloud|club|clubmed|cm>co,com,gov,net|cn>ac,ah,bj,com,cq,edu,fj,gd,gov,gs,gx,gz,ha,hb,he,hi,hk,hl,hn,jl,js,jx,ln,mil,mo,net,nm,nx,org,qh,sc,sd,sh,sn,sx,tj,tw,xj,xz,yn,zj,\u516C\u53F8,\u7DB2\u7D61,\u7F51\u7EDC|co>arts,com,edu,firm,gov,info,int,mil,net,nom,org,rec,web|coach|codes|coffee|college|cologne|com|comcast|commbank|community|company|compare|computer|comsec|condos|construction|consulting|contact|contractors|cooking|cookingchannel|cool|coop|corsica|country|coupon|coupons|courses|cpa|cr>ac,co,ed,fi,go,or,sa|credit|creditcard|creditunion|cricket|crown|crs|cruise|cruises|cu>com,edu,gov,inf,net,org|cuisinella|cv>com,edu,int,nome,org|cw>com,edu,net,org|cx>gov|cy>ac,biz,com,ekloges,gov,ltd,mil,net,org,press,pro,tm|cymru|cyou|cz|dabur|dad|dance|data|date|dating|datsun|day|dclk|dds|de|deal|dealer|deals|degree|delivery|dell|deloitte|delta|democrat|dental|dentist|desi|design|dev|dhl|diamonds|diet|digital|direct|directory|discount|discover|dish|diy|dj|dk|dm>com,edu,gov,net,org|dnp|do>art,com,edu,gob,gov,mil,net,org,sld,web|docs|doctor|dog|domains|dot|download|drive|dtv|dubai|dunlop|dupont|durban|dvag|dvr|dz>art,asso,com,edu,gov,net,org,pol,soc,tm|earth|eat|ec>com,edu,fin,gob,gov,info,k12,med,mil,net,org,pro|eco|edeka|edu|education|ee>aip,com,edu,fie,gov,lib,med,org,pri,riik|eg>com,edu,eun,gov,mil,name,net,org,sci|email|emerck|energy|engineer|engineering|enterprises|epson|equipment|er>*|ericsson|erni|es>com,edu,gob,nom,org|esq|estate|et>biz,com,edu,gov,info,name,net,org|etisalat|eu|eurovision|eus|events|exchange|expert|exposed|express|extraspace|fage|fail|fairwinds|faith|family|fan|fans|farm|farmers|fashion|fast|fedex|feedback|ferrari|ferrero|fi>aland|fiat|fidelity|fido|film|final|finance|financial|fire|firestone|firmdale|fish|fishing|fit|fitness|fj>ac,biz,com,gov,info,mil,name,net,org,pro|fk>*|flickr|flights|flir|florist|flowers|fly|fm>com,edu,net,org|fo|foo|food|foodnetwork|football|ford|forex|forsale|forum|foundation|fox|fr>aeroport,asso,avocat,avoues,cci,chambagri,chirurgiens-dentistes,com,experts-comptables,geometre-expert,gouv,greta,huissier-justice,medecin,nom,notaires,pharmacien,port,prd,tm,veterinaire|free|fresenius|frl|frogans|frontdoor|frontier|ftr|fujitsu|fun|fund|furniture|futbol|fyi|ga|gal|gallery|gallo|gallup|game|games|gap|garden|gay|gb|gbiz|gd>edu,gov|gdn|ge>com,edu,gov,mil,net,org,pvt|gea|gent|genting|george|gf|gg>co,net,org|ggee|gh>com,edu,gov,mil,org|gi>com,edu,gov,ltd,mod,org|gift|gifts|gives|giving|gl>co,com,edu,net,org|glass|gle|global|globo|gm|gmail|gmbh|gmo|gmx|gn>ac,com,edu,gov,net,org|godaddy|gold|goldpoint|golf|goo|goodyear|goog|google|gop|got|gov|gp>asso,com,edu,mobi,net,org|gq|gr>com,edu,gov,net,org|grainger|graphics|gratis|green|gripe|grocery|group|gs|gt>com,edu,gob,ind,mil,net,org|gu>com,edu,gov,guam,info,net,org,web|guardian|gucci|guge|guide|guitars|guru|gw|gy>co,com,edu,gov,net,org|hair|hamburg|hangout|haus|hbo|hdfc|hdfcbank|health|healthcare|help|helsinki|here|hermes|hgtv|hiphop|hisamitsu|hitachi|hiv|hk>com,edu,gov,idv,net,org,\u4E2A\u4EBA,\u500B\u4EBA,\u516C\u53F8,\u653F\u5E9C,\u654E\u80B2,\u6559\u80B2,\u7B87\u4EBA,\u7D44\u7E54,\u7D44\u7EC7,\u7DB2\u7D61,\u7DB2\u7EDC,\u7EC4\u7E54,\u7EC4\u7EC7,\u7F51\u7D61,\u7F51\u7EDC|hkt|hm|hn>com,edu,gob,mil,net,org|hockey|holdings|holiday|homedepot|homegoods|homes|homesense|honda|horse|hospital|host|hosting|hot|hoteles|hotels|hotmail|house|how|hr>com,from,iz,name|hsbc|ht>adult,art,asso,com,coop,edu,firm,gouv,info,med,net,org,perso,pol,pro,rel,shop|hu>2000,agrar,bolt,casino,city,co,erotica,erotika,film,forum,games,hotel,info,ingatlan,jogasz,konyvelo,lakas,media,news,org,priv,reklam,sex,shop,sport,suli,szex,tm,tozsde,utazas,video|hughes|hyatt|hyundai|ibm|icbc|ice|icu|id>ac,biz,co,desa,go,mil,my,net,or,ponpes,sch,web|ie>gov|ieee|ifm|ikano|il>ac,co,gov,idf,k12,muni,net,org|im>ac,co>ltd,plc<com,net,org,tt,tv|imamat|imdb|immo|immobilien|in>5g,6g,ac,ai,am,bihar,biz,business,ca,cn,co,com,coop,cs,delhi,dr,edu,er,firm,gen,gov,gujarat,ind,info,int,internet,io,me,mil,net,nic,org,pg,post,pro,res,travel,tv,uk,up,us|inc|industries|infiniti|info|ing|ink|institute|insurance|insure|int>eu|international|intuit|investments|io>com|ipiranga|iq>com,edu,gov,mil,net,org|ir>ac,co,gov,id,net,org,sch,\u0627\u064A\u0631\u0627\u0646,\u0627\u06CC\u0631\u0627\u0646|irish|is>com,edu,gov,int,net,org|ismaili|ist|istanbul|it>abr,abruzzo,ag,agrigento,al,alessandria,alto-adige,altoadige,an,ancona,andria-barletta-trani,andria-trani-barletta,andriabarlettatrani,andriatranibarletta,ao,aosta,aosta-valley,aostavalley,aoste,ap,aq,aquila,ar,arezzo,ascoli-piceno,ascolipiceno,asti,at,av,avellino,ba,balsan,balsan-sudtirol,balsan-s\xFCdtirol,balsan-suedtirol,bari,barletta-trani-andria,barlettatraniandria,bas,basilicata,belluno,benevento,bergamo,bg,bi,biella,bl,bn,bo,bologna,bolzano,bolzano-altoadige,bozen,bozen-sudtirol,bozen-s\xFCdtirol,bozen-suedtirol,br,brescia,brindisi,bs,bt,bulsan,bulsan-sudtirol,bulsan-s\xFCdtirol,bulsan-suedtirol,bz,ca,cagliari,cal,calabria,caltanissetta,cam,campania,campidano-medio,campidanomedio,campobasso,carbonia-iglesias,carboniaiglesias,carrara-massa,carraramassa,caserta,catania,catanzaro,cb,ce,cesena-forli,cesena-forl\xEC,cesenaforli,cesenaforl\xEC,ch,chieti,ci,cl,cn,co,como,cosenza,cr,cremona,crotone,cs,ct,cuneo,cz,dell-ogliastra,dellogliastra,edu,emilia-romagna,emiliaromagna,emr,en,enna,fc,fe,fermo,ferrara,fg,fi,firenze,florence,fm,foggia,forli-cesena,forl\xEC-cesena,forlicesena,forl\xECcesena,fr,friuli-v-giulia,friuli-ve-giulia,friuli-vegiulia,friuli-venezia-giulia,friuli-veneziagiulia,friuli-vgiulia,friuliv-giulia,friulive-giulia,friulivegiulia,friulivenezia-giulia,friuliveneziagiulia,friulivgiulia,frosinone,fvg,ge,genoa,genova,go,gorizia,gov,gr,grosseto,iglesias-carbonia,iglesiascarbonia,im,imperia,is,isernia,kr,la-spezia,laquila,laspezia,latina,laz,lazio,lc,le,lecce,lecco,li,lig,liguria,livorno,lo,lodi,lom,lombardia,lombardy,lt,lu,lucania,lucca,macerata,mantova,mar,marche,massa-carrara,massacarrara,matera,mb,mc,me,medio-campidano,mediocampidano,messina,mi,milan,milano,mn,mo,modena,mol,molise,monza,monza-brianza,monza-e-della-brianza,monzabrianza,monzaebrianza,monzaedellabrianza,ms,mt,na,naples,napoli,no,novara,nu,nuoro,og,ogliastra,olbia-tempio,olbiatempio,or,oristano,ot,pa,padova,padua,palermo,parma,pavia,pc,pd,pe,perugia,pesaro-urbino,pesarourbino,pescara,pg,pi,piacenza,piedmont,piemonte,pisa,pistoia,pmn,pn,po,pordenone,potenza,pr,prato,pt,pu,pug,puglia,pv,pz,ra,ragusa,ravenna,rc,re,reggio-calabria,reggio-emilia,reggiocalabria,reggioemilia,rg,ri,rieti,rimini,rm,rn,ro,roma,rome,rovigo,sa,salerno,sar,sardegna,sardinia,sassari,savona,si,sic,sicilia,sicily,siena,siracusa,so,sondrio,sp,sr,ss,s\xFCdtirol,suedtirol,sv,ta,taa,taranto,te,tempio-olbia,tempioolbia,teramo,terni,tn,to,torino,tos,toscana,tp,tr,trani-andria-barletta,trani-barletta-andria,traniandriabarletta,tranibarlettaandria,trapani,trentin-sud-tirol,trentin-s\xFCd-tirol,trentin-sudtirol,trentin-s\xFCdtirol,trentin-sued-tirol,trentin-suedtirol,trentino,trentino-a-adige,trentino-aadige,trentino-alto-adige,trentino-altoadige,trentino-s-tirol,trentino-stirol,trentino-sud-tirol,trentino-s\xFCd-tirol,trentino-sudtirol,trentino-s\xFCdtirol,trentino-sued-tirol,trentino-suedtirol,trentinoa-adige,trentinoaadige,trentinoalto-adige,trentinoaltoadige,trentinos-tirol,trentinostirol,trentinosud-tirol,trentinos\xFCd-tirol,trentinosudtirol,trentinos\xFCdtirol,trentinosued-tirol,trentinosuedtirol,trentinsud-tirol,trentins\xFCd-tirol,trentinsudtirol,trentins\xFCdtirol,trentinsued-tirol,trentinsuedtirol,trento,treviso,trieste,ts,turin,tuscany,tv,ud,udine,umb,umbria,urbino-pesaro,urbinopesaro,va,val-d-aosta,val-daosta,vald-aosta,valdaosta,valle-aosta,valle-d-aosta,valle-daosta,valleaosta,valled-aosta,valledaosta,vallee-aoste,vall\xE9e-aoste,vallee-d-aoste,vall\xE9e-d-aoste,valleeaoste,vall\xE9eaoste,valleedaoste,vall\xE9edaoste,vao,varese,vb,vc,vda,ve,ven,veneto,venezia,venice,verbania,vercelli,verona,vi,vibo-valentia,vibovalentia,vicenza,viterbo,vr,vs,vt,vv|itau|itv|jaguar|java|jcb|je>co,net,org|jeep|jetzt|jewelry|jio|jll|jm>*|jmp|jnj|jo>com,edu,gov,mil,name,net,org,sch|jobs|joburg|jot|joy|jp>ac,ad,aichi>aisai,ama,anjo,asuke,chiryu,chita,fuso,gamagori,handa,hazu,hekinan,higashiura,ichinomiya,inazawa,inuyama,isshiki,iwakura,kanie,kariya,kasugai,kira,kiyosu,komaki,konan,kota,mihama,miyoshi,nishio,nisshin,obu,oguchi,oharu,okazaki,owariasahi,seto,shikatsu,shinshiro,shitara,tahara,takahama,tobishima,toei,togo,tokai,tokoname,toyoake,toyohashi,toyokawa,toyone,toyota,tsushima,yatomi<akita>akita,daisen,fujisato,gojome,hachirogata,happou,higashinaruse,honjo,honjyo,ikawa,kamikoani,kamioka,katagami,kazuno,kitaakita,kosaka,kyowa,misato,mitane,moriyoshi,nikaho,noshiro,odate,oga,ogata,semboku,yokote,yurihonjo<aomori>aomori,gonohe,hachinohe,hashikami,hiranai,hirosaki,itayanagi,kuroishi,misawa,mutsu,nakadomari,noheji,oirase,owani,rokunohe,sannohe,shichinohe,shingo,takko,towada,tsugaru,tsuruta<chiba>abiko,asahi,chonan,chosei,choshi,chuo,funabashi,futtsu,hanamigawa,ichihara,ichikawa,ichinomiya,inzai,isumi,kamagaya,kamogawa,kashiwa,katori,katsuura,kimitsu,kisarazu,kozaki,kujukuri,kyonan,matsudo,midori,mihama,minamiboso,mobara,mutsuzawa,nagara,nagareyama,narashino,narita,noda,oamishirasato,omigawa,onjuku,otaki,sakae,sakura,shimofusa,shirako,shiroi,shisui,sodegaura,sosa,tako,tateyama,togane,tohnosho,tomisato,urayasu,yachimata,yachiyo,yokaichiba,yokoshibahikari,yotsukaido<co,ed,ehime>ainan,honai,ikata,imabari,iyo,kamijima,kihoku,kumakogen,masaki,matsuno,matsuyama,namikata,niihama,ozu,saijo,seiyo,shikokuchuo,tobe,toon,uchiko,uwajima,yawatahama<fukui>echizen,eiheiji,fukui,ikeda,katsuyama,mihama,minamiechizen,obama,ohi,ono,sabae,sakai,takahama,tsuruga,wakasa<fukuoka>ashiya,buzen,chikugo,chikuho,chikujo,chikushino,chikuzen,chuo,dazaifu,fukuchi,hakata,higashi,hirokawa,hisayama,iizuka,inatsuki,kaho,kasuga,kasuya,kawara,keisen,koga,kurate,kurogi,kurume,minami,miyako,miyama,miyawaka,mizumaki,munakata,nakagawa,nakama,nishi,nogata,ogori,okagaki,okawa,oki,omuta,onga,onojo,oto,saigawa,sasaguri,shingu,shinyoshitomi,shonai,soeda,sue,tachiarai,tagawa,takata,toho,toyotsu,tsuiki,ukiha,umi,usui,yamada,yame,yanagawa,yukuhashi<fukushima>aizubange,aizumisato,aizuwakamatsu,asakawa,bandai,date,fukushima,furudono,futaba,hanawa,higashi,hirata,hirono,iitate,inawashiro,ishikawa,iwaki,izumizaki,kagamiishi,kaneyama,kawamata,kitakata,kitashiobara,koori,koriyama,kunimi,miharu,mishima,namie,nango,nishiaizu,nishigo,okuma,omotego,ono,otama,samegawa,shimogo,shirakawa,showa,soma,sukagawa,taishin,tamakawa,tanagura,tenei,yabuki,yamato,yamatsuri,yanaizu,yugawa<gifu>anpachi,ena,gifu,ginan,godo,gujo,hashima,hichiso,hida,higashishirakawa,ibigawa,ikeda,kakamigahara,kani,kasahara,kasamatsu,kawaue,kitagata,mino,minokamo,mitake,mizunami,motosu,nakatsugawa,ogaki,sakahogi,seki,sekigahara,shirakawa,tajimi,takayama,tarui,toki,tomika,wanouchi,yamagata,yaotsu,yoro<go,gr,gunma>annaka,chiyoda,fujioka,higashiagatsuma,isesaki,itakura,kanna,kanra,katashina,kawaba,kiryu,kusatsu,maebashi,meiwa,midori,minakami,naganohara,nakanojo,nanmoku,numata,oizumi,ora,ota,shibukawa,shimonita,shinto,showa,takasaki,takayama,tamamura,tatebayashi,tomioka,tsukiyono,tsumagoi,ueno,yoshioka<hiroshima>asaminami,daiwa,etajima,fuchu,fukuyama,hatsukaichi,higashihiroshima,hongo,jinsekikogen,kaita,kui,kumano,kure,mihara,miyoshi,naka,onomichi,osakikamijima,otake,saka,sera,seranishi,shinichi,shobara,takehara<hokkaido>abashiri,abira,aibetsu,akabira,akkeshi,asahikawa,ashibetsu,ashoro,assabu,atsuma,bibai,biei,bifuka,bihoro,biratori,chippubetsu,chitose,date,ebetsu,embetsu,eniwa,erimo,esan,esashi,fukagawa,fukushima,furano,furubira,haboro,hakodate,hamatonbetsu,hidaka,higashikagura,higashikawa,hiroo,hokuryu,hokuto,honbetsu,horokanai,horonobe,ikeda,imakane,ishikari,iwamizawa,iwanai,kamifurano,kamikawa,kamishihoro,kamisunagawa,kamoenai,kayabe,kembuchi,kikonai,kimobetsu,kitahiroshima,kitami,kiyosato,koshimizu,kunneppu,kuriyama,kuromatsunai,kushiro,kutchan,kyowa,mashike,matsumae,mikasa,minamifurano,mombetsu,moseushi,mukawa,muroran,naie,nakagawa,nakasatsunai,nakatombetsu,nanae,nanporo,nayoro,nemuro,niikappu,niki,nishiokoppe,noboribetsu,numata,obihiro,obira,oketo,okoppe,otaru,otobe,otofuke,otoineppu,oumu,ozora,pippu,rankoshi,rebun,rikubetsu,rishiri,rishirifuji,saroma,sarufutsu,shakotan,shari,shibecha,shibetsu,shikabe,shikaoi,shimamaki,shimizu,shimokawa,shinshinotsu,shintoku,shiranuka,shiraoi,shiriuchi,sobetsu,sunagawa,taiki,takasu,takikawa,takinoue,teshikaga,tobetsu,tohma,tomakomai,tomari,toya,toyako,toyotomi,toyoura,tsubetsu,tsukigata,urakawa,urausu,uryu,utashinai,wakkanai,wassamu,yakumo,yoichi<hyogo>aioi,akashi,ako,amagasaki,aogaki,asago,ashiya,awaji,fukusaki,goshiki,harima,himeji,ichikawa,inagawa,itami,kakogawa,kamigori,kamikawa,kasai,kasuga,kawanishi,miki,minamiawaji,nishinomiya,nishiwaki,ono,sanda,sannan,sasayama,sayo,shingu,shinonsen,shiso,sumoto,taishi,taka,takarazuka,takasago,takino,tamba,tatsuno,toyooka,yabu,yashiro,yoka,yokawa<ibaraki>ami,asahi,bando,chikusei,daigo,fujishiro,hitachi,hitachinaka,hitachiomiya,hitachiota,ibaraki,ina,inashiki,itako,iwama,joso,kamisu,kasama,kashima,kasumigaura,koga,miho,mito,moriya,naka,namegata,oarai,ogawa,omitama,ryugasaki,sakai,sakuragawa,shimodate,shimotsuma,shirosato,sowa,suifu,takahagi,tamatsukuri,tokai,tomobe,tone,toride,tsuchiura,tsukuba,uchihara,ushiku,yachiyo,yamagata,yawara,yuki<ishikawa>anamizu,hakui,hakusan,kaga,kahoku,kanazawa,kawakita,komatsu,nakanoto,nanao,nomi,nonoichi,noto,shika,suzu,tsubata,tsurugi,uchinada,wajima<iwate>fudai,fujisawa,hanamaki,hiraizumi,hirono,ichinohe,ichinoseki,iwaizumi,iwate,joboji,kamaishi,kanegasaki,karumai,kawai,kitakami,kuji,kunohe,kuzumaki,miyako,mizusawa,morioka,ninohe,noda,ofunato,oshu,otsuchi,rikuzentakata,shiwa,shizukuishi,sumita,tanohata,tono,yahaba,yamada<kagawa>ayagawa,higashikagawa,kanonji,kotohira,manno,marugame,mitoyo,naoshima,sanuki,tadotsu,takamatsu,tonosho,uchinomi,utazu,zentsuji<kagoshima>akune,amami,hioki,isa,isen,izumi,kagoshima,kanoya,kawanabe,kinko,kouyama,makurazaki,matsumoto,minamitane,nakatane,nishinoomote,satsumasendai,soo,tarumizu,yusui<kanagawa>aikawa,atsugi,ayase,chigasaki,ebina,fujisawa,hadano,hakone,hiratsuka,isehara,kaisei,kamakura,kiyokawa,matsuda,minamiashigara,miura,nakai,ninomiya,odawara,oi,oiso,sagamihara,samukawa,tsukui,yamakita,yamato,yokosuka,yugawara,zama,zushi<kawasaki>!city,*<kitakyushu>!city,*<kobe>!city,*<kochi>aki,geisei,hidaka,higashitsuno,ino,kagami,kami,kitagawa,kochi,mihara,motoyama,muroto,nahari,nakamura,nankoku,nishitosa,niyodogawa,ochi,okawa,otoyo,otsuki,sakawa,sukumo,susaki,tosa,tosashimizu,toyo,tsuno,umaji,yasuda,yusuhara<kumamoto>amakusa,arao,aso,choyo,gyokuto,kamiamakusa,kikuchi,kumamoto,mashiki,mifune,minamata,minamioguni,nagasu,nishihara,oguni,ozu,sumoto,takamori,uki,uto,yamaga,yamato,yatsushiro<kyoto>ayabe,fukuchiyama,higashiyama,ide,ine,joyo,kameoka,kamo,kita,kizu,kumiyama,kyotamba,kyotanabe,kyotango,maizuru,minami,minamiyamashiro,miyazu,muko,nagaokakyo,nakagyo,nantan,oyamazaki,sakyo,seika,tanabe,uji,ujitawara,wazuka,yamashina,yawata<lg,mie>asahi,inabe,ise,kameyama,kawagoe,kiho,kisosaki,kiwa,komono,kumano,kuwana,matsusaka,meiwa,mihama,minamiise,misugi,miyama,nabari,shima,suzuka,tado,taiki,taki,tamaki,toba,tsu,udono,ureshino,watarai,yokkaichi<miyagi>furukawa,higashimatsushima,ishinomaki,iwanuma,kakuda,kami,kawasaki,marumori,matsushima,minamisanriku,misato,murata,natori,ogawara,ohira,onagawa,osaki,rifu,semine,shibata,shichikashuku,shikama,shiogama,shiroishi,tagajo,taiwa,tome,tomiya,wakuya,watari,yamamoto,zao<miyazaki>aya,ebino,gokase,hyuga,kadogawa,kawaminami,kijo,kitagawa,kitakata,kitaura,kobayashi,kunitomi,kushima,mimata,miyakonojo,miyazaki,morotsuka,nichinan,nishimera,nobeoka,saito,shiiba,shintomi,takaharu,takanabe,takazaki,tsuno<nagano>achi,agematsu,anan,aoki,asahi,azumino,chikuhoku,chikuma,chino,fujimi,hakuba,hara,hiraya,iida,iijima,iiyama,iizuna,ikeda,ikusaka,ina,karuizawa,kawakami,kiso,kisofukushima,kitaaiki,komagane,komoro,matsukawa,matsumoto,miasa,minamiaiki,minamimaki,minamiminowa,minowa,miyada,miyota,mochizuki,nagano,nagawa,nagiso,nakagawa,nakano,nozawaonsen,obuse,ogawa,okaya,omachi,omi,ookuwa,ooshika,otaki,otari,sakae,sakaki,saku,sakuho,shimosuwa,shinanomachi,shiojiri,suwa,suzaka,takagi,takamori,takayama,tateshina,tatsuno,togakushi,togura,tomi,ueda,wada,yamagata,yamanouchi,yasaka,yasuoka<nagasaki>chijiwa,futsu,goto,hasami,hirado,iki,isahaya,kawatana,kuchinotsu,matsuura,nagasaki,obama,omura,oseto,saikai,sasebo,seihi,shimabara,shinkamigoto,togitsu,tsushima,unzen<nagoya>!city,*<nara>ando,gose,heguri,higashiyoshino,ikaruga,ikoma,kamikitayama,kanmaki,kashiba,kashihara,katsuragi,kawai,kawakami,kawanishi,koryo,kurotaki,mitsue,miyake,nara,nosegawa,oji,ouda,oyodo,sakurai,sango,shimoichi,shimokitayama,shinjo,soni,takatori,tawaramoto,tenkawa,tenri,uda,yamatokoriyama,yamatotakada,yamazoe,yoshino<ne,niigata>aga,agano,gosen,itoigawa,izumozaki,joetsu,kamo,kariwa,kashiwazaki,minamiuonuma,mitsuke,muika,murakami,myoko,nagaoka,niigata,ojiya,omi,sado,sanjo,seiro,seirou,sekikawa,shibata,tagami,tainai,tochio,tokamachi,tsubame,tsunan,uonuma,yahiko,yoita,yuzawa<oita>beppu,bungoono,bungotakada,hasama,hiji,himeshima,hita,kamitsue,kokonoe,kuju,kunisaki,kusu,oita,saiki,taketa,tsukumi,usa,usuki,yufu<okayama>akaiwa,asakuchi,bizen,hayashima,ibara,kagamino,kasaoka,kibichuo,kumenan,kurashiki,maniwa,misaki,nagi,niimi,nishiawakura,okayama,satosho,setouchi,shinjo,shoo,soja,takahashi,tamano,tsuyama,wake,yakage<okinawa>aguni,ginowan,ginoza,gushikami,haebaru,higashi,hirara,iheya,ishigaki,ishikawa,itoman,izena,kadena,kin,kitadaito,kitanakagusuku,kumejima,kunigami,minamidaito,motobu,nago,naha,nakagusuku,nakijin,nanjo,nishihara,ogimi,okinawa,onna,shimoji,taketomi,tarama,tokashiki,tomigusuku,tonaki,urasoe,uruma,yaese,yomitan,yonabaru,yonaguni,zamami<or,osaka>abeno,chihayaakasaka,chuo,daito,fujiidera,habikino,hannan,higashiosaka,higashisumiyoshi,higashiyodogawa,hirakata,ibaraki,ikeda,izumi,izumiotsu,izumisano,kadoma,kaizuka,kanan,kashiwara,katano,kawachinagano,kishiwada,kita,kumatori,matsubara,minato,minoh,misaki,moriguchi,neyagawa,nishi,nose,osakasayama,sakai,sayama,sennan,settsu,shijonawate,shimamoto,suita,tadaoka,taishi,tajiri,takaishi,takatsuki,tondabayashi,toyonaka,toyono,yao<saga>ariake,arita,fukudomi,genkai,hamatama,hizen,imari,kamimine,kanzaki,karatsu,kashima,kitagata,kitahata,kiyama,kouhoku,kyuragi,nishiarita,ogi,omachi,ouchi,saga,shiroishi,taku,tara,tosu,yoshinogari<saitama>arakawa,asaka,chichibu,fujimi,fujimino,fukaya,hanno,hanyu,hasuda,hatogaya,hatoyama,hidaka,higashichichibu,higashimatsuyama,honjo,ina,iruma,iwatsuki,kamiizumi,kamikawa,kamisato,kasukabe,kawagoe,kawaguchi,kawajima,kazo,kitamoto,koshigaya,kounosu,kuki,kumagaya,matsubushi,minano,misato,miyashiro,miyoshi,moroyama,nagatoro,namegawa,niiza,ogano,ogawa,ogose,okegawa,omiya,otaki,ranzan,ryokami,saitama,sakado,satte,sayama,shiki,shiraoka,soka,sugito,toda,tokigawa,tokorozawa,tsurugashima,urawa,warabi,yashio,yokoze,yono,yorii,yoshida,yoshikawa,yoshimi<sapporo>!city,*<sendai>!city,*<shiga>aisho,gamo,higashiomi,hikone,koka,konan,kosei,koto,kusatsu,maibara,moriyama,nagahama,nishiazai,notogawa,omihachiman,otsu,ritto,ryuoh,takashima,takatsuki,torahime,toyosato,yasu<shimane>akagi,ama,gotsu,hamada,higashiizumo,hikawa,hikimi,izumo,kakinoki,masuda,matsue,misato,nishinoshima,ohda,okinoshima,okuizumo,shimane,tamayu,tsuwano,unnan,yakumo,yasugi,yatsuka<shizuoka>arai,atami,fuji,fujieda,fujikawa,fujinomiya,fukuroi,gotemba,haibara,hamamatsu,higashiizu,ito,iwata,izu,izunokuni,kakegawa,kannami,kawanehon,kawazu,kikugawa,kosai,makinohara,matsuzaki,minamiizu,mishima,morimachi,nishiizu,numazu,omaezaki,shimada,shimizu,shimoda,shizuoka,susono,yaizu,yoshida<tochigi>ashikaga,bato,haga,ichikai,iwafune,kaminokawa,kanuma,karasuyama,kuroiso,mashiko,mibu,moka,motegi,nasu,nasushiobara,nikko,nishikata,nogi,ohira,ohtawara,oyama,sakura,sano,shimotsuke,shioya,takanezawa,tochigi,tsuga,ujiie,utsunomiya,yaita<tokushima>aizumi,anan,ichiba,itano,kainan,komatsushima,matsushige,mima,minami,miyoshi,mugi,nakagawa,naruto,sanagochi,shishikui,tokushima,wajiki<tokyo>adachi,akiruno,akishima,aogashima,arakawa,bunkyo,chiyoda,chofu,chuo,edogawa,fuchu,fussa,hachijo,hachioji,hamura,higashikurume,higashimurayama,higashiyamato,hino,hinode,hinohara,inagi,itabashi,katsushika,kita,kiyose,kodaira,koganei,kokubunji,komae,koto,kouzushima,kunitachi,machida,meguro,minato,mitaka,mizuho,musashimurayama,musashino,nakano,nerima,ogasawara,okutama,ome,oshima,ota,setagaya,shibuya,shinagawa,shinjuku,suginami,sumida,tachikawa,taito,tama,toshima<tottori>chizu,hino,kawahara,koge,kotoura,misasa,nanbu,nichinan,sakaiminato,tottori,wakasa,yazu,yonago<toyama>asahi,fuchu,fukumitsu,funahashi,himi,imizu,inami,johana,kamiichi,kurobe,nakaniikawa,namerikawa,nanto,nyuzen,oyabe,taira,takaoka,tateyama,toga,tonami,toyama,unazuki,uozu,yamada<wakayama>arida,aridagawa,gobo,hashimoto,hidaka,hirogawa,inami,iwade,kainan,kamitonda,katsuragi,kimino,kinokawa,kitayama,koya,koza,kozagawa,kudoyama,kushimoto,mihama,misato,nachikatsuura,shingu,shirahama,taiji,tanabe,wakayama,yuasa,yura<yamagata>asahi,funagata,higashine,iide,kahoku,kaminoyama,kaneyama,kawanishi,mamurogawa,mikawa,murayama,nagai,nakayama,nanyo,nishikawa,obanazawa,oe,oguni,ohkura,oishida,sagae,sakata,sakegawa,shinjo,shirataka,shonai,takahata,tendo,tozawa,tsuruoka,yamagata,yamanobe,yonezawa,yuza<yamaguchi>abu,hagi,hikari,hofu,iwakuni,kudamatsu,mitou,nagato,oshima,shimonoseki,shunan,tabuse,tokuyama,toyota,ube,yuu<yamanashi>chuo,doshi,fuefuki,fujikawa,fujikawaguchiko,fujiyoshida,hayakawa,hokuto,ichikawamisato,kai,kofu,koshu,kosuge,minami-alps,minobu,nakamichi,nanbu,narusawa,nirasaki,nishikatsura,oshino,otsuki,showa,tabayama,tsuru,uenohara,yamanakako,yamanashi<yokohama>!city,*<\u4E09\u91CD,\u4EAC\u90FD,\u4F50\u8CC0,\u5175\u5EAB,\u5317\u6D77\u9053,\u5343\u8449,\u548C\u6B4C\u5C71,\u57FC\u7389,\u5927\u5206,\u5927\u962A,\u5948\u826F,\u5BAE\u57CE,\u5BAE\u5D0E,\u5BCC\u5C71,\u5C71\u53E3,\u5C71\u5F62,\u5C71\u68A8,\u5C90\u961C,\u5CA1\u5C71,\u5CA9\u624B,\u5CF6\u6839,\u5E83\u5CF6,\u5FB3\u5CF6,\u611B\u5A9B,\u611B\u77E5,\u65B0\u6F5F,\u6771\u4EAC,\u6803\u6728,\u6C96\u7E04,\u6ECB\u8CC0,\u718A\u672C,\u77F3\u5DDD,\u795E\u5948\u5DDD,\u798F\u4E95,\u798F\u5CA1,\u798F\u5CF6,\u79CB\u7530,\u7FA4\u99AC,\u8328\u57CE,\u9577\u5D0E,\u9577\u91CE,\u9752\u68EE,\u9759\u5CA1,\u9999\u5DDD,\u9AD8\u77E5,\u9CE5\u53D6,\u9E7F\u5150\u5CF6|jpmorgan|jprs|juegos|juniper|kaufen|kddi|ke>ac,co,go,info,me,mobi,ne,or,sc|kerryhotels|kerrylogistics|kerryproperties|kfh|kg>com,edu,gov,mil,net,org|kh>*|ki>biz,com,edu,gov,info,net,org|kia|kids|kim|kinder|kindle|kitchen|kiwi|km>ass,asso,com,coop,edu,gouv,gov,medecin,mil,nom,notaires,org,pharmaciens,prd,presse,tm,veterinaire|kn>edu,gov,net,org|koeln|komatsu|kosher|kp>com,edu,gov,org,rep,tra|kpmg|kpn|kr>ac,busan,chungbuk,chungnam,co,daegu,daejeon,es,gangwon,go,gwangju,gyeongbuk,gyeonggi,gyeongnam,hs,incheon,jeju,jeonbuk,jeonnam,kg,mil,ms,ne,or,pe,re,sc,seoul,ulsan|krd|kred|kuokgroup|kw>com,edu,emb,gov,ind,net,org|ky>com,edu,net,org|kyoto|kz>com,edu,gov,mil,net,org|la>com,edu,gov,info,int,net,org,per|lacaixa|lamborghini|lamer|lancaster|lancia|land|landrover|lanxess|lasalle|lat|latino|latrobe|law|lawyer|lb>com,edu,gov,net,org|lc>co,com,edu,gov,net,org|lds|lease|leclerc|lefrak|legal|lego|lexus|lgbt|li|lidl|life|lifeinsurance|lifestyle|lighting|like|lilly|limited|limo|lincoln|linde|link|lipsy|live|living|lk>ac,assn,com,edu,gov,grp,hotel,int,ltd,net,ngo,org,sch,soc,web|llc|llp|loan|loans|locker|locus|loft|lol|london|lotte|lotto|love|lpl|lplfinancial|lr>com,edu,gov,net,org|ls>ac,biz,co,edu,gov,info,net,org,sc|lt>gov|ltd|ltda|lu|lundbeck|luxe|luxury|lv>asn,com,conf,edu,gov,id,mil,net,org|ly>com,edu,gov,id,med,net,org,plc,sch|ma>ac,co,gov,net,org,press|macys|madrid|maif|maison|makeup|man|management|mango|map|market|marketing|markets|marriott|marshalls|maserati|mattel|mba|mc>asso,tm|mckinsey|md|me>ac,co,edu,gov,its,net,org,priv|med|media|meet|melbourne|meme|memorial|men|menu|merckmsd|mg>co,com,edu,gov,mil,nom,org,prd,tm|mh|miami|microsoft|mil|mini|mint|mit|mitsubishi|mk>com,edu,gov,inf,name,net,org|ml>com,edu,gouv,gov,net,org,presse|mlb|mls|mm>*|mma|mn>edu,gov,org|mo>com,edu,gov,net,org|mobi|mobile|moda|moe|moi|mom|monash|money|monster|mormon|mortgage|moscow|moto|motorcycles|mov|movie|mp|mq|mr>gov|ms>com,edu,gov,net,org|msd|mt>com,edu,net,org|mtn|mtr|mu>ac,co,com,gov,net,or,org|museum>academy,agriculture,air,airguard,alabama,alaska,amber,ambulance,american,americana,americanantiques,americanart,amsterdam,and,annefrank,anthro,anthropology,antiques,aquarium,arboretum,archaeological,archaeology,architecture,art,artanddesign,artcenter,artdeco,arteducation,artgallery,arts,artsandcrafts,asmatart,assassination,assisi,association,astronomy,atlanta,austin,australia,automotive,aviation,axis,badajoz,baghdad,bahn,bale,baltimore,barcelona,baseball,basel,baths,bauern,beauxarts,beeldengeluid,bellevue,bergbau,berkeley,berlin,bern,bible,bilbao,bill,birdart,birthplace,bonn,boston,botanical,botanicalgarden,botanicgarden,botany,brandywinevalley,brasil,bristol,british,britishcolumbia,broadcast,brunel,brussel,brussels,bruxelles,building,burghof,bus,bushey,cadaques,california,cambridge,can,canada,capebreton,carrier,cartoonart,casadelamoneda,castle,castres,celtic,center,chattanooga,cheltenham,chesapeakebay,chicago,children,childrens,childrensgarden,chiropractic,chocolate,christiansburg,cincinnati,cinema,circus,civilisation,civilization,civilwar,clinton,clock,coal,coastaldefence,cody,coldwar,collection,colonialwilliamsburg,coloradoplateau,columbia,columbus,communication,communications,community,computer,computerhistory,comunica\xE7\xF5es,contemporary,contemporaryart,convent,copenhagen,corporation,correios-e-telecomunica\xE7\xF5es,corvette,costume,countryestate,county,crafts,cranbrook,creation,cultural,culturalcenter,culture,cyber,cymru,dali,dallas,database,ddr,decorativearts,delaware,delmenhorst,denmark,depot,design,detroit,dinosaur,discovery,dolls,donostia,durham,eastafrica,eastcoast,education,educational,egyptian,eisenbahn,elburg,elvendrell,embroidery,encyclopedic,england,entomology,environment,environmentalconservation,epilepsy,essex,estate,ethnology,exeter,exhibition,family,farm,farmequipment,farmers,farmstead,field,figueres,filatelia,film,fineart,finearts,finland,flanders,florida,force,fortmissoula,fortworth,foundation,francaise,frankfurt,franziskaner,freemasonry,freiburg,fribourg,frog,fundacio,furniture,gallery,garden,gateway,geelvinck,gemological,geology,georgia,giessen,glas,glass,gorge,grandrapids,graz,guernsey,halloffame,hamburg,handson,harvestcelebration,hawaii,health,heimatunduhren,hellas,helsinki,hembygdsforbund,heritage,histoire,historical,historicalsociety,historichouses,historisch,historisches,history,historyofscience,horology,house,humanities,illustration,imageandsound,indian,indiana,indianapolis,indianmarket,intelligence,interactive,iraq,iron,isleofman,jamison,jefferson,jerusalem,jewelry,jewish,jewishart,jfk,journalism,judaica,judygarland,juedisches,juif,karate,karikatur,kids,koebenhavn,koeln,kunst,kunstsammlung,kunstunddesign,labor,labour,lajolla,lancashire,landes,lans,l\xE4ns,larsson,lewismiller,lincoln,linz,living,livinghistory,localhistory,london,losangeles,louvre,loyalist,lucerne,luxembourg,luzern,mad,madrid,mallorca,manchester,mansion,mansions,manx,marburg,maritime,maritimo,maryland,marylhurst,media,medical,medizinhistorisches,meeres,memorial,mesaverde,michigan,midatlantic,military,mill,miners,mining,minnesota,missile,missoula,modern,moma,money,monmouth,monticello,montreal,moscow,motorcycle,muenchen,muenster,mulhouse,muncie,museet,museumcenter,museumvereniging,music,national,nationalfirearms,nationalheritage,nativeamerican,naturalhistory,naturalhistorymuseum,naturalsciences,nature,naturhistorisches,natuurwetenschappen,naumburg,naval,nebraska,neues,newhampshire,newjersey,newmexico,newport,newspaper,newyork,niepce,norfolk,north,nrw,nyc,nyny,oceanographic,oceanographique,omaha,online,ontario,openair,oregon,oregontrail,otago,oxford,pacific,paderborn,palace,paleo,palmsprings,panama,paris,pasadena,pharmacy,philadelphia,philadelphiaarea,philately,phoenix,photography,pilots,pittsburgh,planetarium,plantation,plants,plaza,portal,portland,portlligat,posts-and-telecommunications,preservation,presidio,press,project,public,pubol,quebec,railroad,railway,research,resistance,riodejaneiro,rochester,rockart,roma,russia,saintlouis,salem,salvadordali,salzburg,sandiego,sanfrancisco,santabarbara,santacruz,santafe,saskatchewan,satx,savannahga,schlesisches,schoenbrunn,schokoladen,school,schweiz,science,science-fiction,scienceandhistory,scienceandindustry,sciencecenter,sciencecenters,sciencehistory,sciences,sciencesnaturelles,scotland,seaport,settlement,settlers,shell,sherbrooke,sibenik,silk,ski,skole,society,sologne,soundandvision,southcarolina,southwest,space,spy,square,stadt,stalbans,starnberg,state,stateofdelaware,station,steam,steiermark,stjohn,stockholm,stpetersburg,stuttgart,suisse,surgeonshall,surrey,svizzera,sweden,sydney,tank,tcm,technology,telekommunikation,television,texas,textile,theater,time,timekeeping,topology,torino,touch,town,transport,tree,trolley,trust,trustee,uhren,ulm,undersea,university,usa,usantiques,usarts,uscountryestate,usculture,usdecorativearts,usgarden,ushistory,ushuaia,uslivinghistory,utah,uvic,valley,vantaa,versailles,viking,village,virginia,virtual,virtuel,vlaanderen,volkenkunde,wales,wallonie,war,washingtondc,watch-and-clock,watchandclock,western,westfalen,whaling,wildlife,williamsburg,windmill,workshop,york,yorkshire,yosemite,youth,zoological,zoology,\u0438\u043A\u043E\u043C,\u05D9\u05E8\u05D5\u05E9\u05DC\u05D9\u05DD|music|mutual|mv>aero,biz,com,coop,edu,gov,info,int,mil,museum,name,net,org,pro|mw>ac,biz,co,com,coop,edu,gov,int,museum,net,org|mx>com,edu,gob,net,org|my>biz,com,edu,gov,mil,name,net,org|mz>ac,adv,co,edu,gov,mil,net,org|na>ca,cc,co,com,dr,in,info,mobi,mx,name,or,org,pro,school,tv,us,ws|nab|nagoya|name|natura|navy|nba|nc>asso,nom|ne|nec|net|netbank|netflix|network|neustar|new|news|next|nextdirect|nexus|nf>arts,com,firm,info,net,other,per,rec,store,web|nfl|ng>com,edu,gov,i,mil,mobi,name,net,org,sch|ngo|nhk|ni>ac,biz,co,com,edu,gob,in,info,int,mil,net,nom,org,web|nico|nike|nikon|ninja|nissan|nissay|nl|no>aa>gs<aarborte,aejrie,afjord,\xE5fjord,agdenes,ah>gs<akershus>nes<aknoluokta,\xE1k\u014Boluokta,akrehamn,\xE5krehamn,al,\xE5l,alaheadju,\xE1laheadju,alesund,\xE5lesund,algard,\xE5lg\xE5rd,alstahaug,alta,\xE1lt\xE1,alvdal,amli,\xE5mli,amot,\xE5mot,andasuolo,andebu,andoy,and\xF8y,ardal,\xE5rdal,aremark,arendal,arna,\xE5s,aseral,\xE5seral,asker,askim,askoy,ask\xF8y,askvoll,asnes,\xE5snes,audnedaln,aukra,aure,aurland,aurskog-holand,aurskog-h\xF8land,austevoll,austrheim,averoy,aver\xF8y,badaddja,b\xE5d\xE5ddj\xE5,b\xE6rum,bahcavuotna,b\xE1hcavuotna,bahccavuotna,b\xE1hccavuotna,baidar,b\xE1id\xE1r,bajddar,b\xE1jddar,balat,b\xE1l\xE1t,balestrand,ballangen,balsfjord,bamble,bardu,barum,batsfjord,b\xE5tsfjord,bearalvahki,bearalv\xE1hki,beardu,beiarn,berg,bergen,berlevag,berlev\xE5g,bievat,biev\xE1t,bindal,birkenes,bjarkoy,bjark\xF8y,bjerkreim,bjugn,bodo,bod\xF8,bokn,bomlo,b\xF8mlo,bremanger,bronnoy,br\xF8nn\xF8y,bronnoysund,br\xF8nn\xF8ysund,brumunddal,bryne,bu>gs<budejju,buskerud>nes<bygland,bykle,cahcesuolo,\u010D\xE1hcesuolo,davvenjarga,davvenj\xE1rga,davvesiida,deatnu,dep,dielddanuorri,divtasvuodna,divttasvuotna,donna,d\xF8nna,dovre,drammen,drangedal,drobak,dr\xF8bak,dyroy,dyr\xF8y,egersund,eid,eidfjord,eidsberg,eidskog,eidsvoll,eigersund,elverum,enebakk,engerdal,etne,etnedal,evenassi,even\xE1\u0161\u0161i,evenes,evje-og-hornnes,farsund,fauske,fedje,fet,fetsund,fhs,finnoy,finn\xF8y,fitjar,fjaler,fjell,fla,fl\xE5,flakstad,flatanger,flekkefjord,flesberg,flora,floro,flor\xF8,fm>gs<folkebibl,folldal,forde,f\xF8rde,forsand,fosnes,fr\xE6na,frana,fredrikstad,frei,frogn,froland,frosta,froya,fr\xF8ya,fuoisku,fuossko,fusa,fylkesbibl,fyresdal,gaivuotna,g\xE1ivuotna,galsa,g\xE1ls\xE1,gamvik,gangaviika,g\xE1\u014Bgaviika,gaular,gausdal,giehtavuoatna,gildeskal,gildesk\xE5l,giske,gjemnes,gjerdrum,gjerstad,gjesdal,gjovik,gj\xF8vik,gloppen,gol,gran,grane,granvin,gratangen,grimstad,grong,grue,gulen,guovdageaidnu,ha,h\xE5,habmer,h\xE1bmer,hadsel,h\xE6gebostad,hagebostad,halden,halsa,hamar,hamaroy,hammarfeasta,h\xE1mm\xE1rfeasta,hammerfest,hapmir,h\xE1pmir,haram,hareid,harstad,hasvik,hattfjelldal,haugesund,hedmark>os,valer,v\xE5ler<hemne,hemnes,hemsedal,herad,hitra,hjartdal,hjelmeland,hl>gs<hm>gs<hobol,hob\xF8l,hof,hokksund,hol,hole,holmestrand,holtalen,holt\xE5len,honefoss,h\xF8nefoss,hordaland>os<hornindal,horten,hoyanger,h\xF8yanger,hoylandet,h\xF8ylandet,hurdal,hurum,hvaler,hyllestad,ibestad,idrett,inderoy,inder\xF8y,iveland,ivgu,jan-mayen>gs<jessheim,jevnaker,jolster,j\xF8lster,jondal,jorpeland,j\xF8rpeland,kafjord,k\xE5fjord,karasjohka,k\xE1r\xE1\u0161johka,karasjok,karlsoy,karmoy,karm\xF8y,kautokeino,kirkenes,klabu,kl\xE6bu,klepp,kommune,kongsberg,kongsvinger,kopervik,kraanghke,kr\xE5anghke,kragero,krager\xF8,kristiansand,kristiansund,krodsherad,kr\xF8dsherad,krokstadelva,kv\xE6fjord,kv\xE6nangen,kvafjord,kvalsund,kvam,kvanangen,kvinesdal,kvinnherad,kviteseid,kvitsoy,kvits\xF8y,laakesvuemie,l\xE6rdal,lahppi,l\xE1hppi,langevag,langev\xE5g,lardal,larvik,lavagis,lavangen,leangaviika,lea\u014Bgaviika,lebesby,leikanger,leirfjord,leirvik,leka,leksvik,lenvik,lerdal,lesja,levanger,lier,lierne,lillehammer,lillesand,lindas,lind\xE5s,lindesnes,loabat,loab\xE1t,lodingen,l\xF8dingen,lom,loppa,lorenskog,l\xF8renskog,loten,l\xF8ten,lund,lunner,luroy,lur\xF8y,luster,lyngdal,lyngen,malatvuopmi,m\xE1latvuopmi,malselv,m\xE5lselv,malvik,mandal,marker,marnardal,masfjorden,masoy,m\xE5s\xF8y,matta-varjjat,m\xE1tta-v\xE1rjjat,meland,meldal,melhus,meloy,mel\xF8y,meraker,mer\xE5ker,midsund,midtre-gauldal,mil,mjondalen,mj\xF8ndalen,mo-i-rana,moareke,mo\xE5reke,modalen,modum,molde,more-og-romsdal>heroy,sande<m\xF8re-og-romsdal>her\xF8y,sande<mosjoen,mosj\xF8en,moskenes,moss,mosvik,mr>gs<muosat,muos\xE1t,museum,naamesjevuemie,n\xE5\xE5mesjevuemie,n\xE6r\xF8y,namdalseid,namsos,namsskogan,nannestad,naroy,narviika,narvik,naustdal,navuotna,n\xE1vuotna,nedre-eiker,nesna,nesodden,nesoddtangen,nesseby,nesset,nissedal,nittedal,nl>gs<nord-aurdal,nord-fron,nord-odal,norddal,nordkapp,nordland>bo,b\xF8,heroy,her\xF8y<nordre-land,nordreisa,nore-og-uvdal,notodden,notteroy,n\xF8tter\xF8y,nt>gs<odda,of>gs<oksnes,\xF8ksnes,ol>gs<omasvuotna,oppdal,oppegard,oppeg\xE5rd,orkanger,orkdal,orland,\xF8rland,orskog,\xF8rskog,orsta,\xF8rsta,osen,oslo>gs<osoyro,os\xF8yro,osteroy,oster\xF8y,ostfold>valer<\xF8stfold>v\xE5ler<ostre-toten,\xF8stre-toten,overhalla,ovre-eiker,\xF8vre-eiker,oyer,\xF8yer,oygarden,\xF8ygarden,oystre-slidre,\xF8ystre-slidre,porsanger,porsangu,pors\xE1\u014Bgu,porsgrunn,priv,rade,r\xE5de,radoy,rad\xF8y,r\xE6lingen,rahkkeravju,r\xE1hkker\xE1vju,raholt,r\xE5holt,raisa,r\xE1isa,rakkestad,ralingen,rana,randaberg,rauma,rendalen,rennebu,rennesoy,rennes\xF8y,rindal,ringebu,ringerike,ringsaker,risor,ris\xF8r,rissa,rl>gs<roan,rodoy,r\xF8d\xF8y,rollag,romsa,romskog,r\xF8mskog,roros,r\xF8ros,rost,r\xF8st,royken,r\xF8yken,royrvik,r\xF8yrvik,ruovat,rygge,salangen,salat,s\xE1lat,s\xE1l\xE1t,saltdal,samnanger,sandefjord,sandnes,sandnessjoen,sandnessj\xF8en,sandoy,sand\xF8y,sarpsborg,sauda,sauherad,sel,selbu,selje,seljord,sf>gs<siellak,sigdal,siljan,sirdal,skanit,sk\xE1nit,skanland,sk\xE5nland,skaun,skedsmo,skedsmokorset,ski,skien,skierva,skierv\xE1,skiptvet,skjak,skj\xE5k,skjervoy,skjerv\xF8y,skodje,slattum,smola,sm\xF8la,snaase,sn\xE5ase,snasa,sn\xE5sa,snillfjord,snoasa,sogndal,sogne,s\xF8gne,sokndal,sola,solund,somna,s\xF8mna,sondre-land,s\xF8ndre-land,songdalen,sor-aurdal,s\xF8r-aurdal,sor-fron,s\xF8r-fron,sor-odal,s\xF8r-odal,sor-varanger,s\xF8r-varanger,sorfold,s\xF8rfold,sorreisa,s\xF8rreisa,sortland,sorum,s\xF8rum,spjelkavik,spydeberg,st>gs<stange,stat,stathelle,stavanger,stavern,steigen,steinkjer,stjordal,stj\xF8rdal,stjordalshalsen,stj\xF8rdalshalsen,stokke,stor-elvdal,stord,stordal,storfjord,strand,stranda,stryn,sula,suldal,sund,sunndal,surnadal,svalbard>gs<sveio,svelvik,sykkylven,tana,tananger,telemark>bo,b\xF8<time,tingvoll,tinn,tjeldsund,tjome,tj\xF8me,tm>gs<tokke,tolga,tonsberg,t\xF8nsberg,torsken,tr>gs<tr\xE6na,trana,tranby,tranoy,tran\xF8y,troandin,trogstad,tr\xF8gstad,tromsa,tromso,troms\xF8,trondheim,trysil,tvedestrand,tydal,tynset,tysfjord,tysnes,tysv\xE6r,tysvar,ullensaker,ullensvang,ulvik,unjarga,unj\xE1rga,utsira,va>gs<vaapste,vadso,vads\xF8,v\xE6r\xF8y,vaga,v\xE5g\xE5,vagan,v\xE5gan,vagsoy,v\xE5gs\xF8y,vaksdal,valle,vang,vanylven,vardo,vard\xF8,varggat,v\xE1rgg\xE1t,varoy,vefsn,vega,vegarshei,veg\xE5rshei,vennesla,verdal,verran,vestby,vestfold>sande<vestnes,vestre-slidre,vestre-toten,vestvagoy,vestv\xE5g\xF8y,vevelstad,vf>gs<vgs,vik,vikna,vindafjord,voagat,volda,voss,vossevangen|nokia|northwesternmutual|norton|now|nowruz|nowtv|np>*|nr>biz,com,edu,gov,info,net,org|nra|nrw|ntt|nu|nyc|nz>ac,co,cri,geek,gen,govt,health,iwi,kiwi,maori,m\u0101ori,mil,net,org,parliament,school|obi|observer|office|okinawa|olayan|olayangroup|oldnavy|ollo|om>co,com,edu,gov,med,museum,net,org,pro|omega|one|ong|onion|onl|online|ooo|open|oracle|orange|org|organic|origins|osaka|otsuka|ott|ovh|pa>abo,ac,com,edu,gob,ing,med,net,nom,org,sld|page|panasonic|paris|pars|partners|parts|party|passagens|pay|pccw|pe>com,edu,gob,mil,net,nom,org|pet|pf>com,edu,org|pfizer|pg>*|ph>com,edu,gov,i,mil,net,ngo,org|pharmacy|phd|philips|phone|photo|photography|photos|physio|pics|pictet|pictures|pid|pin|ping|pink|pioneer|pizza|pk>biz,com,edu,fam,gob,gok,gon,gop,gos,gov,info,net,org,web|pl>agro,aid,atm,augustow,auto,babia-gora,bedzin,beskidy,bialowieza,bialystok,bielawa,bieszczady,biz,boleslawiec,bydgoszcz,bytom,cieszyn,com,czeladz,czest,dlugoleka,edu,elblag,elk,glogow,gmina,gniezno,gorlice,gov>ap,griw,ic,is,kmpsp,konsulat,kppsp,kwp,kwpsp,mup,mw,oirm,oum,pa,pinb,piw,po,psp,psse,pup,rzgw,sa,sdn,sko,so,sr,starostwo,ug,ugim,um,umig,upow,uppo,us,uw,uzs,wif,wiih,winb,wios,witd,wiw,wsa,wskr,wuoz,wzmiuw,zp<grajewo,gsm,ilawa,info,jaworzno,jelenia-gora,jgora,kalisz,karpacz,kartuzy,kaszuby,katowice,kazimierz-dolny,kepno,ketrzyn,klodzko,kobierzyce,kolobrzeg,konin,konskowola,kutno,lapy,lebork,legnica,lezajsk,limanowa,lomza,lowicz,lubin,lukow,mail,malbork,malopolska,mazowsze,mazury,media,miasta,mielec,mielno,mil,mragowo,naklo,net,nieruchomosci,nom,nowaruda,nysa,olawa,olecko,olkusz,olsztyn,opoczno,opole,org,ostroda,ostroleka,ostrowiec,ostrowwlkp,pc,pila,pisz,podhale,podlasie,polkowice,pomorskie,pomorze,powiat,priv,prochowice,pruszkow,przeworsk,pulawy,radom,rawa-maz,realestate,rel,rybnik,rzeszow,sanok,sejny,sex,shop,sklep,skoczow,slask,slupsk,sos,sosnowiec,stalowa-wola,starachowice,stargard,suwalki,swidnica,swiebodzin,swinoujscie,szczecin,szczytno,szkola,targi,tarnobrzeg,tgory,tm,tourism,travel,turek,turystyka,tychy,ustka,walbrzych,warmia,warszawa,waw,wegrow,wielun,wlocl,wloclawek,wodzislaw,wolomin,wroclaw,zachpomor,zagan,zarow,zgora,zgorzelec|place|play|playstation|plumbing|plus|pm|pn>co,edu,gov,net,org|pnc|pohl|poker|politie|porn|post|pr>ac,biz,com,edu,est,gov,info,isla,name,net,org,pro,prof|pramerica|praxi|press|prime|pro>aaa,aca,acct,avocat,bar,cpa,eng,jur,law,med,recht|prod|productions|prof|progressive|promo|properties|property|protection|pru|prudential|ps>com,edu,gov,net,org,plo,sec|pt>com,edu,gov,int,net,nome,org,publ|pub|pw>belau,co,ed,go,ne,or|pwc|py>com,coop,edu,gov,mil,net,org|qa>com,edu,gov,mil,name,net,org,sch|qpon|quebec|quest|racing|radio|re>asso,com,nom|read|realestate|realtor|realty|recipes|red|redstone|redumbrella|rehab|reise|reisen|reit|reliance|ren|rent|rentals|repair|report|republican|rest|restaurant|review|reviews|rexroth|rich|richardli|ricoh|ril|rio|rip|ro>arts,com,firm,info,nom,nt,org,rec,store,tm,www|rocher|rocks|rodeo|rogers|room|rs>ac,co,edu,gov,in,org|rsvp|ru|rugby|ruhr|run|rw>ac,co,coop,gov,mil,net,org|rwe|ryukyu|sa>com,edu,gov,med,net,org,pub,sch|saarland|safe|safety|sakura|sale|salon|samsclub|samsung|sandvik|sandvikcoromant|sanofi|sap|sarl|sas|save|saxo|sb>com,edu,gov,net,org|sbi|sbs|sc>com,edu,gov,net,org|sca|scb|schaeffler|schmidt|scholarships|school|schule|schwarz|science|scot|sd>com,edu,gov,info,med,net,org,tv|se>a,ac,b,bd,brand,c,d,e,f,fh,fhsk,fhv,g,h,i,k,komforb,kommunalforbund,komvux,l,lanbib,m,n,naturbruksgymn,o,org,p,parti,pp,press,r,s,t,tm,u,w,x,y,z|search|seat|secure|security|seek|select|sener|services|ses|seven|sew|sex|sexy|sfr|sg>com,edu,gov,net,org,per|sh>com,gov,mil,net,org|shangrila|sharp|shaw|shell|shia|shiksha|shoes|shop|shopping|shouji|show|showtime|si|silk|sina|singles|site|sj|sk|ski|skin|sky|skype|sl>com,edu,gov,net,org|sling|sm|smart|smile|sn>art,com,edu,gouv,org,perso,univ|sncf|so>com,edu,gov,me,net,org|soccer|social|softbank|software|sohu|solar|solutions|song|sony|soy|spa|space|sport|spot|sr|srl|ss>biz,com,edu,gov,me,net,org,sch|st>co,com,consulado,edu,embaixada,mil,net,org,principe,saotome,store|stada|staples|star|statebank|statefarm|stc|stcgroup|stockholm|storage|store|stream|studio|study|style|su|sucks|supplies|supply|support|surf|surgery|suzuki|sv>com,edu,gob,org,red|swatch|swiss|sx>gov|sy>com,edu,gov,mil,net,org|sydney|systems|sz>ac,co,org|tab|taipei|talk|taobao|target|tatamotors|tatar|tattoo|tax|taxi|tc|tci|td|tdk|team|tech|technology|tel|temasek|tennis|teva|tf|tg|th>ac,co,go,in,mi,net,or|thd|theater|theatre|tiaa|tickets|tienda|tiffany|tips|tires|tirol|tj>ac,biz,co,com,edu,go,gov,int,mil,name,net,nic,org,test,web|tjmaxx|tjx|tk|tkmaxx|tl>gov|tm>co,com,edu,gov,mil,net,nom,org|tmall|tn>com,ens,fin,gov,ind,info,intl,mincom,nat,net,org,perso,tourism|to>com,edu,gov,mil,net,org|today|tokyo|tools|top|toray|toshiba|total|tours|town|toyota|toys|tr>av,bbs,bel,biz,com,dr,edu,gen,gov,info,k12,kep,mil,name,nc>gov<net,org,pol,tel,tsk,tv,web|trade|trading|training|travel|travelchannel|travelers|travelersinsurance|trust|trv|tt>aero,biz,co,com,coop,edu,gov,info,int,jobs,mobi,museum,name,net,org,pro,travel|tube|tui|tunes|tushu|tv|tvs|tw>club,com,ebiz,edu,game,gov,idv,mil,net,org,\u5546\u696D,\u7D44\u7E54,\u7DB2\u8DEF|tz>ac,co,go,hotel,info,me,mil,mobi,ne,or,sc,tv|ua>cherkassy,cherkasy,chernigov,chernihiv,chernivtsi,chernovtsy,ck,cn,com,cr,crimea,cv,dn,dnepropetrovsk,dnipropetrovsk,donetsk,dp,edu,gov,if,in,ivano-frankivsk,kh,kharkiv,kharkov,kherson,khmelnitskiy,khmelnytskyi,kiev,kirovograd,km,kr,krym,ks,kv,kyiv,lg,lt,lugansk,lutsk,lv,lviv,mk,mykolaiv,net,nikolaev,od,odesa,odessa,org,pl,poltava,rivne,rovno,rv,sb,sebastopol,sevastopol,sm,sumy,te,ternopil,uz,uzhgorod,vinnica,vinnytsia,vn,volyn,yalta,zaporizhzhe,zaporizhzhia,zhitomir,zhytomyr,zp,zt|ubank|ubs|ug>ac,co,com,go,ne,or,org,sc|uk>ac,co,gov,ltd,me,net,nhs,org,plc,police,sch>*|unicom|university|uno|uol|ups|us>ak>cc,k12,lib<al>cc,k12,lib<ar>cc,k12,lib<as>cc,k12,lib<az>cc,k12,lib<ca>cc,k12,lib<co>cc,k12,lib<ct>cc,k12,lib<dc>cc,k12,lib<de>cc,k12<dni,fed,fl>cc,k12,lib<ga>cc,k12,lib<gu>cc,k12,lib<hi>cc,lib<ia>cc,k12,lib<id>cc,k12,lib<il>cc,k12,lib<in>cc,k12,lib<isa,kids,ks>cc,k12,lib<ky>cc,k12,lib<la>cc,k12,lib<ma>cc,k12>chtr,paroch,pvt<lib<md>cc,k12,lib<me>cc,k12,lib<mi>ann-arbor,cc,cog,dst,eaton,gen,k12,lib,mus,tec,washtenaw<mn>cc,k12,lib<mo>cc,k12,lib<ms>cc,k12,lib<mt>cc,k12,lib<nc>cc,k12,lib<nd>cc,lib<ne>cc,k12,lib<nh>cc,k12,lib<nj>cc,k12,lib<nm>cc,k12,lib<nsn,nv>cc,k12,lib<ny>cc,k12,lib<oh>cc,k12,lib<ok>cc,k12,lib<or>cc,k12,lib<pa>cc,k12,lib<pr>cc,k12,lib<ri>cc,lib<sc>cc,k12,lib<sd>cc,lib<tn>cc,k12,lib<tx>cc,k12,lib<ut>cc,k12,lib<va>cc,k12,lib<vi>cc,k12,lib<vt>cc,k12,lib<wa>cc,k12,lib<wi>cc,k12,lib<wv>cc<wy>cc,k12,lib|uy>com,edu,gub,mil,net,org|uz>co,com,net,org|va|vacations|vana|vanguard|vc>com,edu,gov,mil,net,org|ve>arts,bib,co,com,e12,edu,firm,gob,gov,info,int,mil,net,nom,org,rar,rec,store,tec,web|vegas|ventures|verisign|verm\xF6gensberater|verm\xF6gensberatung|versicherung|vet|vg|vi>co,com,k12,net,org|viajes|video|vig|viking|villas|vin|vip|virgin|visa|vision|viva|vivo|vlaanderen|vn>ac,biz,com,edu,gov,health,info,int,name,net,org,pro|vodka|volkswagen|volvo|vote|voting|voto|voyage|vu>com,edu,net,org|vuelos|wales|walmart|walter|wang|wanggou|watch|watches|weather|weatherchannel|webcam|weber|website|wedding|weibo|weir|wf|whoswho|wien|wiki|williamhill|win|windows|wine|winners|wme|wolterskluwer|woodside|work|works|world|wow|ws>com,edu,gov,net,org|wtc|wtf|xbox|xerox|xfinity|xihuan|xin|xxx|xyz|yachts|yahoo|yamaxun|yandex|ye>com,edu,gov,mil,net,org|yodobashi|yoga|yokohama|you|youtube|yt|yun|za>ac,agric,alt,co,edu,gov,grondar,law,mil,net,ngo,nic,nis,nom,org,school,tm,web|zappos|zara|zero|zip|zm>ac,biz,co,com,edu,gov,info,mil,net,org,sch|zone|zuerich|zw>ac,co,gov,mil,org|\u03B5\u03BB|\u03B5\u03C5|\u0431\u0433|\u0431\u0435\u043B|\u0434\u0435\u0442\u0438|\u0435\u044E|\u043A\u0430\u0442\u043E\u043B\u0438\u043A|\u043A\u043E\u043C|\u049B\u0430\u0437|\u043C\u043A\u0434|\u043C\u043E\u043D|\u043C\u043E\u0441\u043A\u0432\u0430|\u043E\u043D\u043B\u0430\u0439\u043D|\u043E\u0440\u0433|\u0440\u0443\u0441|\u0440\u0444|\u0441\u0430\u0439\u0442|\u0441\u0440\u0431>\u0430\u043A,\u043E\u0431\u0440,\u043E\u0434,\u043E\u0440\u0433,\u043F\u0440,\u0443\u043F\u0440|\u0443\u043A\u0440|\u10D2\u10D4|\u0570\u0561\u0575|\u05D9\u05E9\u05E8\u05D0\u05DC>\u05D0\u05E7\u05D3\u05DE\u05D9\u05D4,\u05D9\u05E9\u05D5\u05D1,\u05DE\u05DE\u05E9\u05DC,\u05E6\u05D4\u05DC|\u05E7\u05D5\u05DD|\u0627\u0628\u0648\u0638\u0628\u064A|\u0627\u062A\u0635\u0627\u0644\u0627\u062A|\u0627\u0631\u0627\u0645\u0643\u0648|\u0627\u0644\u0627\u0631\u062F\u0646|\u0627\u0644\u0628\u062D\u0631\u064A\u0646|\u0627\u0644\u062C\u0632\u0627\u0626\u0631|\u0627\u0644\u0633\u0639\u0648\u062F\u064A\u0629|\u0627\u0644\u0633\u0639\u0648\u062F\u064A\u0647|\u0627\u0644\u0633\u0639\u0648\u062F\u06CC\u0629|\u0627\u0644\u0633\u0639\u0648\u062F\u06CC\u06C3|\u0627\u0644\u0639\u0644\u064A\u0627\u0646|\u0627\u0644\u0645\u063A\u0631\u0628|\u0627\u0644\u064A\u0645\u0646|\u0627\u0645\u0627\u0631\u0627\u062A|\u0627\u064A\u0631\u0627\u0646|\u0627\u06CC\u0631\u0627\u0646|\u0628\u0627\u0631\u062A|\u0628\u0627\u0632\u0627\u0631|\u0628\u06BE\u0627\u0631\u062A|\u0628\u064A\u062A\u0643|\u067E\u0627\u0643\u0633\u062A\u0627\u0646|\u067E\u0627\u06A9\u0633\u062A\u0627\u0646|\u0680\u0627\u0631\u062A|\u062A\u0648\u0646\u0633|\u0633\u0648\u062F\u0627\u0646|\u0633\u0648\u0631\u064A\u0627|\u0633\u0648\u0631\u064A\u0629|\u0634\u0628\u0643\u0629|\u0639\u0631\u0627\u0642|\u0639\u0631\u0628|\u0639\u0645\u0627\u0646|\u0641\u0644\u0633\u0637\u064A\u0646|\u0642\u0637\u0631|\u0643\u0627\u062B\u0648\u0644\u064A\u0643|\u0643\u0648\u0645|\u0645\u0635\u0631|\u0645\u0644\u064A\u0633\u064A\u0627|\u0645\u0648\u0631\u064A\u062A\u0627\u0646\u064A\u0627|\u0645\u0648\u0642\u0639|\u0647\u0645\u0631\u0627\u0647|\u0915\u0949\u092E|\u0928\u0947\u091F|\u092D\u093E\u0930\u0924|\u092D\u093E\u0930\u0924\u092E\u094D|\u092D\u093E\u0930\u094B\u0924|\u0938\u0902\u0917\u0920\u0928|\u09AC\u09BE\u0982\u09B2\u09BE|\u09AD\u09BE\u09B0\u09A4|\u09AD\u09BE\u09F0\u09A4|\u0A2D\u0A3E\u0A30\u0A24|\u0AAD\u0ABE\u0AB0\u0AA4|\u0B2D\u0B3E\u0B30\u0B24|\u0B87\u0BA8\u0BCD\u0BA4\u0BBF\u0BAF\u0BBE|\u0B87\u0BB2\u0B99\u0BCD\u0B95\u0BC8|\u0B9A\u0BBF\u0B99\u0BCD\u0B95\u0BAA\u0BCD\u0BAA\u0BC2\u0BB0\u0BCD|\u0C2D\u0C3E\u0C30\u0C24\u0C4D|\u0CAD\u0CBE\u0CB0\u0CA4|\u0D2D\u0D3E\u0D30\u0D24\u0D02|\u0DBD\u0D82\u0D9A\u0DCF|\u0E04\u0E2D\u0E21|\u0E44\u0E17\u0E22>\u0E17\u0E2B\u0E32\u0E23,\u0E18\u0E38\u0E23\u0E01\u0E34\u0E08,\u0E40\u0E19\u0E47\u0E15,\u0E23\u0E31\u0E10\u0E1A\u0E32\u0E25,\u0E28\u0E36\u0E01\u0E29\u0E32,\u0E2D\u0E07\u0E04\u0E4C\u0E01\u0E23|\u0EA5\u0EB2\u0EA7|\uB2F7\uB137|\uB2F7\uCEF4|\uC0BC\uC131|\uD55C\uAD6D|\u30A2\u30DE\u30BE\u30F3|\u30B0\u30FC\u30B0\u30EB|\u30AF\u30E9\u30A6\u30C9|\u30B3\u30E0|\u30B9\u30C8\u30A2|\u30BB\u30FC\u30EB|\u30D5\u30A1\u30C3\u30B7\u30E7\u30F3|\u30DD\u30A4\u30F3\u30C8|\u307F\u3093\u306A|\u4E16\u754C|\u4E2D\u4FE1|\u4E2D\u56FD|\u4E2D\u570B|\u4E2D\u6587\u7F51|\u4E9A\u9A6C\u900A|\u4F01\u4E1A|\u4F5B\u5C71|\u4FE1\u606F|\u5065\u5EB7|\u516B\u5366|\u516C\u53F8|\u516C\u76CA|\u53F0\u6E7E|\u53F0\u7063|\u5546\u57CE|\u5546\u5E97|\u5546\u6807|\u5609\u91CC|\u5609\u91CC\u5927\u9152\u5E97|\u5728\u7EBF|\u5927\u62FF|\u5929\u4E3B\u6559|\u5A31\u4E50|\u5BB6\u96FB|\u5E7F\u4E1C|\u5FAE\u535A|\u6148\u5584|\u6211\u7231\u4F60|\u624B\u673A|\u62DB\u8058|\u653F\u52A1|\u653F\u5E9C|\u65B0\u52A0\u5761|\u65B0\u95FB|\u65F6\u5C1A|\u66F8\u7C4D|\u673A\u6784|\u6DE1\u9A6C\u9521|\u6E38\u620F|\u6FB3\u9580|\u6FB3\u95E8|\u70B9\u770B|\u79FB\u52A8|\u7EC4\u7EC7\u673A\u6784|\u7F51\u5740|\u7F51\u5E97|\u7F51\u7AD9|\u7F51\u7EDC|\u8054\u901A|\u81FA\u7063|\u8C37\u6B4C|\u8D2D\u7269|\u901A\u8CA9|\u96C6\u56E2|\u96FB\u8A0A\u76C8\u79D1|\u98DE\u5229\u6D66|\u98DF\u54C1|\u9910\u5385|\u9999\u683C\u91CC\u62C9|\u9999\u6E2F>\u500B\u4EBA,\u516C\u53F8,\u653F\u5E9C,\u6559\u80B2,\u7D44\u7E54,\u7DB2\u7D61" };
    });
    dt = C((Xr, ut) => {
      "use strict";
      l();
      var $s = ga();
      ut.exports = $s(lt().trie);
    });
    mt = C((Jr, Ws) => {
      Ws.exports = { trie: "ac>drr|academy>official|ae>blogspot|ai>uwu|al>blogspot|am>blogspot,neko,nyaa,radio|app>beget>*<bookonline,clerk,clerkstage,deta,developer>*<easypanel,edgecompute,encr,fireweb,framer,hasura,loginline,messerli,netlify,noop,northflank>*<ondigitalocean,onflashdrive,platform0,run>a<telebit,typedream,vercel,web,wnext|ar>com>blogspot|asia>cloudns|at>123webseite,12hp,2ix,4lima,biz,co>blogspot<funkfeuer>wien<futurecms>*,ex>*<in>*<<futurehosting,futuremailing,info,lima-city,myspreadshop,ortsinfo>ex>*<kunden>*<<priv|au>com>blogspot,cloudlets>mel<myspreadshop|ax>be,cat,es,eu,gg,mc,us,xy|ba>blogspot,rs|basketball>aus,nz|be>123website,blogspot,interhostsolutions>cloud<kuleuven>ezproxy<myspreadshop,transurl>*<webhosting|bg>barsy,blogspot|biz>activetrail,cloudns,dscloud,dyndns,for-better,for-more,for-some,for-the,jozi,mmafan,myftp,no-ip,orx,selfip,webhop|bj>blogspot|bn>co|br>com>blogspot,simplesite,virtualcloud>scale>users<<<leg>ac,al,am,ap,ba,ce,df,es,go,ma,mg,ms,mt,pa,pb,pe,pi,pr,rj,rn,ro,rr,rs,sc,se,sp,to|bs>we|builders>cloudsite|business>co|by>com>blogspot<mediatech,mycloud|bz>gsj,za|ca>awdev>*<barsy,blogspot,co,myspreadshop,no-ip|casa>nabu>ui|cc>cloudns,csx,fantasyleague,ftpaccess,game-server,myphotos,scrapping,spawn>instances<twmail|cf>blogspot|ch>123website,12hp,2ix,4lima,blogspot,dnsking,firenet>*,svc>*<<flow>ae>alp1<appengine<gotdns,lima-city,linkyard-cloud,myspreadshop,square7|ci>fin,nl|cl>blogspot|cloud>axarnet>es-1<banzai>*<diadem,elementor,encoway>eu<jelastic>vip<jele,jenv-aruba>aruba>eur>it1<<it1<jotelulu,keliweb>cs<kuleuven,linkyard,magentosite>*<on-rancher>*<oxa>tn,uk<perspecta,primetel>uk<ravendb,reclaim>ca,uk,us<scw>baremetal>fr-par-1,fr-par-2,nl-ams-1<fr-par>fnc>functions<k8s>nodes<s3,s3-website,whm<instances>priv,pub<k8s,nl-ams>k8s>nodes<s3,s3-website,whm<pl-waw>k8s>nodes<s3,s3-website<scalebook,smartlabeling<sensiosite>*<statics>*<trafficplex,trendhosting>ch,de<urown,vapor,voorloper|club>barsy,cloudns,jele|cn>com>amazonaws>cn-north-1>s3<compute>*<eb>cn-north-1,cn-northwest-1<elb>*<<<instantcloud,quickconnect>direct|co>carrd,com>blogspot<crd,firewalledreplit>id<leadpages,lpages,mypi,n4t,otap>*<repl>id<supabase|codes>owo>*|com>001www,0emm>*<1kapp,3utilities,4u,adobeaemcloud>dev>*<<africa,airkitapps,airkitapps-au,aivencloud,alpha-myqnapcloud,amazonaws>af-south-1>cloud9>vfs,webview-assets<<ap-east-1>cloud9>vfs,webview-assets<<ap-northeast-1>cloud9>vfs,webview-assets<dualstack>s3<<ap-northeast-2>cloud9>vfs,webview-assets<dualstack>s3<s3,s3-website<ap-northeast-3>cloud9>vfs,webview-assets<<ap-south-1>cloud9>vfs,webview-assets<dualstack>s3<s3,s3-website<ap-southeast-1>cloud9>vfs,webview-assets<dualstack>s3<<ap-southeast-2>cloud9>vfs,webview-assets<dualstack>s3<<ca-central-1>cloud9>vfs,webview-assets<dualstack>s3<s3,s3-website<compute>*<compute-1>*<elb>*<eu-central-1>cloud9>vfs,webview-assets<dualstack>s3<s3,s3-website<eu-north-1>cloud9>vfs,webview-assets<<eu-south-1>cloud9>vfs,webview-assets<<eu-west-1>cloud9>vfs,webview-assets<dualstack>s3<<eu-west-2>cloud9>vfs,webview-assets<dualstack>s3<s3,s3-website<eu-west-3>cloud9>vfs,webview-assets<dualstack>s3<s3,s3-website<me-south-1>cloud9>vfs,webview-assets<<s3,s3-ap-northeast-1,s3-ap-northeast-2,s3-ap-south-1,s3-ap-southeast-1,s3-ap-southeast-2,s3-ca-central-1,s3-eu-central-1,s3-eu-west-1,s3-eu-west-2,s3-eu-west-3,s3-external-1,s3-fips-us-gov-west-1,s3-sa-east-1,s3-us-east-2,s3-us-gov-west-1,s3-us-west-1,s3-us-west-2,s3-website-ap-northeast-1,s3-website-ap-southeast-1,s3-website-ap-southeast-2,s3-website-eu-west-1,s3-website-sa-east-1,s3-website-us-east-1,s3-website-us-west-1,s3-website-us-west-2,sa-east-1>cloud9>vfs,webview-assets<dualstack>s3<<us-east-1>cloud9>vfs,webview-assets<dualstack>s3<<us-east-2>cloud9>vfs,webview-assets<dualstack>s3<s3,s3-website<us-west-1>cloud9>vfs,webview-assets<<us-west-2>cloud9>vfs,webview-assets<<<amscompute,appchizi,applinzi,appspacehosted,appspaceusercontent,appspot>r>*<<ar,authgear-staging,authgearapps,awsglobalaccelerator,awsmppl,balena-devices,barsycenter,barsyonline,betainabox,blogdns,blogspot,blogsyte,bloxcms,bounty-full>alpha,beta<boutir,bplaced,br,builtwithdark,cafjs,cechire,cf-ipfs,ciscofreak,clicketcloud,cloudcontrolapp,cloudcontrolled,cloudflare-ipfs,cn,co,code>builder>*<dev-builder>*<stg-builder>*<<codespot,customer-oci>*,oci>*<ocp>*<ocs>*<<damnserver,datadetect>demo,instance<dattolocal,dattorelay,dattoweb,ddns5,ddnsfree,ddnsgeek,ddnsking,ddnslive,de,dev-myqnapcloud,devcdnaccesso>*<digitaloceanspaces>*<discordsays,discordsez,ditchyourip,dnsalias,dnsdojo,dnsiskinky,doesntexist,dontexist,doomdns,dopaas,drayddns,dreamhosters,dsmynas,dyn-o-saur,dynalias,dyndns-at-home,dyndns-at-work,dyndns-blog,dyndns-free,dyndns-home,dyndns-ip,dyndns-mail,dyndns-office,dyndns-pics,dyndns-remote,dyndns-server,dyndns-web,dyndns-wiki,dyndns-work,dynns,elasticbeanstalk>ap-northeast-1,ap-northeast-2,ap-northeast-3,ap-south-1,ap-southeast-1,ap-southeast-2,ca-central-1,eu-central-1,eu-west-1,eu-west-2,eu-west-3,sa-east-1,us-east-1,us-east-2,us-gov-west-1,us-west-1,us-west-2<encoreapi,est-a-la-maison,est-a-la-masion,est-le-patron,est-mon-blogueur,eu,evennode>eu-1,eu-2,eu-3,eu-4,us-1,us-2,us-3,us-4<familyds,fastly-terrarium,fastvps-server,fbsbx>apps<firebaseapp,firewall-gateway,fldrv,forgeblocks,framercanvas,freebox-os,freeboxos,freemyip,from-ak,from-al,from-ar,from-ca,from-ct,from-dc,from-de,from-fl,from-ga,from-hi,from-ia,from-id,from-il,from-in,from-ks,from-ky,from-ma,from-md,from-mi,from-mn,from-mo,from-ms,from-mt,from-nc,from-nd,from-ne,from-nh,from-nj,from-nm,from-nv,from-oh,from-ok,from-or,from-pa,from-pr,from-ri,from-sc,from-sd,from-tn,from-tx,from-ut,from-va,from-vt,from-wa,from-wi,from-wv,from-wy,geekgalaxy,gentapps,gentlentapis,getmyip,giize,githubusercontent,gleeze,googleapis,googlecode,gotdns,gotpantheon,gr,health-carereform,herokuapp,herokussl,hidora,hk,hobby-site,homelinux,homesecuritymac,homesecuritypc,homeunix,hosted-by-previder>paas<hostedpi,hosteur>rag-cloud,rag-cloud-ch<hotelwithflight,hu,iamallama,ik-server>jcloud,jcloud-ver-jpc<impertrix,impertrixcdn,is-a-anarchist,is-a-blogger,is-a-bookkeeper,is-a-bulls-fan,is-a-caterer,is-a-chef,is-a-conservative,is-a-cpa,is-a-cubicle-slave,is-a-democrat,is-a-designer,is-a-doctor,is-a-financialadvisor,is-a-geek,is-a-green,is-a-guru,is-a-hard-worker,is-a-hunter,is-a-landscaper,is-a-lawyer,is-a-liberal,is-a-libertarian,is-a-llama,is-a-musician,is-a-nascarfan,is-a-nurse,is-a-painter,is-a-personaltrainer,is-a-photographer,is-a-player,is-a-republican,is-a-rockstar,is-a-socialist,is-a-student,is-a-teacher,is-a-techie,is-a-therapist,is-an-accountant,is-an-actor,is-an-actress,is-an-anarchist,is-an-artist,is-an-engineer,is-an-entertainer,is-certified,is-gone,is-into-anime,is-into-cars,is-into-cartoons,is-into-games,is-leet,is-not-certified,is-slick,is-uberleet,is-with-theband,isa-geek,isa-hockeynut,issmarterthanyou,jdevcloud,jelastic>demo<joyent>cns>*<<jpn,kasserver,kilatiron,kozow,kr,ktistory,likes-pie,likescandy,linode>members,nodebalancer>*<<linodeobjects>*<linodeusercontent>ip<lmpm>app<logoip,loseyourip,lpusercontent,massivegrid>paas<mazeplay,messwithdns,meteorapp>eu<mex,miniserver,myactivedirectory,myasustor,mydatto,mydobiss,mydrobo,myiphost,myqnapcloud,mysecuritycamera,myshopblocks,myshopify,myspreadshop,mytabit,mythic-beasts>caracal,customer,fentiger,lynx,ocelot,oncilla,onza,sphinx,vs,x,yali<mytuleap,myvnc,neat-url,net-freaks,nfshost,no,nospamproxy>cloud<observableusercontent>static<on-aptible,onfabrica,onrender,onthewifi,ooguy,operaunite,orsites,outsystemscloud,ownprovider,pagefrontapp,pagespeedmobilizer,pagexl,paywhirl>*<pgfog,pixolino,platter-app,playstation-cloud,pleskns,point2this,postman-echo,prgmr>xen<publishproxy,pythonanywhere>eu<qa2,qbuser,qc,qualifioapp,quicksytes,quipelements>*<rackmaze,remotewd,render>app<reservd,reserve-online,rhcloud,ru,sa,saves-the-whales,scrysec,securitytactics,selfip,sells-for-less,sells-for-u,servebbs,servebeer,servecounterstrike,serveexchange,serveftp,servegame,servehalflife,servehttp,servehumour,serveirc,servemp3,servep2p,servepics,servequake,servesarcasm,shopitsite,siiites,simple-url,simplesite,sinaapp,skygearapp,smushcdn,space-to-rent,stackhero-network,stdlib>api<streamlitapp,stufftoread,tb-hosting>site<teaches-yoga,temp-dns,theworkpc,thingdustdata,townnews-staging,try-snowplow,trycloudflare,tuleap-partners,typeform>pro<uk,unusualperson,us,uy,vipsinaapp,vultrobjects>*<wafaicloud>jed,lon,ryd<wafflecell,wiardweb>pages<withgoogle,withyoutube,wixsite,woltlab-demo,workisboring,wpdevcloud,wpenginepowered>js<wphostedmail,wpmucdn,writesthisblog,xnbay>u2,u2-local<yolasite,za|community>myforum,nog,ravendb|cool>de,elementor|cv>blogspot|cx>ath,info|cy>com>blogspot,scaleforce>j|cz>blogspot,co,e4,metacentrum>cloud>*<custom<muni>cloud>flt,usr<<realm|de>123webseite,12hp,2ix,4lima,barsy,blogspot,bplaced,com,community-pro,cosidns>dyn<dd-dns,ddnss>dyn,dyndns<diskussionsbereich,dnshome,dnsupdater,dray-dns,draydns,dyn-berlin,dyn-ip24,dyn-vpn,dynamisches-dns,dyndns1,dynvpn,firewall-gateway,frusky>*<fuettertdasnetz,git-repos,goip,g\xFCnstigbestellen,g\xFCnstigliefern,home-webserver>dyn<hs-heilbronn>it>pages<<in-berlin,in-brb,in-butter,in-dsl,in-vpn,internet-dns,iservschule,isteingeek,istmein,keymachine,l-o-g-i-n,lcube-server,lebtimnetz,leitungsen,lima-city,logoip,mein-iserv,mein-vigor,my-gateway,my-router,my-vigor,my-wan,myhome-server,myspreadshop,schulplattform,schulserver,spdns,speedpartner>customer<square7,svn-repos,syno-ds,synology-diskstation,synology-ds,taifun-dns,test-iserv,traeumtgerade,uberspace>*<virtual-user,virtualuser|design>bss|dev>curv,deno,deno-staging,deta,fly,gateway>*<githubpreview,iserv,lcl>*<lclstage>*<localcert>user>*<<loginline,mediatech,pages,platter-app,r2,shiftcrypto,stg>*<stgstage>*<vercel,webhare>*<workers|digital>cloudapps>london|dk>123hjemmeside,biz,blogspot,co,firm,myspreadshop,reg,store|earth>dapps>*,bzz>*|ec>base,official|edu>rit>git-pages|education>co|ee>com>blogspot|eg>com>blogspot|es>123miweb,com>blogspot<myspreadshop|estate>compute>*|eu>airkitapps,barsy,cloudns,diskstation,dogado>jelastic<mycd,spdns,transurl>*<wellbeingzone|eus>party>user|events>co,koobin|faith>ybo|farm>storj|fi>123kotisivu,blogspot,cloudplatform>fi<datacenter>demo,paas<dy,h\xE4kkinen,iki,kapsi,myspreadshop|financial>co|fm>radio,user>*|fr>123siteweb,blogspot,chirurgiens-dentistes-en-france,dedibox,en-root,fbx-os,fbxos,freebox-os,freeboxos,goupile,myspreadshop,on-web,ynh|gdn>cnpy|gg>cya,kaas,panel>daemon|gl>biz,xx|goog>cloud,translate,usercontent>*|gp>app|gr>blogspot,simplesite|group>discourse|gt>blog,de,to|gy>be|health>hra|hk>blogspot,inc,ltd,secaas|hn>cc|host>cloudaccess,easypanel,fastvps,freesite,half,jele,mircloud,myfast,pcloud,tempurl,wpmudev|hosting>opencraft|hr>blogspot,free|hu>blogspot|id>co>blogspot<flap,forte,my>rss>*|ie>blogspot,myspreadshop|il>co>blogspot,mytabit,ravpage,tabitorder|im>ro|in>barsy,blogspot,cloudns,supabase,web|info>barrel-of-knowledge,barrell-of-knowledge,barsy,cloudns,dnsupdate,dvrcam,dynamic-dns,dyndns,for-our,forumz,groks-the,groks-this,here-for-more,ilovecollege,knowsitall,mayfirst,no-ip,nsupdate,selfip,v-info,webhop|io>2038,apigee,azurecontainer>*<b-data,backplaneapp,banzaicloud>app,backyards>*<<barsy,basicserver,beagleboard,beebyte>paas<beebyteapp>sekd1<bigv>uk0<bitbucket,bluebite,boxfuse,browsersafetymark,cleverapps,dappnode>dyndns<dedyn,definima,drud,dyn53,editorx,edugit,fh-muenster,forgerock>id<ghost,github,gitlab,hasura-app,hostyhosting,hzc,jele,lair>apps<loginline,lolipop,mo-siemens,moonscale>*<musician,ngrok,nid,nodeart>stage<on-acorn>*<on-k3s>*<on-rio>*<pantheonsite,protonet,pstmn>mock<qcx>sys>*<<qoto,readthedocs,resindevice,resinstaging>devices<s5y>*<sandcats,shiftcrypto,shiftedit,shw,spacekit,stolos>*<telebit,thingdust>dev>cust,reservd<disrec>cust,reservd<prod>cust<testing>cust,reservd<<tickets,unispace>cloud-fr1<upli,utwente,vaporcloud,vbrplsbx>g<virtualserver,webthings,wedeploy|is>blogspot,cupcake|it>123homepage,16-b,32-b,64-b,blogspot,ibxos,iliadboxos,myspreadshop,neen>jc<syncloud,tim>open>jelastic>cloud|je>of|jp>angry,babyblue,babymilk,backdrop,bambina,bitter,blogspot,blush,boo,boy,boyfriend,but,buyshop,candypop,capoo,catfood,cheap,chicappa,chillout,chips,chowder,chu,ciao,cocotte,coolblog,cranky,cutegirl,daa,deca,deci,digick,egoism,fakefur,fashionstore,fem,flier,floppy,fool,frenchkiss,girlfriend,girly,gloomy,gonna,greater,hacca,handcrafted,heavy,her,hiho,hippy,holy,hungry,icurus,itigo,jellybean,kawaiishop,kikirara,kill,kilo,kuron,littlestar,lolipopmc,lolitapunk,lomo,lovepop,lovesick,main,mods,mond,mongolian,moo,namaste,ne>aseinet>user<gehirn<nikita,nobushi,noor,oops,parallel,parasite,pecori,peewee,penne,pepper,perma,pigboat,pinoko,punyu,pupu,pussycat,pya,raindrop,readymade,sadist,schoolbus,secret,staba,stripper,sub,sunnyday,supersale,theshop,thick,tonkotsu,under,upper,usercontent,velvet,verse,versus,vivian,watson,weblike,whitesnow,zombie|ke>co>blogspot|kg>blog,io,jp,tv,uk,us|kr>blogspot|krd>co,edu|kz>jcloud,kazteleport>upaas|la>bnr,c|land>static>dev,sites|lc>oy|li>blogspot,caa|link>cyon,dweb>*<mypep|live>hlx|lol>omg|ls>de|lt>blogspot|lu>123website,blogspot|management>router|md>at,blogspot,de,jp,to|me>barsy,brasilia,c66,daplie>localhost<ddns,diskstation,dnsfor,dscloud,edgestack,filegear,filegear-au,filegear-de,filegear-gb,filegear-ie,filegear-jp,filegear-sg,glitch,hopto,i234,loginto,lohmus,mcdir,mcpe,myds,nohost,noip,ravendb,soundcast,synology,tcp4,transip>site<vp4,webhop,wedeploy,yombo|media>framer|menu>barsy|mk>blogspot|mn>nyc|mobi>barsy,dscloud|mp>ju|mr>blogspot|ms>lab,minisite|mt>com>blogspot|mx>blogspot|my>blogspot|name>her>forgot<his>forgot|net>adobeaemcloud,alwaysdata,appudo,at-band-camp,atlassian-dev>prod>cdn<<azure-mobile,azurestaticapps>1,2,centralus,eastasia,eastus2,westeurope,westus2<azurewebsites,bar0,bar1,bar2,barsy,bitbridge,blackbaudcdn,blogdns,boomla,bounceme,bplaced,broke-it,buyshouses,casacam,cdn-edges,cdn77>r<cdn77-ssl,channelsdvr>u<clickrising,cloudaccess,cloudapp,cloudfront,cloudfunctions,cloudjiffy>fra1-de,west1-us<cloudycluster,community-pro,cryptonomic>*<dattolocal,ddns,debian,definima,dnsalias,dnsdojo,dnsup,does-it,dontexist,dsmynas,dynalias,dynathome,dynu,dynv6,eating-organic,edgeapp,elastx>jls-sto1,jls-sto2,jls-sto3<endofinternet,familyds,fastly>freetls,map,prod>a,global<ssl>a,b,global<<fastlylb>map<faststacks,feste-ip,firewall-gateway,flynnhosting,from-az,from-co,from-la,from-ny,gb,gets-it,ham-radio-op,heteml,hicam,homeftp,homeip,homelinux,homeunix,hu,in,in-dsl,in-the-band,in-vpn,iobb,ipifony,is-a-chef,is-a-geek,isa-geek,jp,kicks-ass,kinghost,knx-server,krellian,massivegrid>paas>fr-1,lon-1,lon-2,ny-1,ny-2,sg-1<<meinforum,memset,moonscale,myamaze,mydatto,mydissent,myeffect,myfritz,mymediapc,mypsx,mysecuritycamera,myspreadshop,nhlfan,no-ip,now-dns,office-on-the,onavstack,ovh>hosting>*<webpaas>*<<ownip,pgafan,podzone,privatizehealthinsurance,rackmaze,redirectme,reserve-online,ru,saveincloud>jelastic,nordeste-idc<scaleforce>j<schokokeks,scrapper-site,se,seidat,selfip,sells-it,senseering,servebbs,serveblog,serveftp,serveminecraft,shopselect,siteleaf,square7,srcf>soc,user<static-access,supabase,sytes,t3l3p0rt,tailscale>beta<thruhere,torproject>pages<ts,tsukaeru>jelastic<twmail,uk,uni5,vpndns,vps-host>jelastic>atl,njs,ric<<webhop,yandexcloud>storage,website<za|network>alces>*<arvo,azimuth,co,tlon|news>noticeable|ng>col,com>blogspot<firm,gen,ltd,ngo|nl>123website,blogspot,cistron,co,demon,gov,hosting-cluster,khplay,myspreadshop,transurl>*|no>123hjemmeside,blogspot,co,myspreadshop|nu>enterprisecloud,merseine,mine,shacknet|nz>co>blogspot|one>homelink,onred>staging<service|online>barsy,eero,eero-stage|orange>tech|org>accesscam,ae,altervista,amune>tele<barsy,blogdns,blogsite,bmoattachments,boldlygoingnowhere,cable-modem,camdvr,cdn77>c,rsc<cdn77-secure>origin>ssl<<certmgr,cloudns,collegefan,couchpotatofries,ddnss,diskstation,dnsalias,dnsdojo,doesntexist,dontexist,doomdns,dsmynas,duckdns,dvrdns,dynalias,dyndns>go,home<dynserv,endofinternet,endoftheinternet,eu>al,asso,at,au,be,bg,ca,cd,ch,cn,cy,cz,de,dk,edu,ee,es,fi,fr,gr,hr,hu,ie,il,in,int,is,it,jp,kr,lt,lu,lv,mc,me,mk,mt,my,net,ng,nl,no,nz,paris,pl,pt,q-a,ro,ru,se,si,sk,tr,uk,us<familyds,fedorainfracloud,fedorapeople,fedoraproject>cloud,os>app<stg>os>app<<<freeddns,freedesktop,from-me,game-host,gotdns,hepforge,hk,hobby-site,homedns,homeftp,homelinux,homeunix,hopto,httpbin,in-dsl,in-vpn,is-a-bruinsfan,is-a-candidate,is-a-celticsfan,is-a-chef,is-a-geek,is-a-knight,is-a-linux-user,is-a-patsfan,is-a-soxfan,is-found,is-lost,is-saved,is-very-bad,is-very-evil,is-very-good,is-very-nice,is-very-sweet,isa-geek,js,kicks-ass,mayfirst,misconfused,mlbfan,mozilla-iot,my-firewall,myfirewall,myftp,mysecuritycamera,mywire,nflfan,no-ip,now-dns,pimienta,podzone,poivron,potager,pubtls,read-books,readmyblog,selfip,sellsyourhome,servebbs,serveftp,servegame,small-web,spdns,stuff-4-sale,sweetpepper,teckids>s3<toolforge,tunk,tuxfamily,twmail,ufcfan,us,webhop,webredirect,wmcloud,wmflabs,za,zapto|ovh>nerdpol|page>codeberg,hlx,hlx3,magnet,pdns,plesk,prvcy,rocky,translated|party>ybo|pe>blogspot|photos>framer|pictures>1337|pl>art,beep,co,ecommerce-shop,gda,gdansk,gdynia,gliwice,homesklep,krakow,krasnik,leczna,lubartow,lublin,med,myspreadshop,poniatowa,poznan,sdscloud,shoparena,simplesite,sopot,swidnik,unicloud,wroc,zakopane|place>co|pm>name,own|porn>indie|pro>barsy,cloudns,dnstrace>bci|pt>123paginaweb,blogspot|pub>barsy|pw>cloudns,x443|qa>blogspot|re>blogspot|review>ybo|rip>clan|ro>barsy,blogspot,co,shop|rocks>lima-city,myddns,webspace|rs>blogspot,brendly>shop<ox,ua|ru>123sait,ac,adygeya,bashkiria,bir,blogspot,cbg,cldmail>hb<com,dagestan,edu,eurodir,gov,grozny,int,kalmykia,kustanai,lk3,marine,mcdir>vps<mcpre,mil,mircloud,mordovia,msk,myjino>hosting>*<landing>*<spectrum>*<vps>*<<mytis,na4u,nalchik,net,nov,org,pp,pyatigorsk,ras,regruhosting>jelastic<spb,test,vladikavkaz,vladimir|run>build>*<code>*<database>*<development,hs,migration>*<onporter,ravendb,repl,servers|science>ybo|scot>edu,gov>service|se>123minsida,blogspot,com,conf,iopsys,itcouldbewor,myspreadshop,paba>su|services>loginline|sg>blogspot,enscaled|sh>bip,hashbang,now,platform>bc,ent,eu,us<vxl,wedeploy|shop>barsy,base,hoplix|si>blogspot,gitapp,gitpage|site>barsy,byen,cloudera>*<cyon,fastvps,fnwk,folionetwork,jele,lelux,loginline,mintere,novecore,omniwe,opensocial,platformsh>*<srht,tst>*|sk>blogspot|sn>blogspot|so>sch|solutions>diher>*|space>myfast,uber,xs4all|st>noho|store>sellfy,shopware,storebase|su>abkhazia,adygeya,aktyubinsk,arkhangelsk,armenia,ashgabad,azerbaijan,balashov,bashkiria,bryansk,bukhara,chimkent,dagestan,east-kazakhstan,exnet,georgia,grozny,ivanovo,jambyl,kalmykia,kaluga,karacol,karaganda,karelia,khakassia,krasnodar,kurgan,kustanai,lenug,mangyshlak,mordovia,msk,murmansk,nalchik,navoi,north-kazakhstan,nov,obninsk,penza,pokrovsk,sochi,spb,tashkent,termez,togliatti,troitsk,tselinograd,tula,tuva,vladikavkaz,vladimir,vologda|support>barsy|systems>knightpoint|tc>ch,me,we|td>blogspot|team>discourse,jelastic|technology>co|tf>sch|th>online,shop|tn>orangecloud|to>611,nyan,oya,quickconnect>direct<rdv,vpnplus|today>prequalifyme|top>now-dns,ntdll|tr>com>blogspot|trade>ybo|tv>better-than,dyndns,on-the-web,worse-than|tw>blogspot,com>mymailer<url|ua>biz,cc,co,cx,inf,ltd,pp,v|ug>blogspot|uk>barsy,co>adimo,barsy,barsyonline,blogspot,bytemark>dh,vm<layershift>j<myspreadshop,nh-serv,no-ip,retrosnub>cust<wellbeingzone<conn,copro,gov>api,campaign,homeoffice,service<hosp,independent-commission,independent-inquest,independent-inquiry,independent-panel,independent-review,org>affinitylottery,glug,lug,lugs,raffleentry,weeklylottery<public-inquiry,pymnt,royal-commission|us>cloudns,de>lib<drud,enscaled>phx<freeddns,golffan,graphox,is-by,land-4-sale,mircloud,noip,platterp,pointto,stuff-4-sale|uy>com>blogspot|vc>0e,gv>d|vg>at|vn>blogspot|vu>blog,cn,dev,me|website>framer|wf>biz,sch|wiki>framer|ws>advisor>*<cloud66,dyndns,mypets|xyz>blogsite,crafting,localzone,telebit>*<zapto|yt>org|za>co>blogspot|zone>cloud66,hs,lima,triton>*|\u0440\u0443\u0441>\u0431\u0438\u0437,\u043A\u043E\u043C,\u043A\u0440\u044B\u043C,\u043C\u0438\u0440,\u043C\u0441\u043A,\u043E\u0440\u0433,\u0441\u0430\u043C\u0430\u0440\u0430,\u0441\u043E\u0447\u0438,\u0441\u043F\u0431,\u044F" };
    });
    ht = C((Gr, pt) => {
      "use strict";
      l();
      var Bs = ga();
      pt.exports = Bs(mt().trie);
    });
    gt = C((fa) => {
      "use strict";
      l();
      function Ze(t) {
        return typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? Ze = function(a) {
          return typeof a;
        } : Ze = function(a) {
          return a && typeof Symbol == "function" && a.constructor === Symbol && a !== Symbol.prototype ? "symbol" : typeof a;
        }, Ze(t);
      }
      function Zs(t) {
        return !t || typeof t != "string" ? null : t.trim().toLowerCase();
      }
      function Vs(t) {
        var e = !t || Ze(t) !== "object" ? /* @__PURE__ */ Object.create(null) : t;
        return "privateTlds" in e || (e.privateTlds = false), "customTlds" in e && !(e.customTlds instanceof RegExp) && (e.customTlds = new RegExp("\\.(" + e.customTlds.join("|") + ")$")), e;
      }
      fa.url = Zs;
      fa.options = Vs;
    });
    yt = C((Qr, ft) => {
      "use strict";
      l();
      var ya = ha();
      function Fs(t, e) {
        for (var a = e.slice(), s = [], o = t; a.length; ) {
          var r = a.pop();
          if (o.children.has(ya.WILDCARD)) {
            if (o.children.has(ya.EXCEPTION + r))
              break;
            o = o.children.get(ya.WILDCARD);
          } else {
            if (o.children.has(r) === false)
              break;
            o = o.children.get(r);
          }
          s.unshift(r);
        }
        return s;
      }
      ft.exports = Fs;
    });
    ka = C((ei, vt) => {
      "use strict";
      l();
      var Ks = dt(), Xs = ht(), kt = gt(), bt = yt(), Js = /^(:?\/\/|https?:\/\/)?([^/]*@)?(.+?)(:\d{2,5})?([/?].*)?$/, Gs = /\./g, Ys = [];
      function Qs(t, e) {
        if (e.customTlds) {
          var a = t.match(e.customTlds);
          if (a !== null)
            return a[0];
        }
        var s = t.split("."), o = bt(Ks, s), r = e.privateTlds ? bt(Xs, s) : Ys;
        return r.length > o.length ? "." + r.join(".") : o.length > 0 ? "." + o.join(".") : null;
      }
      function eo(t, e) {
        var a = kt.url(t), s = null, o, r;
        if (!a)
          return null;
        var i = kt.options(e);
        if (o = a.match(Js), o === null || (r = o[3], s = Qs(r, i), s === null))
          return null;
        o = r.slice(0, -s.length).split(Gs), s.charAt(0) === "." && (s = s.slice(1)), r = o.pop();
        var n = o.join(".");
        return { tld: s, domain: r, subdomain: n };
      }
      vt.exports = eo;
    });
    wt = C((Ve) => {
      "use strict";
      l();
      Object.defineProperty(Ve, "__esModule", { value: true });
      Ve.parseDomainFromRequest = void 0;
      var ao = ka(), to = (t) => {
        let e = "", a = ao(t.hostname);
        return a && (e = `${a.domain}.${a.tld}`), Object.assign(Object.assign({}, a), { siteName: e });
      };
      Ve.parseDomainFromRequest = to;
    });
    xt = C((Fe) => {
      "use strict";
      l();
      Object.defineProperty(Fe, "__esModule", { value: true });
      Fe.makeBaseContainer = void 0;
      var so = pa(), oo = wt(), ro = (t, e) => {
        let { appName: a } = e, s = new URL(t.request.url), { siteName: o } = (0, oo.parseDomainFromRequest)(s);
        return { request: t.request, next: (r) => t.next(r), waitUntil: (r) => t.waitUntil(r), passThroughOnException: () => t.passThroughOnException(), logger: (0, so.Logger)(a, e.loggerEndpoint, e.loggerWhitelist, s), siteName: o, appName: a, requestUrl: s, cache: caches.default };
      };
      Fe.makeBaseContainer = ro;
    });
    ba = C((Ke) => {
      "use strict";
      l();
      Object.defineProperty(Ke, "__esModule", { value: true });
      Ke.urlHasSubdomain = void 0;
      var io = ka(), no = (t = "") => {
        let e = io(t);
        return Boolean(e?.subdomain);
      };
      Ke.urlHasSubdomain = no;
    });
    jt = C((O) => {
      "use strict";
      l();
      Object.defineProperty(O, "__esModule", { value: true });
      O.ensureSubdomain = O.makeUrl = O.defaultToHttps = O.defaultToProtocol = O.stripProtocol = void 0;
      var co = ba(), _t = new RegExp(/https?:\/\//i), lo = (t) => t.hostname.concat(t.pathname);
      O.stripProtocol = lo;
      var uo = (t, e) => `${e}://${t.replace(_t, "")}`, mo = (t, e) => _t.test(t) ? t : uo(t, e);
      O.defaultToProtocol = mo;
      var po = (t) => (0, O.defaultToProtocol)(t, "https");
      O.defaultToHttps = po;
      var ho = (t) => new URL((0, O.defaultToHttps)(t));
      O.makeUrl = ho;
      var go = (t) => {
        let e = (0, O.makeUrl)(t);
        return (0, co.urlHasSubdomain)(t) || (e.hostname = `www.${e.hostname}`), e;
      };
      O.ensureSubdomain = go;
    });
    ne = C((T) => {
      "use strict";
      l();
      Object.defineProperty(T, "__esModule", { value: true });
      T.urlHasSubdomain = T.makeUrl = T.renderDevelopmentMode = T.makeBaseContainer = T.Logger = T.Types = T.versionHash = T.isDev = T.getDevHeaders = T.devConfig = T.errorHandler = void 0;
      var fo = Qa();
      Object.defineProperty(T, "errorHandler", { enumerable: true, get: function() {
        return fo.errorHandler;
      } });
      var Xe = De();
      Object.defineProperty(T, "devConfig", { enumerable: true, get: function() {
        return Xe.devConfig;
      } });
      Object.defineProperty(T, "getDevHeaders", { enumerable: true, get: function() {
        return Xe.getDevHeaders;
      } });
      Object.defineProperty(T, "isDev", { enumerable: true, get: function() {
        return Xe.isDev;
      } });
      Object.defineProperty(T, "versionHash", { enumerable: true, get: function() {
        return Xe.versionHash;
      } });
      T.Types = at();
      var yo = pa();
      Object.defineProperty(T, "Logger", { enumerable: true, get: function() {
        return yo.Logger;
      } });
      var ko = xt();
      Object.defineProperty(T, "makeBaseContainer", { enumerable: true, get: function() {
        return ko.makeBaseContainer;
      } });
      var bo = da();
      Object.defineProperty(T, "renderDevelopmentMode", { enumerable: true, get: function() {
        return bo.renderDevelopmentMode;
      } });
      var vo = jt();
      Object.defineProperty(T, "makeUrl", { enumerable: true, get: function() {
        return vo.makeUrl;
      } });
      var wo = ba();
      Object.defineProperty(T, "urlHasSubdomain", { enumerable: true, get: function() {
        return wo.urlHasSubdomain;
      } });
    });
    l();
    l();
    na = me(ne());
    l();
    l();
    G = "proxyflare";
    Rt = `---${G}-acceptance`;
    H = { error: `x-${G}-error`, debug: { Running: `x-${G}`, VersionHash: `x-${G}-version-hash`, MatchedRoute: `x-${G}-matched-index`, MatchedPathname: `x-${G}-matched-pathname`, ProxiedPathname: `x-${G}-proxied-pathname`, ProxiedProtocol: `x-${G}-proxied-protocol` } };
    l();
    l();
    Ct = me(ne());
    l();
    Tt = me(ne());
    M = (t, e, a) => {
      let s = new Response(t, e);
      return Tt.isDev && Object.defineProperty(s, "url", { value: e.url || a || "" }), s;
    };
    va = (t, e, a) => {
      let s = new Headers(t.headers);
      return s.set(H.error, e), a?.global?.debug && (s.set(H.debug.VersionHash, Ct.versionHash), s.set(H.debug.Running, "running")), M(t.body, { ...t, headers: s });
    };
    l();
    wa = (t, e) => ({ ...t, cache: caches.default, installOptions: e, siteName: "" });
    l();
    l();
    St = me(ne());
    Et = new RegExp(/https?:\/\//i);
    jo = (t, e) => `${e}://${t.replace(Et, "")}`;
    zo = (t, e) => Et.test(t) ? t : jo(t, e);
    xa = (t) => zo(t, "https");
    Oe = (t) => new URL(xa(t));
    Je = (t) => {
      let e = Oe(t);
      return (0, St.urlHasSubdomain)(t) || (e.hostname = `www.${e.hostname}`), e;
    };
    Ge = (t, e = false) => ({ path: t.from.pathname, upstream: t.to ? { protocol: t.to.protocol, domain: t.to.hostname, port: t.to.port, pathname: t.to.pathname } : t.toR2Bucket ? { protocol: "https:", domain: `${t.toR2Bucket.accountId}.r2.cloudflarestorage.com`, pathname: t.toR2Bucket.bucketName } : null, headers: { request: t.requestHeaders, response: t.responseHeaders }, cors: t.cors, methods: t.methods, proxyflare: { match: t, debug: e } });
    _a = (t, e, a) => {
      let s = Ge({ ...a, from: e, to: e });
      return !!Ro(t, [s]);
    };
    Ro = (t, e) => {
      for (let a of e) {
        let s = new URL(t.url);
        if (a.methods === void 0 || Array.isArray(a.methods) && a.methods.length === 0 || a.methods.map((o) => o.toLowerCase()).includes(t.method.toLowerCase())) {
          let o = RegExp(`^${a.path.replace(/(\/?)\*/g, "($1.*)?").replace(/\/$/, "").replace(/:(\w+)(\?)?(\.)?/g, "$2(?<$1>[^/]+)$2$3").replace(/\.(?=[\w(])/, "\\.").replace(/\)\.\?\(([^[]+)\[\^/g, "?)\\.?($1(?<=\\.)[^\\.")}/*$`), r = false;
          if (Array.isArray(a.upstream))
            for (let i of a.upstream)
              s.hostname === i.domain && (r = true);
          if (!Array.isArray(a.upstream) && a.upstream && (a.proxyflare.match.alsoMatchWWWSubdomain ? [a.upstream.domain, Je(a.upstream.domain).hostname].some((i) => i === s.hostname) : a.upstream.domain === s.hostname) && (r = true), (r || a.upstream === null) && s.pathname.match(o))
            return a;
        }
      }
    };
    l();
    l();
    ja = (...t) => {
      let e = [...t];
      return { push: (...o) => {
        e.push(...o);
      }, execute: async (o) => {
        let r = async (i, n) => {
          if (n === i)
            throw new Error("next called multiple times");
          if (n >= e.length)
            return;
          await e[n](o, async () => r(n, n + 1));
        };
        return await r(-1, 0), o;
      } };
    };
    l();
    l();
    A = { Origin: "Access-Control-Allow-Origin", Methods: "Access-Control-Allow-Methods", RequestMethod: "Access-Control-Request-Method", RequestHeaders: "Access-Control-Request-Headers", ExposeHeaders: "Access-Control-Expose-Headers", AllowHeaders: "Access-Control-Allow-Headers", AllowCredentials: "Access-Control-Allow-Credentials", MaxAge: "Access-Control-Max-Age" };
    za = async (t, e) => {
      await e();
      let { request: a, response: s, route: o } = t, r = o.cors;
      if (r === void 0)
        return;
      let { origin: i, methods: n, exposedHeaders: c, allowedHeaders: u, credentials: p, maxAge: v } = r, z = a.headers.get("origin");
      if (z === null || i === false)
        return;
      let R = new Headers(s.headers);
      if (i === true ? R.set(A.Origin, z) : Array.isArray(i) ? i.includes(z) && R.set(A.Origin, z) : i === "*" && R.set(A.Origin, "*"), Array.isArray(n))
        R.set(A.Methods, n.join(","));
      else if (n === "*")
        R.set(A.Methods, "*");
      else {
        let B = a.headers.get(A.RequestMethod);
        B !== null && R.set(A.Methods, B);
      }
      if (Array.isArray(c) ? R.set(A.ExposeHeaders, c.join(",")) : c === "*" && R.set(A.ExposeHeaders, "*"), Array.isArray(u))
        R.set(A.AllowHeaders, u.join(","));
      else if (u === "*")
        R.set(A.AllowHeaders, "*");
      else {
        let B = a.headers.get(A.RequestHeaders);
        B !== null && R.set(A.AllowHeaders, B);
      }
      p === true && R.set(A.AllowCredentials, "true"), v !== void 0 && Number.isInteger(v) && R.set(A.MaxAge, v.toString()), t.response = M(s.body, { ...s, headers: R });
    };
    l();
    Ra = async (t, e) => {
      let { route: a } = t;
      await e();
      let { response: s } = t, o = new Headers(s.headers);
      a.proxyflare.debug && (o.set(H.debug.MatchedRoute, String(a.proxyflare.match._index)), o.set(H.debug.MatchedPathname, a.proxyflare.match.from.pathname), t.responseUrl && (o.set(H.debug.ProxiedProtocol, t.responseUrl.protocol), o.set(H.debug.ProxiedPathname, t.responseUrl.pathname))), t.response = M(s.body, { ...s, headers: o });
    };
    l();
    To = (t) => {
      t.set("X-Forwarded-Proto", "https");
      let e = t.get("Host");
      e !== null && t.set("X-Forwarded-Host", e);
      let a = t.get("cf-connecting-ip"), s = t.get("X-Forwarded-For");
      a !== null && s === null && t.set("X-Forwarded-For", a);
    };
    Ta = async (t, e) => {
      let { request: a, route: s } = t, o = new Headers(a.headers);
      if (To(o), s.headers === void 0) {
        t.request = new Request(a.url, { body: a.body, method: a.method, headers: o }), await e();
        return;
      }
      if (s.headers.request !== void 0)
        for (let [n, c] of Object.entries(s.headers.request))
          o.set(n, c);
      t.request = new Request(a.url, { body: a.body, method: a.method, headers: o, cf: void 0 }), await e();
      let { response: r } = t, i = new Headers(r.headers);
      if (s.headers.response !== void 0)
        for (let [n, c] of Object.entries(s.headers.response))
          n.toLowerCase() === "content-type" && s.proxyflare.match.toText || i.set(n, c);
      t.response = M(r.body, { ...r, headers: i });
    };
    l();
    Ht = (t) => {
      if (t.domain === void 0)
        throw new Error("Invalid 'upstream' field in the option object");
    };
    Co = (t, e) => {
      let s = (e.headers.get("cf-connecting-ip") || "0.0.0.0").split(".").map((o, r, i) => parseInt(o, 10) * 256 ** (i.length - r - 1)).reduce((o, r) => o + r);
      return t[s % t.length];
    };
    Pt = (t) => {
      let e = t.map((o) => o.weight === void 0 ? 1 : o.weight), a = e.reduce((o, r, i) => {
        let n = o + r;
        return e[i] = n, n;
      });
      if (a === 0)
        throw new Error("Total weights should be greater than 0.");
      let s = Math.random() * a;
      for (let o of e.keys())
        if (e[o] >= s)
          return t[o];
      return t[Math.floor(Math.random() * t.length)];
    };
    So = { random: Pt, "ip-hash": Co };
    Ca = async (t, e) => {
      let { request: a, route: s } = t, { upstream: o, loadBalancing: r } = s;
      if (o === null) {
        await e();
        return;
      } else {
        if (o === void 0)
          throw new Error("The required 'upstream' field in the option object is missing");
        Array.isArray(o) ? o.forEach(Ht) : Ht(o);
      }
      let i = Array.isArray(o) ? o : [o];
      if (r === void 0) {
        t.upstream = Pt(i, a), await e();
        return;
      }
      let n = r.policy || "random", c = So[n];
      t.upstream = c(i, a), await e();
    };
    l();
    l();
    Ea = new TextEncoder();
    Eo = { appstream2: "appstream", cloudhsmv2: "cloudhsm", email: "ses", marketplace: "aws-marketplace", mobile: "AWSMobileHubService", pinpoint: "mobiletargeting", queue: "sqs", "git-codecommit": "codecommit", "mturk-requester-sandbox": "mturk-requester", "personalize-runtime": "personalize" };
    Ho = /* @__PURE__ */ new Set(["authorization", "content-type", "content-length", "user-agent", "presigned-expires", "expect", "x-amzn-trace-id", "range", "connection"]);
    Ye = class {
      constructor({ accessKeyId: e, secretAccessKey: a, sessionToken: s, service: o, region: r, cache: i, retries: n, initRetryMs: c }) {
        if (e == null)
          throw new TypeError("accessKeyId is a required option");
        if (a == null)
          throw new TypeError("secretAccessKey is a required option");
        this.accessKeyId = e, this.secretAccessKey = a, this.sessionToken = s, this.service = o, this.region = r, this.cache = i || /* @__PURE__ */ new Map(), this.retries = n ?? 10, this.initRetryMs = c || 50;
      }
      async sign(e, a) {
        if (e instanceof Request) {
          let { method: r, url: i, headers: n, body: c } = e;
          a = Object.assign({ method: r, url: i, headers: n }, a), a.body == null && n.has("Content-Type") && (a.body = c != null && n.has("X-Amz-Content-Sha256") ? c : await e.clone().arrayBuffer()), e = i;
        }
        let s = new Ha(Object.assign({ url: e }, a, this, a && a.aws)), o = Object.assign({}, a, await s.sign());
        delete o.aws;
        try {
          return new Request(o.url.toString(), o);
        } catch (r) {
          if (r instanceof TypeError)
            return new Request(o.url.toString(), Object.assign({ duplex: "half" }, o));
          throw r;
        }
      }
      async fetch(e, a) {
        for (let s = 0; s <= this.retries; s++) {
          let o = fetch(await this.sign(e, a));
          if (s === this.retries)
            return o;
          let r = await o;
          if (r.status < 500 && r.status !== 429)
            return r;
          await new Promise((i) => setTimeout(i, Math.random() * this.initRetryMs * Math.pow(2, s)));
        }
        throw new Error("An unknown error occurred, ensure retries is not negative");
      }
    };
    Ha = class {
      constructor({ method: e, url: a, headers: s, body: o, accessKeyId: r, secretAccessKey: i, sessionToken: n, service: c, region: u, cache: p, datetime: v, signQuery: z, appendSessionToken: R, allHeaders: B, singleEncode: ca }) {
        if (a == null)
          throw new TypeError("url is a required option");
        if (r == null)
          throw new TypeError("accessKeyId is a required option");
        if (i == null)
          throw new TypeError("secretAccessKey is a required option");
        this.method = e || (o ? "POST" : "GET"), this.url = new URL(a), this.headers = new Headers(s || {}), this.body = o, this.accessKeyId = r, this.secretAccessKey = i, this.sessionToken = n;
        let Pe, Ka;
        (!c || !u) && ([Pe, Ka] = Po(this.url, this.headers)), this.service = c || Pe || "", this.region = u || Ka || "us-east-1", this.cache = p || /* @__PURE__ */ new Map(), this.datetime = v || new Date().toISOString().replace(/[:-]|\.\d{3}/g, ""), this.signQuery = z, this.appendSessionToken = R || this.service === "iotdevicegateway", this.headers.delete("Host"), this.service === "s3" && !this.signQuery && !this.headers.has("X-Amz-Content-Sha256") && this.headers.set("X-Amz-Content-Sha256", "UNSIGNED-PAYLOAD");
        let ie = this.signQuery ? this.url.searchParams : this.headers;
        if (ie.set("X-Amz-Date", this.datetime), this.sessionToken && !this.appendSessionToken && ie.set("X-Amz-Security-Token", this.sessionToken), this.signableHeaders = ["host", ...this.headers.keys()].filter((S) => B || !Ho.has(S)).sort(), this.signedHeaders = this.signableHeaders.join(";"), this.canonicalHeaders = this.signableHeaders.map((S) => S + ":" + (S === "host" ? this.url.host : (this.headers.get(S) || "").replace(/\s+/g, " "))).join(`
`), this.credentialString = [this.datetime.slice(0, 8), this.region, this.service, "aws4_request"].join("/"), this.signQuery && (this.service === "s3" && !ie.has("X-Amz-Expires") && ie.set("X-Amz-Expires", "86400"), ie.set("X-Amz-Algorithm", "AWS4-HMAC-SHA256"), ie.set("X-Amz-Credential", this.accessKeyId + "/" + this.credentialString), ie.set("X-Amz-SignedHeaders", this.signedHeaders)), this.service === "s3")
          try {
            this.encodedPath = decodeURIComponent(this.url.pathname.replace(/\+/g, " "));
          } catch {
            this.encodedPath = this.url.pathname;
          }
        else
          this.encodedPath = this.url.pathname.replace(/\/+/g, "/");
        ca || (this.encodedPath = encodeURIComponent(this.encodedPath).replace(/%2F/g, "/")), this.encodedPath = At(this.encodedPath);
        let Xa = /* @__PURE__ */ new Set();
        this.encodedSearch = [...this.url.searchParams].filter(([S]) => {
          if (!S)
            return false;
          if (this.service === "s3") {
            if (Xa.has(S))
              return false;
            Xa.add(S);
          }
          return true;
        }).map((S) => S.map((Le) => At(encodeURIComponent(Le)))).sort(([S, Le], [Ja, Ga]) => S < Ja ? -1 : S > Ja ? 1 : Le < Ga ? -1 : Le > Ga ? 1 : 0).map((S) => S.join("=")).join("&");
      }
      async sign() {
        return this.signQuery ? (this.url.searchParams.set("X-Amz-Signature", await this.signature()), this.sessionToken && this.appendSessionToken && this.url.searchParams.set("X-Amz-Security-Token", this.sessionToken)) : this.headers.set("Authorization", await this.authHeader()), { method: this.method, url: this.url, headers: this.headers, body: this.body };
      }
      async authHeader() {
        return ["AWS4-HMAC-SHA256 Credential=" + this.accessKeyId + "/" + this.credentialString, "SignedHeaders=" + this.signedHeaders, "Signature=" + await this.signature()].join(", ");
      }
      async signature() {
        let e = this.datetime.slice(0, 8), a = [this.secretAccessKey, e, this.region, this.service].join(), s = this.cache.get(a);
        if (!s) {
          let o = await Ae("AWS4" + this.secretAccessKey, e), r = await Ae(o, this.region), i = await Ae(r, this.service);
          s = await Ae(i, "aws4_request"), this.cache.set(a, s);
        }
        return Sa(await Ae(s, await this.stringToSign()));
      }
      async stringToSign() {
        return ["AWS4-HMAC-SHA256", this.datetime, this.credentialString, Sa(await Ot(await this.canonicalString()))].join(`
`);
      }
      async canonicalString() {
        return [this.method.toUpperCase(), this.encodedPath, this.encodedSearch, this.canonicalHeaders + `
`, this.signedHeaders, await this.hexBodyHash()].join(`
`);
      }
      async hexBodyHash() {
        let e = this.headers.get("X-Amz-Content-Sha256") || (this.service === "s3" && this.signQuery ? "UNSIGNED-PAYLOAD" : null);
        if (e == null) {
          if (this.body && typeof this.body != "string" && !("byteLength" in this.body))
            throw new Error("body must be a string, ArrayBuffer or ArrayBufferView, unless you include the X-Amz-Content-Sha256 header");
          e = Sa(await Ot(this.body || ""));
        }
        return e;
      }
    };
    l();
    he = (t) => t.proxyflare.match.cf?.options ? { cf: t.proxyflare.match.cf?.options } : void 0;
    l();
    ge = (t, e, a) => {
      let s = a ? a.hostname.includes(t) : true, o = null;
      return s && (o = e?.fetcher ? e.fetcher : null), { fetcher: o };
    };
    l();
    l();
    Oo = /\/$/;
    qt = /^\//;
    Ao = /\/?\*$/;
    qo = /([^/]{1})\*$/;
    Y = (t, e, a) => {
      let s = new URL(t), o = new URL(t), { domain: r, port: i, protocol: n } = a;
      o.hostname = r, n !== void 0 && (o.protocol = `${n}:`), o.port = i ?? "";
      let c = e.from.pathname.replace(Ao, ""), u = e?.stripFromPath ? o.pathname.replace(c, "") : o.pathname, p = qo.test(e.from.pathname), v = u.replace(qt, "") ? "/" : "";
      return p && (v = ""), o.pathname = [(a.pathname ?? "").replace(Oo, ""), u.replace(qt, "")].filter(Boolean).join(v), s.pathname.length > 1 && s.pathname.endsWith("/") && !o.pathname.endsWith("/") && (o.pathname += "/"), o;
    };
    l();
    Mo = (t = 3e4) => {
      let e = 0;
      return { timeoutFn: new Promise((s) => {
        e = setTimeout(() => {
          s(M("Request Timed Out", { status: 408 }));
        }, t);
      }), timeoutId: e };
    };
    fe = (t, e) => {
      let { timeoutFn: a, timeoutId: s } = Mo(e);
      return Promise.race([fetch(t.url, t).then((o) => (clearTimeout(s), o)), a]);
    };
    Pa = async (t, e) => {
      let { request: a, route: s, upstream: o, siteName: r, logger: i } = t;
      if (o === null || s.proxyflare.match.toR2Bucket === void 0) {
        await e();
        return;
      }
      let n = new Ye({ accessKeyId: s.proxyflare.match.toR2Bucket.accessKeyId, secretAccessKey: s.proxyflare.match.toR2Bucket.secretAccessKey });
      await i?.logText("Running R2Response...getURL", a.url, o.domain, o.pathname);
      let c = Y(a.url, s.proxyflare.match, o);
      await i?.logText("Running R2Response...getURL DONE", c.href), await i?.logText("Running R2Response...aws.sign");
      let u = await n.sign(c.href, { ...he(s), ...ge(r, a, c), method: a.method });
      await i?.logText("Running R2Response...aws.sign DONE", u.url), await i?.logText("Running R2Response...timeoutFetchAfter"), t.response = await fe(u, s.proxyflare.match.timeoutMs), await i?.logText("Running R2Response...timeoutFetchAfter DONE"), t.upstreamRequest = u, t.responseUrl = c, await e();
    };
    l();
    l();
    ce = class extends Error {
      constructor(e) {
        super(e), this.message = e;
      }
    };
    ce.prototype.name = "FetchError";
    Q = class extends Error {
      constructor(e) {
        super(e), this.message = e;
      }
    };
    Q.prototype.name = "ResourceNotFound";
    Oa = /* @__PURE__ */ new Map();
    Aa = async (t, e) => {
      let { request: a, siteName: s, upstream: o, route: r } = t;
      if (o === null) {
        await e();
        return;
      }
      let i = Y(a.url, r.proxyflare.match, o), n = i.pathname, c = Oa.get(n);
      if (c && c !== i.href)
        throw new Q(i.href);
      let u = new Request(i.href, { ...a, ...he(r), ...ge(s, a, i) });
      try {
        if (t.response = await fe(u, r.proxyflare.match.timeoutMs), !t.response.url.includes("example.com") && t.response.status >= 400)
          throw new Q(t.response.url);
        Oa.set(n, u.url);
      } catch (p) {
        throw Oa.delete(n), p instanceof Error && (p.name === "FetchError" || p.message?.toLowerCase() === "fetch failed") ? new ce(p.message) : p;
      } finally {
        await e();
      }
    };
    l();
    qa = async (t, e) => {
      let { request: a, route: s, upstream: o, logger: r, siteName: i } = t;
      if (o === null || !s.proxyflare.match.to) {
        await e();
        return;
      }
      let n = s.proxyflare.match.website === "spa" ? s.proxyflare.match.to : Y(a.url, s.proxyflare.match, o), c = new Request(n.href, { ...a, ...he(s), ...ge(i, a, n), method: a.method });
      await r?.logText(`upstream request: ${c.method} ${c.url}, fetcher: ${c.fetcher}, timeout: ${s.proxyflare.match.timeoutMs}`), t.response = await fe(c, s.proxyflare.match.timeoutMs), t.upstreamRequest = c, t.responseUrl = n, await r?.logText(`upstream response: ${t.response?.url} ${t.response?.status}`), await e();
    };
    l();
    Ma = async (t, e) => {
      let { route: a, logger: s, upstream: o } = t;
      if (o !== null || a.proxyflare.match.toText === void 0) {
        await e();
        return;
      }
      t.response = new Response(a.proxyflare.match.toText), t.upstreamRequest = null, t.responseUrl = null, await s?.logText(`text response: ${a.proxyflare.match.toText}`), await e();
    };
    Mt = () => [Ca, Ra, Ta, za];
    Nt = async (t, e) => {
      let { logger: a, request: s, requestUrl: o } = t, r = { request: s, route: e, hostname: o.hostname, response: new Response("Something broke in Proxyflare", { status: 500 }), upstream: null, responseUrl: null, upstreamRequest: null, siteName: t.siteName, logger: a }, i = ja(...Mt(), Pa, qa, Ma);
      try {
        await i.execute(r);
      } catch (n) {
        n instanceof Error && (r.response = M(`${n?.message} ${n?.stack}`, { status: 500 }));
      }
      return r.response ?? new Response("Not Found", { status: 404 });
    };
    It = async (t, e) => {
      let { logger: a, request: s, requestUrl: o } = t, r = [];
      for (let n of e) {
        let c = { request: s, route: n, hostname: o.hostname, responseUrl: null, response: new Response("Something broke in Proxyflare", { status: 500 }), upstream: null, upstreamRequest: null, siteName: t.siteName, logger: a }, u = ja(...Mt(), Aa, Ma);
        r.push(u.execute(c));
      }
      let i = new Response("Not Found", { status: 404 });
      try {
        let n = await Promise.any(r);
        n && (i = n.response);
      } catch (n) {
        if (n instanceof Error && !(n instanceof ce || n instanceof Q || n instanceof AggregateError))
          throw await a.logText("resource pipeline error", n.message, n?.stack), n;
      }
      return i;
    };
    l();
    Ut = me(ne());
    l();
    Qe = (t) => ({ element: function(e) {
      let a = new Headers();
      for (let s of Object.values(H.debug)) {
        let o = t.headers.get(s);
        o && a.set(s, o);
      }
      e.append(`<script>
        const headers = ${JSON.stringify(Object.fromEntries(a))}

        console.log(JSON.stringify(headers, null, 2))
      <\/script>`, { html: true });
    } });
    V = (t, e, a) => {
      let s = new Response(e, a);
      return t && (s.headers.set(H.debug.VersionHash, Ut.versionHash), s.headers.set(H.debug.Running, "running"), s.headers.get(H.debug.MatchedRoute) || s.headers.set(H.debug.MatchedRoute, "none"), s.headers.get("content-type")?.includes("text/html") && (s = new HTMLRewriter().on("body", Qe(s)).transform(s))), M(s.body, s, a.url);
    };
    l();
    l();
    (function(t) {
      t.assertEqual = (o) => o;
      function e(o) {
      }
      t.assertIs = e;
      function a(o) {
        throw new Error();
      }
      t.assertNever = a, t.arrayToEnum = (o) => {
        let r = {};
        for (let i of o)
          r[i] = i;
        return r;
      }, t.getValidEnumValues = (o) => {
        let r = t.objectKeys(o).filter((n) => typeof o[o[n]] != "number"), i = {};
        for (let n of r)
          i[n] = o[n];
        return t.objectValues(i);
      }, t.objectValues = (o) => t.objectKeys(o).map(function(r) {
        return o[r];
      }), t.objectKeys = typeof Object.keys == "function" ? (o) => Object.keys(o) : (o) => {
        let r = [];
        for (let i in o)
          Object.prototype.hasOwnProperty.call(o, i) && r.push(i);
        return r;
      }, t.find = (o, r) => {
        for (let i of o)
          if (r(i))
            return i;
      }, t.isInteger = typeof Number.isInteger == "function" ? (o) => Number.isInteger(o) : (o) => typeof o == "number" && isFinite(o) && Math.floor(o) === o;
      function s(o, r = " | ") {
        return o.map((i) => typeof i == "string" ? `'${i}'` : i).join(r);
      }
      t.joinValues = s, t.jsonStringifyReplacer = (o, r) => typeof r == "bigint" ? r.toString() : r;
    })(_ || (_ = {}));
    h = _.arrayToEnum(["string", "nan", "number", "integer", "float", "boolean", "date", "bigint", "symbol", "function", "undefined", "null", "array", "object", "unknown", "promise", "void", "never", "map", "set"]);
    ee = (t) => {
      switch (typeof t) {
        case "undefined":
          return h.undefined;
        case "string":
          return h.string;
        case "number":
          return isNaN(t) ? h.nan : h.number;
        case "boolean":
          return h.boolean;
        case "function":
          return h.function;
        case "bigint":
          return h.bigint;
        case "object":
          return Array.isArray(t) ? h.array : t === null ? h.null : t.then && typeof t.then == "function" && t.catch && typeof t.catch == "function" ? h.promise : typeof Map < "u" && t instanceof Map ? h.map : typeof Set < "u" && t instanceof Set ? h.set : typeof Date < "u" && t instanceof Date ? h.date : h.object;
        default:
          return h.unknown;
      }
    };
    m = _.arrayToEnum(["invalid_type", "invalid_literal", "custom", "invalid_union", "invalid_union_discriminator", "invalid_enum_value", "unrecognized_keys", "invalid_arguments", "invalid_return_type", "invalid_date", "invalid_string", "too_small", "too_big", "invalid_intersection_types", "not_multiple_of"]);
    No = (t) => JSON.stringify(t, null, 2).replace(/"([^"]+)":/g, "$1:");
    N = class extends Error {
      constructor(e) {
        super(), this.issues = [], this.addIssue = (s) => {
          this.issues = [...this.issues, s];
        }, this.addIssues = (s = []) => {
          this.issues = [...this.issues, ...s];
        };
        let a = new.target.prototype;
        Object.setPrototypeOf ? Object.setPrototypeOf(this, a) : this.__proto__ = a, this.name = "ZodError", this.issues = e;
      }
      get errors() {
        return this.issues;
      }
      format(e) {
        let a = e || function(r) {
          return r.message;
        }, s = { _errors: [] }, o = (r) => {
          for (let i of r.issues)
            if (i.code === "invalid_union")
              i.unionErrors.map(o);
            else if (i.code === "invalid_return_type")
              o(i.returnTypeError);
            else if (i.code === "invalid_arguments")
              o(i.argumentsError);
            else if (i.path.length === 0)
              s._errors.push(a(i));
            else {
              let n = s, c = 0;
              for (; c < i.path.length; ) {
                let u = i.path[c];
                c === i.path.length - 1 ? (n[u] = n[u] || { _errors: [] }, n[u]._errors.push(a(i))) : n[u] = n[u] || { _errors: [] }, n = n[u], c++;
              }
            }
        };
        return o(this), s;
      }
      toString() {
        return this.message;
      }
      get message() {
        return JSON.stringify(this.issues, _.jsonStringifyReplacer, 2);
      }
      get isEmpty() {
        return this.issues.length === 0;
      }
      flatten(e = (a) => a.message) {
        let a = {}, s = [];
        for (let o of this.issues)
          o.path.length > 0 ? (a[o.path[0]] = a[o.path[0]] || [], a[o.path[0]].push(e(o))) : s.push(e(o));
        return { formErrors: s, fieldErrors: a };
      }
      get formErrors() {
        return this.flatten();
      }
    };
    N.create = (t) => new N(t);
    qe = (t, e) => {
      let a;
      switch (t.code) {
        case m.invalid_type:
          t.received === h.undefined ? a = "Required" : a = `Expected ${t.expected}, received ${t.received}`;
          break;
        case m.invalid_literal:
          a = `Invalid literal value, expected ${JSON.stringify(t.expected, _.jsonStringifyReplacer)}`;
          break;
        case m.unrecognized_keys:
          a = `Unrecognized key(s) in object: ${_.joinValues(t.keys, ", ")}`;
          break;
        case m.invalid_union:
          a = "Invalid input";
          break;
        case m.invalid_union_discriminator:
          a = `Invalid discriminator value. Expected ${_.joinValues(t.options)}`;
          break;
        case m.invalid_enum_value:
          a = `Invalid enum value. Expected ${_.joinValues(t.options)}, received '${t.received}'`;
          break;
        case m.invalid_arguments:
          a = "Invalid function arguments";
          break;
        case m.invalid_return_type:
          a = "Invalid function return type";
          break;
        case m.invalid_date:
          a = "Invalid date";
          break;
        case m.invalid_string:
          typeof t.validation == "object" ? "startsWith" in t.validation ? a = `Invalid input: must start with "${t.validation.startsWith}"` : "endsWith" in t.validation ? a = `Invalid input: must end with "${t.validation.endsWith}"` : _.assertNever(t.validation) : t.validation !== "regex" ? a = `Invalid ${t.validation}` : a = "Invalid";
          break;
        case m.too_small:
          t.type === "array" ? a = `Array must contain ${t.inclusive ? "at least" : "more than"} ${t.minimum} element(s)` : t.type === "string" ? a = `String must contain ${t.inclusive ? "at least" : "over"} ${t.minimum} character(s)` : t.type === "number" ? a = `Number must be greater than ${t.inclusive ? "or equal to " : ""}${t.minimum}` : t.type === "date" ? a = `Date must be greater than ${t.inclusive ? "or equal to " : ""}${new Date(t.minimum)}` : a = "Invalid input";
          break;
        case m.too_big:
          t.type === "array" ? a = `Array must contain ${t.inclusive ? "at most" : "less than"} ${t.maximum} element(s)` : t.type === "string" ? a = `String must contain ${t.inclusive ? "at most" : "under"} ${t.maximum} character(s)` : t.type === "number" ? a = `Number must be less than ${t.inclusive ? "or equal to " : ""}${t.maximum}` : t.type === "date" ? a = `Date must be smaller than ${t.inclusive ? "or equal to " : ""}${new Date(t.maximum)}` : a = "Invalid input";
          break;
        case m.custom:
          a = "Invalid input";
          break;
        case m.invalid_intersection_types:
          a = "Intersection results could not be merged";
          break;
        case m.not_multiple_of:
          a = `Number must be a multiple of ${t.multipleOf}`;
          break;
        default:
          a = e.defaultError, _.assertNever(t);
      }
      return { message: a };
    };
    Wt = qe;
    aa = (t) => {
      let { data: e, path: a, errorMaps: s, issueData: o } = t, r = [...a, ...o.path || []], i = { ...o, path: r }, n = "", c = s.filter((u) => !!u).slice().reverse();
      for (let u of c)
        n = u(i, { data: e, defaultError: n }).message;
      return { ...o, path: r, message: o.message || n };
    };
    Uo = [];
    E = class {
      constructor() {
        this.value = "valid";
      }
      dirty() {
        this.value === "valid" && (this.value = "dirty");
      }
      abort() {
        this.value !== "aborted" && (this.value = "aborted");
      }
      static mergeArray(e, a) {
        let s = [];
        for (let o of a) {
          if (o.status === "aborted")
            return k;
          o.status === "dirty" && e.dirty(), s.push(o.value);
        }
        return { status: e.value, value: s };
      }
      static async mergeObjectAsync(e, a) {
        let s = [];
        for (let o of a)
          s.push({ key: await o.key, value: await o.value });
        return E.mergeObjectSync(e, s);
      }
      static mergeObjectSync(e, a) {
        let s = {};
        for (let o of a) {
          let { key: r, value: i } = o;
          if (r.status === "aborted" || i.status === "aborted")
            return k;
          r.status === "dirty" && e.dirty(), i.status === "dirty" && e.dirty(), (typeof i.value < "u" || o.alwaysSet) && (s[r.value] = i.value);
        }
        return { status: e.value, value: s };
      }
    };
    k = Object.freeze({ status: "aborted" });
    Lo = (t) => ({ status: "dirty", value: t });
    q = (t) => ({ status: "valid", value: t });
    Na = (t) => t.status === "aborted";
    Ia = (t) => t.status === "dirty";
    ta = (t) => t.status === "valid";
    Ua = (t) => typeof Promise !== void 0 && t instanceof Promise;
    (function(t) {
      t.errToObj = (e) => typeof e == "string" ? { message: e } : e || {}, t.toString = (e) => typeof e == "string" ? e : e?.message;
    })(x || (x = {}));
    U = class {
      constructor(e, a, s, o) {
        this.parent = e, this.data = a, this._path = s, this._key = o;
      }
      get path() {
        return this._path.concat(this._key);
      }
    };
    Lt = (t, e) => {
      if (ta(e))
        return { success: true, data: e.value };
      {
        if (!t.common.issues.length)
          throw new Error("Validation failed but no issues detected.");
        let a = new N(t.common.issues);
        return { success: false, error: a };
      }
    };
    b = class {
      constructor(e) {
        this.spa = this.safeParseAsync, this.superRefine = this._refinement, this._def = e, this.parse = this.parse.bind(this), this.safeParse = this.safeParse.bind(this), this.parseAsync = this.parseAsync.bind(this), this.safeParseAsync = this.safeParseAsync.bind(this), this.spa = this.spa.bind(this), this.refine = this.refine.bind(this), this.refinement = this.refinement.bind(this), this.superRefine = this.superRefine.bind(this), this.optional = this.optional.bind(this), this.nullable = this.nullable.bind(this), this.nullish = this.nullish.bind(this), this.array = this.array.bind(this), this.promise = this.promise.bind(this), this.or = this.or.bind(this), this.and = this.and.bind(this), this.transform = this.transform.bind(this), this.default = this.default.bind(this), this.describe = this.describe.bind(this), this.isNullable = this.isNullable.bind(this), this.isOptional = this.isOptional.bind(this);
      }
      get description() {
        return this._def.description;
      }
      _getType(e) {
        return ee(e.data);
      }
      _getOrReturnCtx(e, a) {
        return a || { common: e.parent.common, data: e.data, parsedType: ee(e.data), schemaErrorMap: this._def.errorMap, path: e.path, parent: e.parent };
      }
      _processInputParams(e) {
        return { status: new E(), ctx: { common: e.parent.common, data: e.data, parsedType: ee(e.data), schemaErrorMap: this._def.errorMap, path: e.path, parent: e.parent } };
      }
      _parseSync(e) {
        let a = this._parse(e);
        if (Ua(a))
          throw new Error("Synchronous parse encountered promise.");
        return a;
      }
      _parseAsync(e) {
        let a = this._parse(e);
        return Promise.resolve(a);
      }
      parse(e, a) {
        let s = this.safeParse(e, a);
        if (s.success)
          return s.data;
        throw s.error;
      }
      safeParse(e, a) {
        var s;
        let o = { common: { issues: [], async: (s = a?.async) !== null && s !== void 0 ? s : false, contextualErrorMap: a?.errorMap }, path: a?.path || [], schemaErrorMap: this._def.errorMap, parent: null, data: e, parsedType: ee(e) }, r = this._parseSync({ data: e, path: o.path, parent: o });
        return Lt(o, r);
      }
      async parseAsync(e, a) {
        let s = await this.safeParseAsync(e, a);
        if (s.success)
          return s.data;
        throw s.error;
      }
      async safeParseAsync(e, a) {
        let s = { common: { issues: [], contextualErrorMap: a?.errorMap, async: true }, path: a?.path || [], schemaErrorMap: this._def.errorMap, parent: null, data: e, parsedType: ee(e) }, o = this._parse({ data: e, path: [], parent: s }), r = await (Ua(o) ? o : Promise.resolve(o));
        return Lt(s, r);
      }
      refine(e, a) {
        let s = (o) => typeof a == "string" || typeof a > "u" ? { message: a } : typeof a == "function" ? a(o) : a;
        return this._refinement((o, r) => {
          let i = e(o), n = () => r.addIssue({ code: m.custom, ...s(o) });
          return typeof Promise < "u" && i instanceof Promise ? i.then((c) => c ? true : (n(), false)) : i ? true : (n(), false);
        });
      }
      refinement(e, a) {
        return this._refinement((s, o) => e(s) ? true : (o.addIssue(typeof a == "function" ? a(s, o) : a), false));
      }
      _refinement(e) {
        return new $({ schema: this, typeName: y.ZodEffects, effect: { type: "refinement", refinement: e } });
      }
      optional() {
        return I.create(this);
      }
      nullable() {
        return J.create(this);
      }
      nullish() {
        return this.optional().nullable();
      }
      array() {
        return L.create(this);
      }
      promise() {
        return oe.create(this);
      }
      or(e) {
        return le.create([this, e]);
      }
      and(e) {
        return ue.create(this, e);
      }
      transform(e) {
        return new $({ schema: this, typeName: y.ZodEffects, effect: { type: "transform", transform: e } });
      }
      default(e) {
        let a = typeof e == "function" ? e : () => e;
        return new Me({ innerType: this, defaultValue: a, typeName: y.ZodDefault });
      }
      brand() {
        return new oa({ typeName: y.ZodBranded, type: this, ...w(void 0) });
      }
      describe(e) {
        let a = this.constructor;
        return new a({ ...this._def, description: e });
      }
      isOptional() {
        return this.safeParse(void 0).success;
      }
      isNullable() {
        return this.safeParse(null).success;
      }
    };
    Do = /^c[^\s-]{8,}$/i;
    $o = /^([a-f0-9]{8}-[a-f0-9]{4}-[1-5][a-f0-9]{3}-[a-f0-9]{4}-[a-f0-9]{12}|00000000-0000-0000-0000-000000000000)$/i;
    Wo = /^(([^<>()[\]\.,;:\s@\"]+(\.[^<>()[\]\.,;:\s@\"]+)*)|(\".+\"))@(([^<>()[\]\.,;:\s@\"]+\.)+[^<>()[\]\.,;:\s@\"]{2,})$/i;
    Z = class extends b {
      constructor() {
        super(...arguments), this._regex = (e, a, s) => this.refinement((o) => e.test(o), { validation: a, code: m.invalid_string, ...x.errToObj(s) }), this.nonempty = (e) => this.min(1, x.errToObj(e)), this.trim = () => new Z({ ...this._def, checks: [...this._def.checks, { kind: "trim" }] });
      }
      _parse(e) {
        if (this._getType(e) !== h.string) {
          let r = this._getOrReturnCtx(e);
          return f(r, { code: m.invalid_type, expected: h.string, received: r.parsedType }), k;
        }
        let s = new E(), o;
        for (let r of this._def.checks)
          if (r.kind === "min")
            e.data.length < r.value && (o = this._getOrReturnCtx(e, o), f(o, { code: m.too_small, minimum: r.value, type: "string", inclusive: true, message: r.message }), s.dirty());
          else if (r.kind === "max")
            e.data.length > r.value && (o = this._getOrReturnCtx(e, o), f(o, { code: m.too_big, maximum: r.value, type: "string", inclusive: true, message: r.message }), s.dirty());
          else if (r.kind === "email")
            Wo.test(e.data) || (o = this._getOrReturnCtx(e, o), f(o, { validation: "email", code: m.invalid_string, message: r.message }), s.dirty());
          else if (r.kind === "uuid")
            $o.test(e.data) || (o = this._getOrReturnCtx(e, o), f(o, { validation: "uuid", code: m.invalid_string, message: r.message }), s.dirty());
          else if (r.kind === "cuid")
            Do.test(e.data) || (o = this._getOrReturnCtx(e, o), f(o, { validation: "cuid", code: m.invalid_string, message: r.message }), s.dirty());
          else if (r.kind === "url")
            try {
              new URL(e.data);
            } catch {
              o = this._getOrReturnCtx(e, o), f(o, { validation: "url", code: m.invalid_string, message: r.message }), s.dirty();
            }
          else
            r.kind === "regex" ? (r.regex.lastIndex = 0, r.regex.test(e.data) || (o = this._getOrReturnCtx(e, o), f(o, { validation: "regex", code: m.invalid_string, message: r.message }), s.dirty())) : r.kind === "trim" ? e.data = e.data.trim() : r.kind === "startsWith" ? e.data.startsWith(r.value) || (o = this._getOrReturnCtx(e, o), f(o, { code: m.invalid_string, validation: { startsWith: r.value }, message: r.message }), s.dirty()) : r.kind === "endsWith" ? e.data.endsWith(r.value) || (o = this._getOrReturnCtx(e, o), f(o, { code: m.invalid_string, validation: { endsWith: r.value }, message: r.message }), s.dirty()) : _.assertNever(r);
        return { status: s.value, value: e.data };
      }
      _addCheck(e) {
        return new Z({ ...this._def, checks: [...this._def.checks, e] });
      }
      email(e) {
        return this._addCheck({ kind: "email", ...x.errToObj(e) });
      }
      url(e) {
        return this._addCheck({ kind: "url", ...x.errToObj(e) });
      }
      uuid(e) {
        return this._addCheck({ kind: "uuid", ...x.errToObj(e) });
      }
      cuid(e) {
        return this._addCheck({ kind: "cuid", ...x.errToObj(e) });
      }
      regex(e, a) {
        return this._addCheck({ kind: "regex", regex: e, ...x.errToObj(a) });
      }
      startsWith(e, a) {
        return this._addCheck({ kind: "startsWith", value: e, ...x.errToObj(a) });
      }
      endsWith(e, a) {
        return this._addCheck({ kind: "endsWith", value: e, ...x.errToObj(a) });
      }
      min(e, a) {
        return this._addCheck({ kind: "min", value: e, ...x.errToObj(a) });
      }
      max(e, a) {
        return this._addCheck({ kind: "max", value: e, ...x.errToObj(a) });
      }
      length(e, a) {
        return this.min(e, a).max(e, a);
      }
      get isEmail() {
        return !!this._def.checks.find((e) => e.kind === "email");
      }
      get isURL() {
        return !!this._def.checks.find((e) => e.kind === "url");
      }
      get isUUID() {
        return !!this._def.checks.find((e) => e.kind === "uuid");
      }
      get isCUID() {
        return !!this._def.checks.find((e) => e.kind === "cuid");
      }
      get minLength() {
        let e = null;
        for (let a of this._def.checks)
          a.kind === "min" && (e === null || a.value > e) && (e = a.value);
        return e;
      }
      get maxLength() {
        let e = null;
        for (let a of this._def.checks)
          a.kind === "max" && (e === null || a.value < e) && (e = a.value);
        return e;
      }
    };
    Z.create = (t) => new Z({ checks: [], typeName: y.ZodString, ...w(t) });
    K = class extends b {
      constructor() {
        super(...arguments), this.min = this.gte, this.max = this.lte, this.step = this.multipleOf;
      }
      _parse(e) {
        if (this._getType(e) !== h.number) {
          let r = this._getOrReturnCtx(e);
          return f(r, { code: m.invalid_type, expected: h.number, received: r.parsedType }), k;
        }
        let s, o = new E();
        for (let r of this._def.checks)
          r.kind === "int" ? _.isInteger(e.data) || (s = this._getOrReturnCtx(e, s), f(s, { code: m.invalid_type, expected: "integer", received: "float", message: r.message }), o.dirty()) : r.kind === "min" ? (r.inclusive ? e.data < r.value : e.data <= r.value) && (s = this._getOrReturnCtx(e, s), f(s, { code: m.too_small, minimum: r.value, type: "number", inclusive: r.inclusive, message: r.message }), o.dirty()) : r.kind === "max" ? (r.inclusive ? e.data > r.value : e.data >= r.value) && (s = this._getOrReturnCtx(e, s), f(s, { code: m.too_big, maximum: r.value, type: "number", inclusive: r.inclusive, message: r.message }), o.dirty()) : r.kind === "multipleOf" ? Bo(e.data, r.value) !== 0 && (s = this._getOrReturnCtx(e, s), f(s, { code: m.not_multiple_of, multipleOf: r.value, message: r.message }), o.dirty()) : _.assertNever(r);
        return { status: o.value, value: e.data };
      }
      gte(e, a) {
        return this.setLimit("min", e, true, x.toString(a));
      }
      gt(e, a) {
        return this.setLimit("min", e, false, x.toString(a));
      }
      lte(e, a) {
        return this.setLimit("max", e, true, x.toString(a));
      }
      lt(e, a) {
        return this.setLimit("max", e, false, x.toString(a));
      }
      setLimit(e, a, s, o) {
        return new K({ ...this._def, checks: [...this._def.checks, { kind: e, value: a, inclusive: s, message: x.toString(o) }] });
      }
      _addCheck(e) {
        return new K({ ...this._def, checks: [...this._def.checks, e] });
      }
      int(e) {
        return this._addCheck({ kind: "int", message: x.toString(e) });
      }
      positive(e) {
        return this._addCheck({ kind: "min", value: 0, inclusive: false, message: x.toString(e) });
      }
      negative(e) {
        return this._addCheck({ kind: "max", value: 0, inclusive: false, message: x.toString(e) });
      }
      nonpositive(e) {
        return this._addCheck({ kind: "max", value: 0, inclusive: true, message: x.toString(e) });
      }
      nonnegative(e) {
        return this._addCheck({ kind: "min", value: 0, inclusive: true, message: x.toString(e) });
      }
      multipleOf(e, a) {
        return this._addCheck({ kind: "multipleOf", value: e, message: x.toString(a) });
      }
      get minValue() {
        let e = null;
        for (let a of this._def.checks)
          a.kind === "min" && (e === null || a.value > e) && (e = a.value);
        return e;
      }
      get maxValue() {
        let e = null;
        for (let a of this._def.checks)
          a.kind === "max" && (e === null || a.value < e) && (e = a.value);
        return e;
      }
      get isInt() {
        return !!this._def.checks.find((e) => e.kind === "int");
      }
    };
    K.create = (t) => new K({ checks: [], typeName: y.ZodNumber, ...w(t) });
    ke = class extends b {
      _parse(e) {
        if (this._getType(e) !== h.bigint) {
          let s = this._getOrReturnCtx(e);
          return f(s, { code: m.invalid_type, expected: h.bigint, received: s.parsedType }), k;
        }
        return q(e.data);
      }
    };
    ke.create = (t) => new ke({ typeName: y.ZodBigInt, ...w(t) });
    be = class extends b {
      _parse(e) {
        if (this._getType(e) !== h.boolean) {
          let s = this._getOrReturnCtx(e);
          return f(s, { code: m.invalid_type, expected: h.boolean, received: s.parsedType }), k;
        }
        return q(e.data);
      }
    };
    be.create = (t) => new be({ typeName: y.ZodBoolean, ...w(t) });
    te = class extends b {
      _parse(e) {
        if (this._getType(e) !== h.date) {
          let r = this._getOrReturnCtx(e);
          return f(r, { code: m.invalid_type, expected: h.date, received: r.parsedType }), k;
        }
        if (isNaN(e.data.getTime())) {
          let r = this._getOrReturnCtx(e);
          return f(r, { code: m.invalid_date }), k;
        }
        let s = new E(), o;
        for (let r of this._def.checks)
          r.kind === "min" ? e.data.getTime() < r.value && (o = this._getOrReturnCtx(e, o), f(o, { code: m.too_small, message: r.message, inclusive: true, minimum: r.value, type: "date" }), s.dirty()) : r.kind === "max" ? e.data.getTime() > r.value && (o = this._getOrReturnCtx(e, o), f(o, { code: m.too_big, message: r.message, inclusive: true, maximum: r.value, type: "date" }), s.dirty()) : _.assertNever(r);
        return { status: s.value, value: new Date(e.data.getTime()) };
      }
      _addCheck(e) {
        return new te({ ...this._def, checks: [...this._def.checks, e] });
      }
      min(e, a) {
        return this._addCheck({ kind: "min", value: e.getTime(), message: x.toString(a) });
      }
      max(e, a) {
        return this._addCheck({ kind: "max", value: e.getTime(), message: x.toString(a) });
      }
      get minDate() {
        let e = null;
        for (let a of this._def.checks)
          a.kind === "min" && (e === null || a.value > e) && (e = a.value);
        return e != null ? new Date(e) : null;
      }
      get maxDate() {
        let e = null;
        for (let a of this._def.checks)
          a.kind === "max" && (e === null || a.value < e) && (e = a.value);
        return e != null ? new Date(e) : null;
      }
    };
    te.create = (t) => new te({ checks: [], typeName: y.ZodDate, ...w(t) });
    ve = class extends b {
      _parse(e) {
        if (this._getType(e) !== h.undefined) {
          let s = this._getOrReturnCtx(e);
          return f(s, { code: m.invalid_type, expected: h.undefined, received: s.parsedType }), k;
        }
        return q(e.data);
      }
    };
    ve.create = (t) => new ve({ typeName: y.ZodUndefined, ...w(t) });
    we = class extends b {
      _parse(e) {
        if (this._getType(e) !== h.null) {
          let s = this._getOrReturnCtx(e);
          return f(s, { code: m.invalid_type, expected: h.null, received: s.parsedType }), k;
        }
        return q(e.data);
      }
    };
    we.create = (t) => new we({ typeName: y.ZodNull, ...w(t) });
    se = class extends b {
      constructor() {
        super(...arguments), this._any = true;
      }
      _parse(e) {
        return q(e.data);
      }
    };
    se.create = (t) => new se({ typeName: y.ZodAny, ...w(t) });
    F = class extends b {
      constructor() {
        super(...arguments), this._unknown = true;
      }
      _parse(e) {
        return q(e.data);
      }
    };
    F.create = (t) => new F({ typeName: y.ZodUnknown, ...w(t) });
    W = class extends b {
      _parse(e) {
        let a = this._getOrReturnCtx(e);
        return f(a, { code: m.invalid_type, expected: h.never, received: a.parsedType }), k;
      }
    };
    W.create = (t) => new W({ typeName: y.ZodNever, ...w(t) });
    xe = class extends b {
      _parse(e) {
        if (this._getType(e) !== h.undefined) {
          let s = this._getOrReturnCtx(e);
          return f(s, { code: m.invalid_type, expected: h.void, received: s.parsedType }), k;
        }
        return q(e.data);
      }
    };
    xe.create = (t) => new xe({ typeName: y.ZodVoid, ...w(t) });
    L = class extends b {
      _parse(e) {
        let { ctx: a, status: s } = this._processInputParams(e), o = this._def;
        if (a.parsedType !== h.array)
          return f(a, { code: m.invalid_type, expected: h.array, received: a.parsedType }), k;
        if (o.minLength !== null && a.data.length < o.minLength.value && (f(a, { code: m.too_small, minimum: o.minLength.value, type: "array", inclusive: true, message: o.minLength.message }), s.dirty()), o.maxLength !== null && a.data.length > o.maxLength.value && (f(a, { code: m.too_big, maximum: o.maxLength.value, type: "array", inclusive: true, message: o.maxLength.message }), s.dirty()), a.common.async)
          return Promise.all(a.data.map((i, n) => o.type._parseAsync(new U(a, i, a.path, n)))).then((i) => E.mergeArray(s, i));
        let r = a.data.map((i, n) => o.type._parseSync(new U(a, i, a.path, n)));
        return E.mergeArray(s, r);
      }
      get element() {
        return this._def.type;
      }
      min(e, a) {
        return new L({ ...this._def, minLength: { value: e, message: x.toString(a) } });
      }
      max(e, a) {
        return new L({ ...this._def, maxLength: { value: e, message: x.toString(a) } });
      }
      length(e, a) {
        return this.min(e, a).max(e, a);
      }
      nonempty(e) {
        return this.min(1, e);
      }
    };
    L.create = (t, e) => new L({ type: t, minLength: null, maxLength: null, typeName: y.ZodArray, ...w(e) });
    (function(t) {
      t.mergeShapes = (e, a) => ({ ...e, ...a });
    })(sa || (sa = {}));
    Dt = (t) => (e) => new j({ ...t, shape: () => ({ ...t.shape(), ...e }) });
    j = class extends b {
      constructor() {
        super(...arguments), this._cached = null, this.nonstrict = this.passthrough, this.augment = Dt(this._def), this.extend = Dt(this._def);
      }
      _getCached() {
        if (this._cached !== null)
          return this._cached;
        let e = this._def.shape(), a = _.objectKeys(e);
        return this._cached = { shape: e, keys: a };
      }
      _parse(e) {
        if (this._getType(e) !== h.object) {
          let u = this._getOrReturnCtx(e);
          return f(u, { code: m.invalid_type, expected: h.object, received: u.parsedType }), k;
        }
        let { status: s, ctx: o } = this._processInputParams(e), { shape: r, keys: i } = this._getCached(), n = [];
        if (!(this._def.catchall instanceof W && this._def.unknownKeys === "strip"))
          for (let u in o.data)
            i.includes(u) || n.push(u);
        let c = [];
        for (let u of i) {
          let p = r[u], v = o.data[u];
          c.push({ key: { status: "valid", value: u }, value: p._parse(new U(o, v, o.path, u)), alwaysSet: u in o.data });
        }
        if (this._def.catchall instanceof W) {
          let u = this._def.unknownKeys;
          if (u === "passthrough")
            for (let p of n)
              c.push({ key: { status: "valid", value: p }, value: { status: "valid", value: o.data[p] } });
          else if (u === "strict")
            n.length > 0 && (f(o, { code: m.unrecognized_keys, keys: n }), s.dirty());
          else if (u !== "strip")
            throw new Error("Internal ZodObject error: invalid unknownKeys value.");
        } else {
          let u = this._def.catchall;
          for (let p of n) {
            let v = o.data[p];
            c.push({ key: { status: "valid", value: p }, value: u._parse(new U(o, v, o.path, p)), alwaysSet: p in o.data });
          }
        }
        return o.common.async ? Promise.resolve().then(async () => {
          let u = [];
          for (let p of c) {
            let v = await p.key;
            u.push({ key: v, value: await p.value, alwaysSet: p.alwaysSet });
          }
          return u;
        }).then((u) => E.mergeObjectSync(s, u)) : E.mergeObjectSync(s, c);
      }
      get shape() {
        return this._def.shape();
      }
      strict(e) {
        return x.errToObj, new j({ ...this._def, unknownKeys: "strict", ...e !== void 0 ? { errorMap: (a, s) => {
          var o, r, i, n;
          let c = (i = (r = (o = this._def).errorMap) === null || r === void 0 ? void 0 : r.call(o, a, s).message) !== null && i !== void 0 ? i : s.defaultError;
          return a.code === "unrecognized_keys" ? { message: (n = x.errToObj(e).message) !== null && n !== void 0 ? n : c } : { message: c };
        } } : {} });
      }
      strip() {
        return new j({ ...this._def, unknownKeys: "strip" });
      }
      passthrough() {
        return new j({ ...this._def, unknownKeys: "passthrough" });
      }
      setKey(e, a) {
        return this.augment({ [e]: a });
      }
      merge(e) {
        return new j({ unknownKeys: e._def.unknownKeys, catchall: e._def.catchall, shape: () => sa.mergeShapes(this._def.shape(), e._def.shape()), typeName: y.ZodObject });
      }
      catchall(e) {
        return new j({ ...this._def, catchall: e });
      }
      pick(e) {
        let a = {};
        return _.objectKeys(e).map((s) => {
          this.shape[s] && (a[s] = this.shape[s]);
        }), new j({ ...this._def, shape: () => a });
      }
      omit(e) {
        let a = {};
        return _.objectKeys(this.shape).map((s) => {
          _.objectKeys(e).indexOf(s) === -1 && (a[s] = this.shape[s]);
        }), new j({ ...this._def, shape: () => a });
      }
      deepPartial() {
        return ye(this);
      }
      partial(e) {
        let a = {};
        if (e)
          return _.objectKeys(this.shape).map((s) => {
            _.objectKeys(e).indexOf(s) === -1 ? a[s] = this.shape[s] : a[s] = this.shape[s].optional();
          }), new j({ ...this._def, shape: () => a });
        for (let s in this.shape) {
          let o = this.shape[s];
          a[s] = o.optional();
        }
        return new j({ ...this._def, shape: () => a });
      }
      required() {
        let e = {};
        for (let a in this.shape) {
          let o = this.shape[a];
          for (; o instanceof I; )
            o = o._def.innerType;
          e[a] = o;
        }
        return new j({ ...this._def, shape: () => e });
      }
      keyof() {
        return Bt(_.objectKeys(this.shape));
      }
    };
    j.create = (t, e) => new j({ shape: () => t, unknownKeys: "strip", catchall: W.create(), typeName: y.ZodObject, ...w(e) });
    j.strictCreate = (t, e) => new j({ shape: () => t, unknownKeys: "strict", catchall: W.create(), typeName: y.ZodObject, ...w(e) });
    j.lazycreate = (t, e) => new j({ shape: t, unknownKeys: "strip", catchall: W.create(), typeName: y.ZodObject, ...w(e) });
    le = class extends b {
      _parse(e) {
        let { ctx: a } = this._processInputParams(e), s = this._def.options;
        function o(r) {
          for (let n of r)
            if (n.result.status === "valid")
              return n.result;
          for (let n of r)
            if (n.result.status === "dirty")
              return a.common.issues.push(...n.ctx.common.issues), n.result;
          let i = r.map((n) => new N(n.ctx.common.issues));
          return f(a, { code: m.invalid_union, unionErrors: i }), k;
        }
        if (a.common.async)
          return Promise.all(s.map(async (r) => {
            let i = { ...a, common: { ...a.common, issues: [] }, parent: null };
            return { result: await r._parseAsync({ data: a.data, path: a.path, parent: i }), ctx: i };
          })).then(o);
        {
          let r, i = [];
          for (let c of s) {
            let u = { ...a, common: { ...a.common, issues: [] }, parent: null }, p = c._parseSync({ data: a.data, path: a.path, parent: u });
            if (p.status === "valid")
              return p;
            p.status === "dirty" && !r && (r = { result: p, ctx: u }), u.common.issues.length && i.push(u.common.issues);
          }
          if (r)
            return a.common.issues.push(...r.ctx.common.issues), r.result;
          let n = i.map((c) => new N(c));
          return f(a, { code: m.invalid_union, unionErrors: n }), k;
        }
      }
      get options() {
        return this._def.options;
      }
    };
    le.create = (t, e) => new le({ options: t, typeName: y.ZodUnion, ...w(e) });
    _e = class extends b {
      _parse(e) {
        let { ctx: a } = this._processInputParams(e);
        if (a.parsedType !== h.object)
          return f(a, { code: m.invalid_type, expected: h.object, received: a.parsedType }), k;
        let s = this.discriminator, o = a.data[s], r = this.options.get(o);
        return r ? a.common.async ? r._parseAsync({ data: a.data, path: a.path, parent: a }) : r._parseSync({ data: a.data, path: a.path, parent: a }) : (f(a, { code: m.invalid_union_discriminator, options: this.validDiscriminatorValues, path: [s] }), k);
      }
      get discriminator() {
        return this._def.discriminator;
      }
      get validDiscriminatorValues() {
        return Array.from(this.options.keys());
      }
      get options() {
        return this._def.options;
      }
      static create(e, a, s) {
        let o = /* @__PURE__ */ new Map();
        try {
          a.forEach((r) => {
            let i = r.shape[e].value;
            o.set(i, r);
          });
        } catch {
          throw new Error("The discriminator value could not be extracted from all the provided schemas");
        }
        if (o.size !== a.length)
          throw new Error("Some of the discriminator values are not unique");
        return new _e({ typeName: y.ZodDiscriminatedUnion, discriminator: e, options: o, ...w(s) });
      }
    };
    ue = class extends b {
      _parse(e) {
        let { status: a, ctx: s } = this._processInputParams(e), o = (r, i) => {
          if (Na(r) || Na(i))
            return k;
          let n = La(r.value, i.value);
          return n.valid ? ((Ia(r) || Ia(i)) && a.dirty(), { status: a.value, value: n.data }) : (f(s, { code: m.invalid_intersection_types }), k);
        };
        return s.common.async ? Promise.all([this._def.left._parseAsync({ data: s.data, path: s.path, parent: s }), this._def.right._parseAsync({ data: s.data, path: s.path, parent: s })]).then(([r, i]) => o(r, i)) : o(this._def.left._parseSync({ data: s.data, path: s.path, parent: s }), this._def.right._parseSync({ data: s.data, path: s.path, parent: s }));
      }
    };
    ue.create = (t, e, a) => new ue({ left: t, right: e, typeName: y.ZodIntersection, ...w(a) });
    D = class extends b {
      _parse(e) {
        let { status: a, ctx: s } = this._processInputParams(e);
        if (s.parsedType !== h.array)
          return f(s, { code: m.invalid_type, expected: h.array, received: s.parsedType }), k;
        if (s.data.length < this._def.items.length)
          return f(s, { code: m.too_small, minimum: this._def.items.length, inclusive: true, type: "array" }), k;
        !this._def.rest && s.data.length > this._def.items.length && (f(s, { code: m.too_big, maximum: this._def.items.length, inclusive: true, type: "array" }), a.dirty());
        let r = s.data.map((i, n) => {
          let c = this._def.items[n] || this._def.rest;
          return c ? c._parse(new U(s, i, s.path, n)) : null;
        }).filter((i) => !!i);
        return s.common.async ? Promise.all(r).then((i) => E.mergeArray(a, i)) : E.mergeArray(a, r);
      }
      get items() {
        return this._def.items;
      }
      rest(e) {
        return new D({ ...this._def, rest: e });
      }
    };
    D.create = (t, e) => {
      if (!Array.isArray(t))
        throw new Error("You must pass an array of schemas to z.tuple([ ... ])");
      return new D({ items: t, typeName: y.ZodTuple, rest: null, ...w(e) });
    };
    de = class extends b {
      get keySchema() {
        return this._def.keyType;
      }
      get valueSchema() {
        return this._def.valueType;
      }
      _parse(e) {
        let { status: a, ctx: s } = this._processInputParams(e);
        if (s.parsedType !== h.object)
          return f(s, { code: m.invalid_type, expected: h.object, received: s.parsedType }), k;
        let o = [], r = this._def.keyType, i = this._def.valueType;
        for (let n in s.data)
          o.push({ key: r._parse(new U(s, n, s.path, n)), value: i._parse(new U(s, s.data[n], s.path, n)) });
        return s.common.async ? E.mergeObjectAsync(a, o) : E.mergeObjectSync(a, o);
      }
      get element() {
        return this._def.valueType;
      }
      static create(e, a, s) {
        return a instanceof b ? new de({ keyType: e, valueType: a, typeName: y.ZodRecord, ...w(s) }) : new de({ keyType: Z.create(), valueType: e, typeName: y.ZodRecord, ...w(a) });
      }
    };
    je = class extends b {
      _parse(e) {
        let { status: a, ctx: s } = this._processInputParams(e);
        if (s.parsedType !== h.map)
          return f(s, { code: m.invalid_type, expected: h.map, received: s.parsedType }), k;
        let o = this._def.keyType, r = this._def.valueType, i = [...s.data.entries()].map(([n, c], u) => ({ key: o._parse(new U(s, n, s.path, [u, "key"])), value: r._parse(new U(s, c, s.path, [u, "value"])) }));
        if (s.common.async) {
          let n = /* @__PURE__ */ new Map();
          return Promise.resolve().then(async () => {
            for (let c of i) {
              let u = await c.key, p = await c.value;
              if (u.status === "aborted" || p.status === "aborted")
                return k;
              (u.status === "dirty" || p.status === "dirty") && a.dirty(), n.set(u.value, p.value);
            }
            return { status: a.value, value: n };
          });
        } else {
          let n = /* @__PURE__ */ new Map();
          for (let c of i) {
            let u = c.key, p = c.value;
            if (u.status === "aborted" || p.status === "aborted")
              return k;
            (u.status === "dirty" || p.status === "dirty") && a.dirty(), n.set(u.value, p.value);
          }
          return { status: a.value, value: n };
        }
      }
    };
    je.create = (t, e, a) => new je({ valueType: e, keyType: t, typeName: y.ZodMap, ...w(a) });
    X = class extends b {
      _parse(e) {
        let { status: a, ctx: s } = this._processInputParams(e);
        if (s.parsedType !== h.set)
          return f(s, { code: m.invalid_type, expected: h.set, received: s.parsedType }), k;
        let o = this._def;
        o.minSize !== null && s.data.size < o.minSize.value && (f(s, { code: m.too_small, minimum: o.minSize.value, type: "set", inclusive: true, message: o.minSize.message }), a.dirty()), o.maxSize !== null && s.data.size > o.maxSize.value && (f(s, { code: m.too_big, maximum: o.maxSize.value, type: "set", inclusive: true, message: o.maxSize.message }), a.dirty());
        let r = this._def.valueType;
        function i(c) {
          let u = /* @__PURE__ */ new Set();
          for (let p of c) {
            if (p.status === "aborted")
              return k;
            p.status === "dirty" && a.dirty(), u.add(p.value);
          }
          return { status: a.value, value: u };
        }
        let n = [...s.data.values()].map((c, u) => r._parse(new U(s, c, s.path, u)));
        return s.common.async ? Promise.all(n).then((c) => i(c)) : i(n);
      }
      min(e, a) {
        return new X({ ...this._def, minSize: { value: e, message: x.toString(a) } });
      }
      max(e, a) {
        return new X({ ...this._def, maxSize: { value: e, message: x.toString(a) } });
      }
      size(e, a) {
        return this.min(e, a).max(e, a);
      }
      nonempty(e) {
        return this.min(1, e);
      }
    };
    X.create = (t, e) => new X({ valueType: t, minSize: null, maxSize: null, typeName: y.ZodSet, ...w(e) });
    ae = class extends b {
      constructor() {
        super(...arguments), this.validate = this.implement;
      }
      _parse(e) {
        let { ctx: a } = this._processInputParams(e);
        if (a.parsedType !== h.function)
          return f(a, { code: m.invalid_type, expected: h.function, received: a.parsedType }), k;
        function s(n, c) {
          return aa({ data: n, path: a.path, errorMaps: [a.common.contextualErrorMap, a.schemaErrorMap, ea(), qe].filter((u) => !!u), issueData: { code: m.invalid_arguments, argumentsError: c } });
        }
        function o(n, c) {
          return aa({ data: n, path: a.path, errorMaps: [a.common.contextualErrorMap, a.schemaErrorMap, ea(), qe].filter((u) => !!u), issueData: { code: m.invalid_return_type, returnTypeError: c } });
        }
        let r = { errorMap: a.common.contextualErrorMap }, i = a.data;
        return this._def.returns instanceof oe ? q(async (...n) => {
          let c = new N([]), u = await this._def.args.parseAsync(n, r).catch((z) => {
            throw c.addIssue(s(n, z)), c;
          }), p = await i(...u);
          return await this._def.returns._def.type.parseAsync(p, r).catch((z) => {
            throw c.addIssue(o(p, z)), c;
          });
        }) : q((...n) => {
          let c = this._def.args.safeParse(n, r);
          if (!c.success)
            throw new N([s(n, c.error)]);
          let u = i(...c.data), p = this._def.returns.safeParse(u, r);
          if (!p.success)
            throw new N([o(u, p.error)]);
          return p.data;
        });
      }
      parameters() {
        return this._def.args;
      }
      returnType() {
        return this._def.returns;
      }
      args(...e) {
        return new ae({ ...this._def, args: D.create(e).rest(F.create()) });
      }
      returns(e) {
        return new ae({ ...this._def, returns: e });
      }
      implement(e) {
        return this.parse(e);
      }
      strictImplement(e) {
        return this.parse(e);
      }
      static create(e, a, s) {
        return new ae({ args: e || D.create([]).rest(F.create()), returns: a || F.create(), typeName: y.ZodFunction, ...w(s) });
      }
    };
    ze = class extends b {
      get schema() {
        return this._def.getter();
      }
      _parse(e) {
        let { ctx: a } = this._processInputParams(e);
        return this._def.getter()._parse({ data: a.data, path: a.path, parent: a });
      }
    };
    ze.create = (t, e) => new ze({ getter: t, typeName: y.ZodLazy, ...w(e) });
    Re = class extends b {
      _parse(e) {
        if (e.data !== this._def.value) {
          let a = this._getOrReturnCtx(e);
          return f(a, { code: m.invalid_literal, expected: this._def.value }), k;
        }
        return { status: "valid", value: e.data };
      }
      get value() {
        return this._def.value;
      }
    };
    Re.create = (t, e) => new Re({ value: t, typeName: y.ZodLiteral, ...w(e) });
    Te = class extends b {
      _parse(e) {
        if (typeof e.data != "string") {
          let a = this._getOrReturnCtx(e), s = this._def.values;
          return f(a, { expected: _.joinValues(s), received: a.parsedType, code: m.invalid_type }), k;
        }
        if (this._def.values.indexOf(e.data) === -1) {
          let a = this._getOrReturnCtx(e), s = this._def.values;
          return f(a, { received: a.data, code: m.invalid_enum_value, options: s }), k;
        }
        return q(e.data);
      }
      get options() {
        return this._def.values;
      }
      get enum() {
        let e = {};
        for (let a of this._def.values)
          e[a] = a;
        return e;
      }
      get Values() {
        let e = {};
        for (let a of this._def.values)
          e[a] = a;
        return e;
      }
      get Enum() {
        let e = {};
        for (let a of this._def.values)
          e[a] = a;
        return e;
      }
    };
    Te.create = Bt;
    Ce = class extends b {
      _parse(e) {
        let a = _.getValidEnumValues(this._def.values), s = this._getOrReturnCtx(e);
        if (s.parsedType !== h.string && s.parsedType !== h.number) {
          let o = _.objectValues(a);
          return f(s, { expected: _.joinValues(o), received: s.parsedType, code: m.invalid_type }), k;
        }
        if (a.indexOf(e.data) === -1) {
          let o = _.objectValues(a);
          return f(s, { received: s.data, code: m.invalid_enum_value, options: o }), k;
        }
        return q(e.data);
      }
      get enum() {
        return this._def.values;
      }
    };
    Ce.create = (t, e) => new Ce({ values: t, typeName: y.ZodNativeEnum, ...w(e) });
    oe = class extends b {
      _parse(e) {
        let { ctx: a } = this._processInputParams(e);
        if (a.parsedType !== h.promise && a.common.async === false)
          return f(a, { code: m.invalid_type, expected: h.promise, received: a.parsedType }), k;
        let s = a.parsedType === h.promise ? a.data : Promise.resolve(a.data);
        return q(s.then((o) => this._def.type.parseAsync(o, { path: a.path, errorMap: a.common.contextualErrorMap })));
      }
    };
    oe.create = (t, e) => new oe({ type: t, typeName: y.ZodPromise, ...w(e) });
    $ = class extends b {
      innerType() {
        return this._def.schema;
      }
      _parse(e) {
        let { status: a, ctx: s } = this._processInputParams(e), o = this._def.effect || null;
        if (o.type === "preprocess") {
          let i = o.transform(s.data);
          return s.common.async ? Promise.resolve(i).then((n) => this._def.schema._parseAsync({ data: n, path: s.path, parent: s })) : this._def.schema._parseSync({ data: i, path: s.path, parent: s });
        }
        let r = { addIssue: (i) => {
          f(s, i), i.fatal ? a.abort() : a.dirty();
        }, get path() {
          return s.path;
        } };
        if (r.addIssue = r.addIssue.bind(r), o.type === "refinement") {
          let i = (n) => {
            let c = o.refinement(n, r);
            if (s.common.async)
              return Promise.resolve(c);
            if (c instanceof Promise)
              throw new Error("Async refinement encountered during synchronous parse operation. Use .parseAsync instead.");
            return n;
          };
          if (s.common.async === false) {
            let n = this._def.schema._parseSync({ data: s.data, path: s.path, parent: s });
            return n.status === "aborted" ? k : (n.status === "dirty" && a.dirty(), i(n.value), { status: a.value, value: n.value });
          } else
            return this._def.schema._parseAsync({ data: s.data, path: s.path, parent: s }).then((n) => n.status === "aborted" ? k : (n.status === "dirty" && a.dirty(), i(n.value).then(() => ({ status: a.value, value: n.value }))));
        }
        if (o.type === "transform")
          if (s.common.async === false) {
            let i = this._def.schema._parseSync({ data: s.data, path: s.path, parent: s });
            if (!ta(i))
              return i;
            let n = o.transform(i.value, r);
            if (n instanceof Promise)
              throw new Error("Asynchronous transform encountered during synchronous parse operation. Use .parseAsync instead.");
            return { status: a.value, value: n };
          } else
            return this._def.schema._parseAsync({ data: s.data, path: s.path, parent: s }).then((i) => ta(i) ? Promise.resolve(o.transform(i.value, r)).then((n) => ({ status: a.value, value: n })) : i);
        _.assertNever(o);
      }
    };
    $.create = (t, e, a) => new $({ schema: t, typeName: y.ZodEffects, effect: e, ...w(a) });
    $.createWithPreprocess = (t, e, a) => new $({ schema: e, effect: { type: "preprocess", transform: t }, typeName: y.ZodEffects, ...w(a) });
    I = class extends b {
      _parse(e) {
        return this._getType(e) === h.undefined ? q(void 0) : this._def.innerType._parse(e);
      }
      unwrap() {
        return this._def.innerType;
      }
    };
    I.create = (t, e) => new I({ innerType: t, typeName: y.ZodOptional, ...w(e) });
    J = class extends b {
      _parse(e) {
        return this._getType(e) === h.null ? q(null) : this._def.innerType._parse(e);
      }
      unwrap() {
        return this._def.innerType;
      }
    };
    J.create = (t, e) => new J({ innerType: t, typeName: y.ZodNullable, ...w(e) });
    Me = class extends b {
      _parse(e) {
        let { ctx: a } = this._processInputParams(e), s = a.data;
        return a.parsedType === h.undefined && (s = this._def.defaultValue()), this._def.innerType._parse({ data: s, path: a.path, parent: a });
      }
      removeDefault() {
        return this._def.innerType;
      }
    };
    Me.create = (t, e) => new I({ innerType: t, typeName: y.ZodOptional, ...w(e) });
    Se = class extends b {
      _parse(e) {
        if (this._getType(e) !== h.nan) {
          let s = this._getOrReturnCtx(e);
          return f(s, { code: m.invalid_type, expected: h.nan, received: s.parsedType }), k;
        }
        return { status: "valid", value: e.data };
      }
    };
    Se.create = (t) => new Se({ typeName: y.ZodNaN, ...w(t) });
    Zo = Symbol("zod_brand");
    oa = class extends b {
      _parse(e) {
        let { ctx: a } = this._processInputParams(e), s = a.data;
        return this._def.type._parse({ data: s, path: a.path, parent: a });
      }
      unwrap() {
        return this._def.type;
      }
    };
    Zt = (t, e = {}, a) => t ? se.create().superRefine((s, o) => {
      if (!t(s)) {
        let r = typeof e == "function" ? e(s) : e, i = typeof r == "string" ? { message: r } : r;
        o.addIssue({ code: "custom", ...i, fatal: a });
      }
    }) : se.create();
    Vo = { object: j.lazycreate };
    (function(t) {
      t.ZodString = "ZodString", t.ZodNumber = "ZodNumber", t.ZodNaN = "ZodNaN", t.ZodBigInt = "ZodBigInt", t.ZodBoolean = "ZodBoolean", t.ZodDate = "ZodDate", t.ZodUndefined = "ZodUndefined", t.ZodNull = "ZodNull", t.ZodAny = "ZodAny", t.ZodUnknown = "ZodUnknown", t.ZodNever = "ZodNever", t.ZodVoid = "ZodVoid", t.ZodArray = "ZodArray", t.ZodObject = "ZodObject", t.ZodUnion = "ZodUnion", t.ZodDiscriminatedUnion = "ZodDiscriminatedUnion", t.ZodIntersection = "ZodIntersection", t.ZodTuple = "ZodTuple", t.ZodRecord = "ZodRecord", t.ZodMap = "ZodMap", t.ZodSet = "ZodSet", t.ZodFunction = "ZodFunction", t.ZodLazy = "ZodLazy", t.ZodLiteral = "ZodLiteral", t.ZodEnum = "ZodEnum", t.ZodEffects = "ZodEffects", t.ZodNativeEnum = "ZodNativeEnum", t.ZodOptional = "ZodOptional", t.ZodNullable = "ZodNullable", t.ZodDefault = "ZodDefault", t.ZodPromise = "ZodPromise", t.ZodBranded = "ZodBranded";
    })(y || (y = {}));
    Fo = (t, e = { message: `Input not instance of ${t.name}` }) => Zt((a) => a instanceof t, e, true);
    Vt = Z.create;
    Ft = K.create;
    Ko = Se.create;
    Xo = ke.create;
    Kt = be.create;
    Jo = te.create;
    Go = ve.create;
    Yo = we.create;
    Qo = se.create;
    er = F.create;
    ar = W.create;
    tr = xe.create;
    sr = L.create;
    or = j.create;
    rr = j.strictCreate;
    ir = le.create;
    nr = _e.create;
    cr = ue.create;
    lr = D.create;
    ur = de.create;
    dr = je.create;
    mr = X.create;
    pr = ae.create;
    hr = ze.create;
    gr = Re.create;
    fr = Te.create;
    yr = Ce.create;
    kr = oe.create;
    $t = $.create;
    br = I.create;
    vr = J.create;
    wr = $.createWithPreprocess;
    xr = () => Vt().optional();
    _r = () => Ft().optional();
    jr = () => Kt().optional();
    zr = k;
    d = Object.freeze({ __proto__: null, getParsedType: ee, ZodParsedType: h, defaultErrorMap: qe, setErrorMap: Io, getErrorMap: ea, makeIssue: aa, EMPTY_PATH: Uo, addIssueToContext: f, ParseStatus: E, INVALID: k, DIRTY: Lo, OK: q, isAborted: Na, isDirty: Ia, isValid: ta, isAsync: Ua, ZodType: b, ZodString: Z, ZodNumber: K, ZodBigInt: ke, ZodBoolean: be, ZodDate: te, ZodUndefined: ve, ZodNull: we, ZodAny: se, ZodUnknown: F, ZodNever: W, ZodVoid: xe, ZodArray: L, get objectUtil() {
      return sa;
    }, ZodObject: j, ZodUnion: le, ZodDiscriminatedUnion: _e, ZodIntersection: ue, ZodTuple: D, ZodRecord: de, ZodMap: je, ZodSet: X, ZodFunction: ae, ZodLazy: ze, ZodLiteral: Re, ZodEnum: Te, ZodNativeEnum: Ce, ZodPromise: oe, ZodEffects: $, ZodTransformer: $, ZodOptional: I, ZodNullable: J, ZodDefault: Me, ZodNaN: Se, BRAND: Zo, ZodBranded: oa, custom: Zt, Schema: b, ZodSchema: b, late: Vo, get ZodFirstPartyTypeKind() {
      return y;
    }, any: Qo, array: sr, bigint: Xo, boolean: Kt, date: Jo, discriminatedUnion: nr, effect: $t, enum: fr, function: pr, instanceof: Fo, intersection: cr, lazy: hr, literal: gr, map: dr, nan: Ko, nativeEnum: yr, never: ar, null: Yo, nullable: vr, number: Ft, object: or, oboolean: jr, onumber: _r, optional: br, ostring: xr, preprocess: wr, promise: kr, record: ur, set: mr, strictObject: rr, string: Vt, transformer: $t, tuple: lr, undefined: Go, union: ir, unknown: er, void: tr, NEVER: zr, ZodIssueCode: m, quotelessJson: No, ZodError: N });
    es = {};
    Ts(es, { CORSOptionsSchema: () => Yt, ConfigurationSchema: () => $a, EarlyHintsObject: () => Jt, EarlyHintsSchema: () => Gt, RouteConfigSchema: () => Qt });
    l();
    l();
    l();
    l();
    Xt = d.union([d.literal("GET"), d.literal("HEAD"), d.literal("POST"), d.literal("PUT"), d.literal("DELETE"), d.literal("CONNECT"), d.literal("OPTIONS"), d.literal("TRACE"), d.literal("PATCH")]);
    Jt = d.object({ mode: d.union([d.literal("provide-images"), d.literal("provide-scripts"), d.literal("provide-stylesheets")]).array().min(1).max(3) });
    Gt = d.union([d.literal(true), Jt]).transform((t) => typeof t == "boolean" ? { mode: [] } : t);
    Yt = d.object({ origin: d.union([d.boolean(), d.array(d.string()), d.literal("*")]).optional(), methods: d.union([d.array(Xt), d.literal("*")]).optional(), exposedHeaders: d.union([d.array(d.string()), d.literal("*")]).optional().transform((t) => Array.isArray(t) ? t.filter(Boolean) : t), allowedHeaders: d.union([d.array(d.string()), d.literal("*")]).optional().transform((t) => Array.isArray(t) ? t.filter(Boolean) : t), credentials: d.boolean().optional(), maxAge: d.number().optional() });
    Da = d.object({ timeoutMs: d.number().optional().default(3e4), statusCode: d.number().optional().default(200), website: d.object({ mode: d.union([d.literal(true), d.literal("spa")]).optional(), resources: d.array(d.string()).optional(), rewriteLinks: d.boolean().default(true), earlyHints: Gt.optional(), cors: Yt.optional() }).optional() });
    Rr = Da.extend({ url: d.string(), text: d.never().optional(), r2Bucket: d.never().optional() });
    Tr = Da.extend({ text: d.string(), url: d.never().optional(), r2Bucket: d.never().optional() });
    Cr = Da.extend({ url: d.never().optional(), text: d.never().optional(), r2Bucket: d.object({ accountId: d.string(), bucketName: d.string(), accessKeyId: d.string(), secretAccessKey: d.string() }) });
    Qt = d.object({ description: d.string().optional().default(""), from: d.object({ pattern: d.string(), stripFromPath: d.boolean().optional().default(true), alsoMatchWWWSubdomain: d.boolean().optional().default(false), methods: d.array(Xt).optional() }), to: d.union([Rr, Tr, Cr]), headers: d.object({ request: d.record(d.string()).optional(), response: d.record(d.string()).optional() }).optional(), cf: d.object({ options: d.object({ cacheEverything: d.boolean().optional(), cacheKey: d.string().optional(), cacheTtl: d.number().optional(), cacheTtlByStatus: d.record(d.number()).optional(), scrapeShield: d.boolean().optional(), apps: d.boolean().optional(), mirage: d.boolean().optional(), polish: d.union([d.literal("lossy"), d.literal("lossless"), d.literal("off")]).optional(), resolveOverride: d.string().optional() }) }).optional() });
    $a = d.object({ routes: d.array(Qt), global: d.object({ disable: d.boolean().optional().default(false), debug: d.boolean().optional().default(false) }).optional().default({ disable: false, debug: false }) });
    l();
    Sr = /\/\*$/;
    Er = /([^/]{1})\*$/;
    Wa = "@@@";
    Ie = "+++";
    rs = (t, e) => t.slice(-3) === e;
    Hr = (t) => rs(t, Ie);
    Ne = (t) => rs(t, Wa);
    Ee = (t) => Ne(t) || Hr(t);
    as = (t) => t.replace(Wa, "").replace(Ie, "");
    ts = (t) => t.split("/").filter(Boolean);
    ss = (t) => t.slice(-1);
    os = (t) => t.replace(Sr, Ie).replace(Er, `$1${Wa}`);
    is = (t, e) => {
      let a = os(t.from.pathname), s = os(e.from.pathname), o = ts(a), r = ts(s), i = as(a), n = as(s);
      return a === "/" && s === Ie ? -1 : a === Ie && s === "/" ? 1 : o.length === r.length ? i === n ? !Ee(a) && !Ee(s) ? ss(o).length > ss(r).length ? -1 : 1 : !Ee(a) && Ee(s) ? -1 : Ee(a) && !Ee(s) ? 1 : Ne(a) && !Ne(s) ? -1 : !Ne(a) && Ne(s) ? 1 : 0 : i.length > n.length ? -1 : 1 : o.length > r.length ? -1 : 1;
    };
    Pr = (t) => (t.to.website?.resources ?? []).filter(Boolean).map((e) => Oe(t.from.alsoMatchWWWSubdomain ? Je(e).href : xa(e)));
    ns = (t = {}) => Object.fromEntries(Object.entries(t).filter((e) => Array.isArray(e)).filter(([e]) => e).map(([e, a]) => [String(e).trim(), a ? String(a).trim() : ""]));
    cs = (t) => {
      let e = "";
      return t instanceof N ? e = JSON.stringify(t.format()).replace(/("_errors":\[\],?)/g, "").replace(/,}/g, "}") : e = t.message, e;
    };
    Ba = (t, e) => {
      try {
        let a = $a.safeParse(e);
        if (!a.success)
          return a.error;
        let s = a.data;
        return { global: s.global, routes: [...s.routes].filter(Boolean).map((o, r) => ({ _index: r, description: o.description, from: Oe(o.from.pattern), stripFromPath: o.from.stripFromPath, alsoMatchWWWSubdomain: o.from.alsoMatchWWWSubdomain, methods: o.from.methods, cors: o.to.website ? o.to.website.cors : void 0, cf: o.cf, to: o.to.url ? Oe(o.to.url) : void 0, toText: o.to.text, toR2Bucket: o.to.r2Bucket, website: o.to.website ? o.to.website.mode ? o.to.website.mode : true : false, earlyHints: o.to.website?.earlyHints, rewriteLinks: Boolean(o.to.website?.rewriteLinks), resources: Pr(o), requestHeaders: ns(o.headers?.request), responseHeaders: ns(o.headers?.response), statusCode: o.to.statusCode, timeoutMs: o.to.timeoutMs })).sort(is) };
      } catch (a) {
        if (a instanceof Error || a instanceof N)
          return a;
        throw a;
      }
    };
    l();
    ms = me(ne());
    l();
    l();
    Or = /\/$/;
    ls = /^\//;
    Ar = /\/?\*$/;
    He = (t) => {
      let e = false, a;
      try {
        a = new URL(t), e = true;
      } catch {
        a = new URL("https://placeholder.com" + t);
      }
      return { isFQDN: e, target: a };
    };
    ra = (t, e, a) => {
      let s = new URL(t.href);
      return e && (s.hostname = a.hostname), e ? s.href : s.pathname;
    };
    us = (t, e, a) => {
      let s = new URL(t.href);
      if (e) {
        let { hostname: r } = a.from;
        !s.hostname.includes("www.") && a.from.hostname.includes("www.") && (r = a.from.hostname.replace("www.", "")), s.hostname = r;
      }
      let o = a.from.pathname.replace(Ar, "").replace(Or, "");
      return a.website && a.website !== "spa" && (s.pathname = [o, s.pathname.replace(ls, "")].join(s.pathname.replace(ls, "") ? "/" : "")), t.pathname.length > 1 && t.pathname.endsWith("/") && !s.pathname.endsWith("/") && (s.pathname += "/"), e ? s.href : s.pathname;
    };
    ds = (t, e) => ({ element: function(a) {
      switch (a.tagName) {
        case "img": {
          let s = a.getAttribute("src");
          if (s && !s.startsWith("data:")) {
            let { isFQDN: o, target: r } = He(s), i = ra(r, o, t);
            e.push({ url: i, fileType: "image" });
          }
          break;
        }
        case "script": {
          let s = a.getAttribute("src");
          if (s && !s.startsWith("data:")) {
            let { isFQDN: o, target: r } = He(s), i = ra(r, o, t);
            e.push({ url: i, fileType: "script" });
          }
          break;
        }
        case "link": {
          let s = a.getAttribute("href");
          if (s && !s.startsWith("data:")) {
            let { isFQDN: o, target: r } = He(s), i = ra(r, o, t);
            e.push({ url: i, fileType: "style" });
          }
          break;
        }
      }
    } });
    l();
    Ue = (t) => (e) => ({ element: function(a) {
      let s = a.getAttribute(e);
      if (s) {
        let { isFQDN: o, target: r } = He(s);
        if (o && t.to && !r.hostname.includes(t.to.hostname))
          return;
        let i = us(r, o, t);
        a.setAttribute(e, i);
      }
    } });
    re = class {
      element() {
      }
    };
    ps = (t, e, a, s) => {
      let o = new re(), r = new re(), i = new re(), n = new re(), c = new re(), u = new re(), p = "img:not([loading=lazy])", v = "link[rel=stylesheet]", z = "script";
      if (e.earlyHints) {
        if (!s)
          throw new Error("provide preloads for earlyHints");
        o = ds(t, s);
        let R = { images: e.earlyHints.mode.includes("provide-images"), scripts: e.earlyHints.mode.includes("provide-scripts"), stylesheets: e.earlyHints.mode.includes("provide-stylesheets") };
        R.scripts && (z = "script[data-early-hints=preload]"), R.images && (p = "img[data-early-hints=preload]"), R.stylesheets && (v = "link[rel=stylesheet][data-early-hints=preload]");
      }
      return e.rewriteLinks && (c = Ue(e)("src"), n = Ue(e)("src"), r = Ue(e)("href"), i = Ue(e)("href")), ms.isDev && (u = Qe(a)), new HTMLRewriter().on("a", i).on("link", r).on("script", n).on("img", c).on("body", u).on(p, o).on(v, o).on(z, o).transform(a);
    };
    l();
    l();
    hs = /\/\*$/;
    gs = /([^/]{1})\*$/;
    fs = (t, e) => e.test(t);
    qr = (t) => fs(t, hs);
    Mr = (t) => fs(t, gs);
    ys = (t) => Mr(t) || qr(t);
    Za = (t) => t.replace(gs, "").replace(hs, "");
    ks = (t) => t.statusCode && t.statusCode >= 300 && t.statusCode < 400;
    Va = (t, e) => {
      let a = false, s = false, o = [], r = [];
      for (let i = 0; i < e.routes.length; i++) {
        let n = e.routes[i];
        for (let c = 0; c < n.resources.length; c++) {
          let u = n.resources[c];
          _a(t, u, n) && (r.push([i, c]), s = true);
        }
        if (!s && _a(t, n.from, n)) {
          if (o.unshift(n), !ys(n.from.pathname) || a)
            break;
          a = true;
        }
      }
      if (o.length === 2) {
        let [i, n] = o, c = Za(i.from.pathname), u = Za(n.from.pathname);
        c.length > u.length && (o = [i]), c.length < u.length && (o = [n]);
      }
      return { matchedResources: r.map(([i]) => e.routes[i]), matchedRedirect: o.find((i) => ks(i)), matchedRoute: o.find((i) => !ks(i)) };
    };
    ia = {};
    bs = (t, e) => It(t, e.map((a) => Ge(a, t.installOptions.global.debug)));
    Fa = async (t, e) => {
      let { request: a, next: s, logger: o } = t;
      if (ia = Ba(t, e), ia instanceof Error) {
        let v = ia;
        return s(a).then((z) => va(z, cs(v), e));
      }
      let r = wa(t, ia), { requestUrl: i, installOptions: n } = r;
      if (n.global.disable)
        return s(a).then((v) => V(n.global.debug, v.body, v));
      let { matchedResources: c, matchedRedirect: u, matchedRoute: p } = Va(a, n);
      if (u) {
        if (!u.to)
          return s(a).then((z) => va(z, "to.url is required in redirect routes", e));
        await o.logText("Running RedirectConfig:", JSON.stringify(u, null, 2));
        let v = Y(i.href, u, { domain: u.to.hostname, protocol: u.to.protocol, pathname: u.to.pathname });
        return Response.redirect(v.href, u.statusCode ?? 307);
      }
      if (c.length > 0)
        return bs(r, c).then((v) => V(n.global.debug, v.body, v));
      if (p) {
        await o.logText("Running ProcessedRoute", JSON.stringify(p, null, 2));
        let v = Ge(p, n.global.debug), z = await Nt(r, v);
        if (z.headers.get("content-type")?.includes("text/html")) {
          let R = p.earlyHints ? [] : void 0, B = ps(i, p, z, R);
          if (p.earlyHints && R) {
            let ca = await B.text();
            return R.forEach((Pe) => {
              z.headers.append("link", `<${Pe.url}>; rel=preload; as=${Pe.fileType}`);
            }), V(n.global.debug, ca, z);
          }
          return V(n.global.debug, B.body, z);
        }
        return V(n.global.debug, z.body, z);
      }
      return s(a).then((v) => V(n.global.debug, v.body, v));
    };
  }
});

// _middleware.ts
var import_app_utils, onRequest;
var init_middleware = __esm({
  "_middleware.ts"() {
    init_functionsRoutes_0_6627680816661201();
    import_app_utils = __toESM(require_build());
    init_core();
    onRequest = async (context) => {
      const { pluginArgs } = context;
      const { config } = pluginArgs;
      const baseContainer = (0, import_app_utils.makeBaseContainer)(
        {
          request: context.request,
          waitUntil: context.waitUntil,
          passThroughOnException: context.next,
          next: context.next
        },
        {
          appName: "proxyflare",
          loggerEndpoint: null
        }
      );
      try {
        return Fa(baseContainer, config);
      } catch (error) {
        return baseContainer.passThroughOnException();
      }
    };
  }
});

// ../../../../../../tmp/functionsRoutes-0.6627680816661201.mjs
var routes;
var init_functionsRoutes_0_6627680816661201 = __esm({
  "../../../../../../tmp/functionsRoutes-0.6627680816661201.mjs"() {
    init_middleware();
    routes = [
      {
        routePath: "/",
        mountPath: "/",
        method: "",
        middlewares: [onRequest],
        modules: []
      }
    ];
  }
});

// ../node_modules/wrangler/templates/pages-template-plugin.ts
init_functionsRoutes_0_6627680816661201();

// ../node_modules/wrangler/node_modules/path-to-regexp/dist.es2015/index.js
init_functionsRoutes_0_6627680816661201();
function lexer(str) {
  var tokens = [];
  var i = 0;
  while (i < str.length) {
    var char = str[i];
    if (char === "*" || char === "+" || char === "?") {
      tokens.push({ type: "MODIFIER", index: i, value: str[i++] });
      continue;
    }
    if (char === "\\") {
      tokens.push({ type: "ESCAPED_CHAR", index: i++, value: str[i++] });
      continue;
    }
    if (char === "{") {
      tokens.push({ type: "OPEN", index: i, value: str[i++] });
      continue;
    }
    if (char === "}") {
      tokens.push({ type: "CLOSE", index: i, value: str[i++] });
      continue;
    }
    if (char === ":") {
      var name = "";
      var j2 = i + 1;
      while (j2 < str.length) {
        var code = str.charCodeAt(j2);
        if (code >= 48 && code <= 57 || code >= 65 && code <= 90 || code >= 97 && code <= 122 || code === 95) {
          name += str[j2++];
          continue;
        }
        break;
      }
      if (!name)
        throw new TypeError("Missing parameter name at ".concat(i));
      tokens.push({ type: "NAME", index: i, value: name });
      i = j2;
      continue;
    }
    if (char === "(") {
      var count = 1;
      var pattern = "";
      var j2 = i + 1;
      if (str[j2] === "?") {
        throw new TypeError('Pattern cannot start with "?" at '.concat(j2));
      }
      while (j2 < str.length) {
        if (str[j2] === "\\") {
          pattern += str[j2++] + str[j2++];
          continue;
        }
        if (str[j2] === ")") {
          count--;
          if (count === 0) {
            j2++;
            break;
          }
        } else if (str[j2] === "(") {
          count++;
          if (str[j2 + 1] !== "?") {
            throw new TypeError("Capturing groups are not allowed at ".concat(j2));
          }
        }
        pattern += str[j2++];
      }
      if (count)
        throw new TypeError("Unbalanced pattern at ".concat(i));
      if (!pattern)
        throw new TypeError("Missing pattern at ".concat(i));
      tokens.push({ type: "PATTERN", index: i, value: pattern });
      i = j2;
      continue;
    }
    tokens.push({ type: "CHAR", index: i, value: str[i++] });
  }
  tokens.push({ type: "END", index: i, value: "" });
  return tokens;
}
function parse(str, options) {
  if (options === void 0) {
    options = {};
  }
  var tokens = lexer(str);
  var _a2 = options.prefixes, prefixes = _a2 === void 0 ? "./" : _a2;
  var defaultPattern = "[^".concat(escapeString(options.delimiter || "/#?"), "]+?");
  var result = [];
  var key = 0;
  var i = 0;
  var path = "";
  var tryConsume = function(type) {
    if (i < tokens.length && tokens[i].type === type)
      return tokens[i++].value;
  };
  var mustConsume = function(type) {
    var value2 = tryConsume(type);
    if (value2 !== void 0)
      return value2;
    var _a3 = tokens[i], nextType = _a3.type, index = _a3.index;
    throw new TypeError("Unexpected ".concat(nextType, " at ").concat(index, ", expected ").concat(type));
  };
  var consumeText = function() {
    var result2 = "";
    var value2;
    while (value2 = tryConsume("CHAR") || tryConsume("ESCAPED_CHAR")) {
      result2 += value2;
    }
    return result2;
  };
  while (i < tokens.length) {
    var char = tryConsume("CHAR");
    var name = tryConsume("NAME");
    var pattern = tryConsume("PATTERN");
    if (name || pattern) {
      var prefix = char || "";
      if (prefixes.indexOf(prefix) === -1) {
        path += prefix;
        prefix = "";
      }
      if (path) {
        result.push(path);
        path = "";
      }
      result.push({
        name: name || key++,
        prefix,
        suffix: "",
        pattern: pattern || defaultPattern,
        modifier: tryConsume("MODIFIER") || ""
      });
      continue;
    }
    var value = char || tryConsume("ESCAPED_CHAR");
    if (value) {
      path += value;
      continue;
    }
    if (path) {
      result.push(path);
      path = "";
    }
    var open = tryConsume("OPEN");
    if (open) {
      var prefix = consumeText();
      var name_1 = tryConsume("NAME") || "";
      var pattern_1 = tryConsume("PATTERN") || "";
      var suffix = consumeText();
      mustConsume("CLOSE");
      result.push({
        name: name_1 || (pattern_1 ? key++ : ""),
        pattern: name_1 && !pattern_1 ? defaultPattern : pattern_1,
        prefix,
        suffix,
        modifier: tryConsume("MODIFIER") || ""
      });
      continue;
    }
    mustConsume("END");
  }
  return result;
}
function match(str, options) {
  var keys = [];
  var re2 = pathToRegexp(str, keys, options);
  return regexpToFunction(re2, keys, options);
}
function regexpToFunction(re2, keys, options) {
  if (options === void 0) {
    options = {};
  }
  var _a2 = options.decode, decode = _a2 === void 0 ? function(x2) {
    return x2;
  } : _a2;
  return function(pathname) {
    var m2 = re2.exec(pathname);
    if (!m2)
      return false;
    var path = m2[0], index = m2.index;
    var params = /* @__PURE__ */ Object.create(null);
    var _loop_1 = function(i2) {
      if (m2[i2] === void 0)
        return "continue";
      var key = keys[i2 - 1];
      if (key.modifier === "*" || key.modifier === "+") {
        params[key.name] = m2[i2].split(key.prefix + key.suffix).map(function(value) {
          return decode(value, key);
        });
      } else {
        params[key.name] = decode(m2[i2], key);
      }
    };
    for (var i = 1; i < m2.length; i++) {
      _loop_1(i);
    }
    return { path, index, params };
  };
}
function escapeString(str) {
  return str.replace(/([.+*?=^!:${}()[\]|/\\])/g, "\\$1");
}
function flags(options) {
  return options && options.sensitive ? "" : "i";
}
function regexpToRegexp(path, keys) {
  if (!keys)
    return path;
  var groupsRegex = /\((?:\?<(.*?)>)?(?!\?)/g;
  var index = 0;
  var execResult = groupsRegex.exec(path.source);
  while (execResult) {
    keys.push({
      name: execResult[1] || index++,
      prefix: "",
      suffix: "",
      modifier: "",
      pattern: ""
    });
    execResult = groupsRegex.exec(path.source);
  }
  return path;
}
function arrayToRegexp(paths, keys, options) {
  var parts = paths.map(function(path) {
    return pathToRegexp(path, keys, options).source;
  });
  return new RegExp("(?:".concat(parts.join("|"), ")"), flags(options));
}
function stringToRegexp(path, keys, options) {
  return tokensToRegexp(parse(path, options), keys, options);
}
function tokensToRegexp(tokens, keys, options) {
  if (options === void 0) {
    options = {};
  }
  var _a2 = options.strict, strict = _a2 === void 0 ? false : _a2, _b = options.start, start = _b === void 0 ? true : _b, _c = options.end, end = _c === void 0 ? true : _c, _d = options.encode, encode = _d === void 0 ? function(x2) {
    return x2;
  } : _d, _e2 = options.delimiter, delimiter = _e2 === void 0 ? "/#?" : _e2, _f = options.endsWith, endsWith = _f === void 0 ? "" : _f;
  var endsWithRe = "[".concat(escapeString(endsWith), "]|$");
  var delimiterRe = "[".concat(escapeString(delimiter), "]");
  var route = start ? "^" : "";
  for (var _i = 0, tokens_1 = tokens; _i < tokens_1.length; _i++) {
    var token = tokens_1[_i];
    if (typeof token === "string") {
      route += escapeString(encode(token));
    } else {
      var prefix = escapeString(encode(token.prefix));
      var suffix = escapeString(encode(token.suffix));
      if (token.pattern) {
        if (keys)
          keys.push(token);
        if (prefix || suffix) {
          if (token.modifier === "+" || token.modifier === "*") {
            var mod = token.modifier === "*" ? "?" : "";
            route += "(?:".concat(prefix, "((?:").concat(token.pattern, ")(?:").concat(suffix).concat(prefix, "(?:").concat(token.pattern, "))*)").concat(suffix, ")").concat(mod);
          } else {
            route += "(?:".concat(prefix, "(").concat(token.pattern, ")").concat(suffix, ")").concat(token.modifier);
          }
        } else {
          if (token.modifier === "+" || token.modifier === "*") {
            route += "((?:".concat(token.pattern, ")").concat(token.modifier, ")");
          } else {
            route += "(".concat(token.pattern, ")").concat(token.modifier);
          }
        }
      } else {
        route += "(?:".concat(prefix).concat(suffix, ")").concat(token.modifier);
      }
    }
  }
  if (end) {
    if (!strict)
      route += "".concat(delimiterRe, "?");
    route += !options.endsWith ? "$" : "(?=".concat(endsWithRe, ")");
  } else {
    var endToken = tokens[tokens.length - 1];
    var isEndDelimited = typeof endToken === "string" ? delimiterRe.indexOf(endToken[endToken.length - 1]) > -1 : endToken === void 0;
    if (!strict) {
      route += "(?:".concat(delimiterRe, "(?=").concat(endsWithRe, "))?");
    }
    if (!isEndDelimited) {
      route += "(?=".concat(delimiterRe, "|").concat(endsWithRe, ")");
    }
  }
  return new RegExp(route, flags(options));
}
function pathToRegexp(path, keys, options) {
  if (path instanceof RegExp)
    return regexpToRegexp(path, keys);
  if (Array.isArray(path))
    return arrayToRegexp(path, keys, options);
  return stringToRegexp(path, keys, options);
}

// ../node_modules/wrangler/templates/pages-template-plugin.ts
var escapeRegex = /[.+?^${}()|[\]\\]/g;
function* executeRequest(request, relativePathname) {
  for (const route of [...routes].reverse()) {
    if (route.method && route.method !== request.method) {
      continue;
    }
    const routeMatcher = match(route.routePath.replace(escapeRegex, "\\$&"), {
      end: false
    });
    const mountMatcher = match(route.mountPath.replace(escapeRegex, "\\$&"), {
      end: false
    });
    const matchResult = routeMatcher(relativePathname);
    const mountMatchResult = mountMatcher(relativePathname);
    if (matchResult && mountMatchResult) {
      for (const handler of route.middlewares.flat()) {
        yield {
          handler,
          params: matchResult.params,
          path: mountMatchResult.path
        };
      }
    }
  }
  for (const route of routes) {
    if (route.method && route.method !== request.method) {
      continue;
    }
    const routeMatcher = match(route.routePath.replace(escapeRegex, "\\$&"), {
      end: true
    });
    const mountMatcher = match(route.mountPath.replace(escapeRegex, "\\$&"), {
      end: false
    });
    const matchResult = routeMatcher(relativePathname);
    const mountMatchResult = mountMatcher(relativePathname);
    if (matchResult && mountMatchResult && route.modules.length) {
      for (const handler of route.modules.flat()) {
        yield {
          handler,
          params: matchResult.params,
          path: matchResult.path
        };
      }
      break;
    }
  }
}
function pages_template_plugin_default(pluginArgs) {
  const onRequest2 = async (workerContext) => {
    let { request } = workerContext;
    const { env, next, data } = workerContext;
    const url = new URL(request.url);
    const relativePathname = `/${url.pathname.replace(workerContext.functionPath, "") || ""}`.replace(/^\/\//, "/");
    const handlerIterator = executeRequest(request, relativePathname);
    const pluginNext = async (input, init) => {
      if (input !== void 0) {
        request = new Request(input, init);
      }
      const result = handlerIterator.next();
      if (result.done === false) {
        const { handler, params, path } = result.value;
        const context = {
          request,
          functionPath: workerContext.functionPath + path,
          next: pluginNext,
          params,
          data,
          pluginArgs,
          env,
          waitUntil: workerContext.waitUntil.bind(workerContext),
          passThroughOnException: workerContext.passThroughOnException.bind(workerContext)
        };
        const response = await handler(context);
        return cloneResponse(response);
      } else {
        return next();
      }
    };
    return pluginNext();
  };
  return onRequest2;
}
var cloneResponse = (response) => new Response(
  [101, 204, 205, 304].includes(response.status) ? null : response.body,
  response
);
export {
  pages_template_plugin_default as default
};
